### YamlMime:PythonClass
uid: azure.mgmt.frontdoor.models.RulesEngineMatchCondition
name: RulesEngineMatchCondition
fullName: azure.mgmt.frontdoor.models.RulesEngineMatchCondition
module: azure.mgmt.frontdoor.models
inheritances:
- msrest.serialization.Model
summary: 'Define a match condition.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'RulesEngineMatchCondition(*, rules_engine_match_variable: str | RulesEngineMatchVariable,
    rules_engine_operator: str | RulesEngineOperator, rules_engine_match_value: List[str],
    selector: str | None = None, negate_condition: bool | None = None, transforms:
    List[str | Transform] | None = None, **kwargs)'
  parameters:
  - name: rules_engine_match_variable
    description: 'Required. Match Variable. Possible values include:

      "IsMobile", "RemoteAddr", "RequestMethod", "QueryString", "PostArgs", "RequestUri",

      "RequestPath", "RequestFilename", "RequestFilenameExtension", "RequestHeader",
      "RequestBody",

      "RequestScheme".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.frontdoor.models.RulesEngineMatchVariable>
  - name: selector
    description: Name of selector in RequestHeader or RequestBody to be matched.
    types:
    - <xref:str>
  - name: rules_engine_operator
    description: 'Required. Describes operator to apply to the match condition.

      Possible values include: "Any", "IPMatch", "GeoMatch", "Equal", "Contains",
      "LessThan",

      "GreaterThan", "LessThanOrEqual", "GreaterThanOrEqual", "BeginsWith", "EndsWith".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.frontdoor.models.RulesEngineOperator>
  - name: negate_condition
    description: Describes if this is negate condition or not.
    types:
    - <xref:bool>
  - name: rules_engine_match_value
    description: 'Required. Match values to match against. The operator will

      apply to each value in here with OR semantics. If any of them match the variable
      with the given

      operator this match condition is considered a match.'
    types:
    - <xref:azure.mgmt.frontdoor.aio.operations.FrontDoorsOperations.list>[<xref:str>]
  - name: transforms
    description: List of transforms.
    types:
    - <xref:azure.mgmt.frontdoor.aio.operations.FrontDoorsOperations.list>[<xref:str>
    - <xref:azure.mgmt.frontdoor.models.Transform>]
variables:
- description: 'Required. Match Variable. Possible values include:

    "IsMobile", "RemoteAddr", "RequestMethod", "QueryString", "PostArgs", "RequestUri",

    "RequestPath", "RequestFilename", "RequestFilenameExtension", "RequestHeader",
    "RequestBody",

    "RequestScheme".'
  name: rules_engine_match_variable
  types:
  - <xref:str>
  - <xref:azure.mgmt.frontdoor.models.RulesEngineMatchVariable>
- description: Name of selector in RequestHeader or RequestBody to be matched.
  name: selector
  types:
  - <xref:str>
- description: 'Required. Describes operator to apply to the match condition.

    Possible values include: "Any", "IPMatch", "GeoMatch", "Equal", "Contains", "LessThan",

    "GreaterThan", "LessThanOrEqual", "GreaterThanOrEqual", "BeginsWith", "EndsWith".'
  name: rules_engine_operator
  types:
  - <xref:str>
  - <xref:azure.mgmt.frontdoor.models.RulesEngineOperator>
- description: Describes if this is negate condition or not.
  name: negate_condition
  types:
  - <xref:bool>
- description: 'Required. Match values to match against. The operator will

    apply to each value in here with OR semantics. If any of them match the variable
    with the given

    operator this match condition is considered a match.'
  name: rules_engine_match_value
  types:
  - <xref:list>[<xref:str>]
- description: List of transforms.
  name: transforms
  types:
  - <xref:list>[<xref:str>
  - <xref:azure.mgmt.frontdoor.models.Transform>]
methods:
- uid: azure.mgmt.frontdoor.models.RulesEngineMatchCondition.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.frontdoor.models.RulesEngineMatchCondition.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.frontdoor.models.RulesEngineMatchCondition.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.frontdoor.models.RulesEngineMatchCondition.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.frontdoor.models.RulesEngineMatchCondition.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.frontdoor.models.RulesEngineMatchCondition.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.frontdoor.models.RulesEngineMatchCondition.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
