### YamlMime:PythonClass
uid: azure.mgmt.frontdoor.models.Backend
name: Backend
fullName: azure.mgmt.frontdoor.models.Backend
module: azure.mgmt.frontdoor.models
inheritances:
- msrest.serialization.Model
summary: 'Backend address of a frontDoor load balancer.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'Backend(*, address: str | None = None, private_link_alias: str | None =
    None, private_link_resource_id: str | None = None, private_link_location: str
    | None = None, private_link_approval_message: str | None = None, http_port: int
    | None = None, https_port: int | None = None, enabled_state: str | BackendEnabledState
    | None = None, priority: int | None = None, weight: int | None = None, backend_host_header:
    str | None = None, **kwargs)'
  parameters:
  - name: address
    description: Location of the backend (IP address or FQDN).
    types:
    - <xref:str>
  - name: private_link_alias
    description: 'The Alias of the Private Link resource. Populating this optional

      field indicates that this backend is ''Private''.'
    types:
    - <xref:str>
  - name: private_link_resource_id
    description: 'The Resource Id of the Private Link resource. Populating

      this optional field indicates that this backend is ''Private''.'
    types:
    - <xref:str>
  - name: private_link_location
    description: 'The location of the Private Link resource. Required only if

      ''privateLinkResourceId'' is populated.'
    types:
    - <xref:str>
  - name: private_link_approval_message
    description: 'A custom message to be included in the approval request

      to connect to the Private Link.'
    types:
    - <xref:str>
  - name: http_port
    description: The HTTP TCP port number. Must be between 1 and 65535.
    types:
    - <xref:int>
  - name: https_port
    description: The HTTPS TCP port number. Must be between 1 and 65535.
    types:
    - <xref:int>
  - name: enabled_state
    description: 'Whether to enable use of this backend. Permitted values are ''Enabled''

      or ''Disabled''. Possible values include: "Enabled", "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.frontdoor.models.BackendEnabledState>
  - name: priority
    description: 'Priority to use for load balancing. Higher priorities will not be
      used for

      load balancing if any lower priority backend is healthy.'
    types:
    - <xref:int>
  - name: weight
    description: Weight of this endpoint for load balancing purposes.
    types:
    - <xref:int>
  - name: backend_host_header
    description: 'The value to use as the host header sent to the backend. If blank

      or unspecified, this defaults to the incoming host.'
    types:
    - <xref:str>
variables:
- description: Location of the backend (IP address or FQDN).
  name: address
  types:
  - <xref:str>
- description: 'The Alias of the Private Link resource. Populating this optional

    field indicates that this backend is ''Private''.'
  name: private_link_alias
  types:
  - <xref:str>
- description: 'The Resource Id of the Private Link resource. Populating this

    optional field indicates that this backend is ''Private''.'
  name: private_link_resource_id
  types:
  - <xref:str>
- description: 'The location of the Private Link resource. Required only if

    ''privateLinkResourceId'' is populated.'
  name: private_link_location
  types:
  - <xref:str>
- description: 'The Approval status for the connection to the Private Link.

    Possible values include: "Pending", "Approved", "Rejected", "Disconnected", "Timeout".'
  name: private_endpoint_status
  types:
  - <xref:str>
  - <xref:azure.mgmt.frontdoor.models.PrivateEndpointStatus>
- description: 'A custom message to be included in the approval request to

    connect to the Private Link.'
  name: private_link_approval_message
  types:
  - <xref:str>
- description: The HTTP TCP port number. Must be between 1 and 65535.
  name: http_port
  types:
  - <xref:int>
- description: The HTTPS TCP port number. Must be between 1 and 65535.
  name: https_port
  types:
  - <xref:int>
- description: 'Whether to enable use of this backend. Permitted values are ''Enabled''
    or

    ''Disabled''. Possible values include: "Enabled", "Disabled".'
  name: enabled_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.frontdoor.models.BackendEnabledState>
- description: 'Priority to use for load balancing. Higher priorities will not be
    used for load

    balancing if any lower priority backend is healthy.'
  name: priority
  types:
  - <xref:int>
- description: Weight of this endpoint for load balancing purposes.
  name: weight
  types:
  - <xref:int>
- description: 'The value to use as the host header sent to the backend. If blank
    or

    unspecified, this defaults to the incoming host.'
  name: backend_host_header
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.frontdoor.models.Backend.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.frontdoor.models.Backend.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.frontdoor.models.Backend.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.frontdoor.models.Backend.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.frontdoor.models.Backend.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.frontdoor.models.Backend.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.frontdoor.models.Backend.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
