### YamlMime:PythonClass
uid: azure.mgmt.cosmosdb.models.DataCenterResourceProperties
name: DataCenterResourceProperties
fullName: azure.mgmt.cosmosdb.models.DataCenterResourceProperties
module: azure.mgmt.cosmosdb.models
inheritances:
- azure.mgmt.cosmosdb._serialization.Model
summary: 'Properties of a managed Cassandra data center.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'DataCenterResourceProperties(*, provisioning_state: str | _models.ManagedCassandraProvisioningState
    | None = None, data_center_location: str | None = None, delegated_subnet_id: str
    | None = None, node_count: int | None = None, base64_encoded_cassandra_yaml_fragment:
    str | None = None, managed_disk_customer_key_uri: str | None = None, backup_storage_customer_key_uri:
    str | None = None, sku: str | None = None, disk_sku: str | None = None, disk_capacity:
    int | None = None, availability_zone: bool | None = None, authentication_method_ldap_properties:
    _models.AuthenticationMethodLdapProperties | None = None, deallocated: bool |
    None = None, provision_error: _models.CassandraError | None = None, **kwargs:
    Any)'
  parameters:
  - name: provisioning_state
    description: 'The status of the resource at the time the operation was called.

      Known values are: "Creating", "Updating", "Deleting", "Succeeded", "Failed",
      and "Canceled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.cosmosdb.models.ManagedCassandraProvisioningState>
  - name: data_center_location
    description: The region this data center should be created in.
    types:
    - <xref:str>
  - name: delegated_subnet_id
    description: 'Resource id of a subnet the nodes in this data center should have

      their network interfaces connected to. The subnet must be in the same region
      specified in

      ''dataCenterLocation'' and must be able to route to the subnet specified in
      the cluster''s

      ''delegatedManagementSubnetId'' property. This resource id will be of the form

      ''/subscriptions/`<subscription id>`/resourceGroups/`<resource

      group>`/providers/Microsoft.Network/virtualNetworks/`<virtual

      network>`/subnets/`<subnet>`''.'
    types:
    - <xref:str>
  - name: node_count
    description: 'The number of nodes the data center should have. This is the desired

      number. After it is set, it may take some time for the data center to be scaled
      to match. To

      monitor the number of nodes and their status, use the fetchNodeStatus method
      on the cluster.'
    types:
    - <xref:int>
  - name: base64_encoded_cassandra_yaml_fragment
    description: 'A fragment of a cassandra.yaml configuration

      file to be included in the cassandra.yaml for all nodes in this data center.
      The fragment

      should be Base64 encoded, and only a subset of keys are allowed.'
    types:
    - <xref:str>
  - name: managed_disk_customer_key_uri
    description: 'Key uri to use for encryption of managed disks. Ensure

      the system assigned identity of the cluster has been assigned appropriate permissions(key

      get/wrap/unwrap permissions) on the key.'
    types:
    - <xref:str>
  - name: backup_storage_customer_key_uri
    description: 'Indicates the Key Uri of the customer key to use for

      encryption of the backup storage account.'
    types:
    - <xref:str>
  - name: sku
    description: Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2.
    types:
    - <xref:str>
  - name: disk_sku
    description: Disk SKU used for data centers. Default value is P30.
    types:
    - <xref:str>
  - name: disk_capacity
    description: Number of disks attached to each node. Default is 4.
    types:
    - <xref:int>
  - name: availability_zone
    description: 'If the data center has Availability Zone support, apply it to the

      Virtual Machine ScaleSet that host the cassandra data center virtual machines.'
    types:
    - <xref:bool>
  - name: authentication_method_ldap_properties
    description: 'Ldap authentication method properties. This

      feature is in preview.'
    types:
    - <xref:azure.mgmt.cosmosdb.models.AuthenticationMethodLdapProperties>
  - name: deallocated
    description: Whether the data center has been deallocated.
    types:
    - <xref:bool>
  - name: provision_error
    description: Error related to resource provisioning.
    types:
    - <xref:azure.mgmt.cosmosdb.models.CassandraError>
variables:
- description: 'The status of the resource at the time the operation was called.

    Known values are: "Creating", "Updating", "Deleting", "Succeeded", "Failed", and
    "Canceled".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.cosmosdb.models.ManagedCassandraProvisioningState>
- description: The region this data center should be created in.
  name: data_center_location
  types:
  - <xref:str>
- description: 'Resource id of a subnet the nodes in this data center should have

    their network interfaces connected to. The subnet must be in the same region specified
    in

    ''dataCenterLocation'' and must be able to route to the subnet specified in the
    cluster''s

    ''delegatedManagementSubnetId'' property. This resource id will be of the form

    ''/subscriptions/`<subscription id>`/resourceGroups/`<resource

    group>`/providers/Microsoft.Network/virtualNetworks/`<virtual

    network>`/subnets/`<subnet>`''.'
  name: delegated_subnet_id
  types:
  - <xref:str>
- description: 'The number of nodes the data center should have. This is the desired
    number.

    After it is set, it may take some time for the data center to be scaled to match.
    To monitor

    the number of nodes and their status, use the fetchNodeStatus method on the cluster.'
  name: node_count
  types:
  - <xref:int>
- description: 'IP addresses for seed nodes in this data center. This is for reference.

    Generally you will want to use the seedNodes property on the cluster, which aggregates
    the seed

    nodes from all data centers in the cluster.'
  name: seed_nodes
  types:
  - <xref:list>[<xref:azure.mgmt.cosmosdb.models.SeedNode>]
- description: 'A fragment of a cassandra.yaml configuration file

    to be included in the cassandra.yaml for all nodes in this data center. The fragment
    should be

    Base64 encoded, and only a subset of keys are allowed.'
  name: base64_encoded_cassandra_yaml_fragment
  types:
  - <xref:str>
- description: 'Key uri to use for encryption of managed disks. Ensure the

    system assigned identity of the cluster has been assigned appropriate permissions(key

    get/wrap/unwrap permissions) on the key.'
  name: managed_disk_customer_key_uri
  types:
  - <xref:str>
- description: 'Indicates the Key Uri of the customer key to use for

    encryption of the backup storage account.'
  name: backup_storage_customer_key_uri
  types:
  - <xref:str>
- description: Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2.
  name: sku
  types:
  - <xref:str>
- description: Disk SKU used for data centers. Default value is P30.
  name: disk_sku
  types:
  - <xref:str>
- description: Number of disks attached to each node. Default is 4.
  name: disk_capacity
  types:
  - <xref:int>
- description: 'If the data center has Availability Zone support, apply it to the

    Virtual Machine ScaleSet that host the cassandra data center virtual machines.'
  name: availability_zone
  types:
  - <xref:bool>
- description: 'Ldap authentication method properties. This

    feature is in preview.'
  name: authentication_method_ldap_properties
  types:
  - <xref:azure.mgmt.cosmosdb.models.AuthenticationMethodLdapProperties>
- description: Whether the data center has been deallocated.
  name: deallocated
  types:
  - <xref:bool>
- description: Error related to resource provisioning.
  name: provision_error
  types:
  - <xref:azure.mgmt.cosmosdb.models.CassandraError>
methods:
- uid: azure.mgmt.cosmosdb.models.DataCenterResourceProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.cosmosdb.models.DataCenterResourceProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.cosmosdb.models.DataCenterResourceProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.cosmosdb.models.DataCenterResourceProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.cosmosdb.models.DataCenterResourceProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.cosmosdb.models.DataCenterResourceProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
