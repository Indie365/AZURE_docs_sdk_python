### YamlMime:PythonClass
uid: azure.mgmt.network.v2021_02_01_preview.models.NspLinkReference
name: NspLinkReference
fullName: azure.mgmt.network.v2021_02_01_preview.models.NspLinkReference
module: azure.mgmt.network.v2021_02_01_preview.models
inheritances:
- azure.mgmt.network.v2021_02_01_preview.models._models_py3.ProxyResource
summary: 'The network security perimeter linkReference resource.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'NspLinkReference(*, local_inbound_profiles: List[str] | None = None, status:
    str | _models.NspLinkStatus | None = None, **kwargs)'
  parameters:
  - name: local_inbound_profiles
    description: 'Local Inbound profile names to which Inbound is allowed. Use

      [''*''] to allow inbound to all profiles. It''s default value is [''*''].'
    types:
    - <xref:azure.mgmt.network.v2021_02_01_preview.aio.operations.ActiveConnectivityConfigurationsOperations.list>[<xref:str>]
  - name: status
    description: 'The NSP linkReference state. It cannot be changed if link is created
      in

      auto-approval mode. Known values are: "Approved", "Pending", "Rejected", and
      "Disconnected".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.network.v2021_02_01_preview.models.NspLinkStatus>
variables:
- description: Resource ID.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: A unique read-only string that changes whenever the resource is updated.
  name: etag
  types:
  - <xref:str>
- description: 'The provisioning state of the NSP LinkReference resource. Known

    values are: "Succeeded", "Creating", "Updating", "Deleting", "Accepted", and "Failed".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2021_02_01_preview.models.NspProvisioningState>
- description: 'Perimeter ARM Id for the remote NSP with which the link is

    created.'
  name: remote_perimeter_resource_id
  types:
  - <xref:str>
- description: Remote NSP Guid with which the link is created.
  name: remote_perimeter_guid
  types:
  - <xref:str>
- description: Local Inbound profile names to which Inbound is allowed. Use ['     *']
    to allow inbound to all profiles. It's default value is ['*'].
  name: local_inbound_profiles
  types:
  - <xref:list>[<xref:str>]
- description: 'Local Outbound profile names from which Outbound is allowed. Use

    [''*''] to allow outbound from all profiles. It''s default value is [''*''].'
  name: local_outbound_profiles
  types:
  - <xref:list>[<xref:str>]
- description: 'Remote Inbound profile names to which Inbound is allowed. [''*'']

    value implies inbound is allowed to all profiles at remote perimeter. This property
    can only be

    updated from remote perimeter.'
  name: remote_inbound_profiles
  types:
  - <xref:list>[<xref:str>]
- description: 'Remote Outbound profile names from which Outbound is allowed.

    [''*''] value implies outbound is allowed from all profiles at remote perimeter.
    This property

    can only be updated from remote perimeter.'
  name: remote_outbound_profiles
  types:
  - <xref:list>[<xref:str>]
- description: 'A message sent by the remote NSP link admin for connection request.
    In case

    of Auto-approved flow, it is default to ''Auto Approved''.'
  name: description
  types:
  - <xref:str>
- description: 'The NSP linkReference state. It cannot be changed if link is created
    in

    auto-approval mode. Known values are: "Approved", "Pending", "Rejected", and "Disconnected".'
  name: status
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2021_02_01_preview.models.NspLinkStatus>
methods:
- uid: azure.mgmt.network.v2021_02_01_preview.models.NspLinkReference.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.network.v2021_02_01_preview.models.NspLinkReference.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.network.v2021_02_01_preview.models.NspLinkReference.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.network.v2021_02_01_preview.models.NspLinkReference.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.network.v2021_02_01_preview.models.NspLinkReference.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.network.v2021_02_01_preview.models.NspLinkReference.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
