### YamlMime:PythonClass
uid: azure.mgmt.network.v2019_06_01.models.VpnClientIPsecParameters
name: VpnClientIPsecParameters
fullName: azure.mgmt.network.v2019_06_01.models.VpnClientIPsecParameters
module: azure.mgmt.network.v2019_06_01.models
inheritances:
- azure.mgmt.network._serialization.Model
summary: 'An IPSec parameters for a virtual network gateway P2S connection.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'VpnClientIPsecParameters(*, sa_life_time_seconds: int, sa_data_size_kilobytes:
    int, ipsec_encryption: str | _models.IpsecEncryption, ipsec_integrity: str | _models.IpsecIntegrity,
    ike_encryption: str | _models.IkeEncryption, ike_integrity: str | _models.IkeIntegrity,
    dh_group: str | _models.DhGroup, pfs_group: str | _models.PfsGroup, **kwargs)'
  parameters:
  - name: sa_life_time_seconds
    description: 'The IPSec Security Association (also called Quick Mode or Phase

      2 SA) lifetime in seconds for P2S client. Required.'
    types:
    - <xref:int>
  - name: sa_data_size_kilobytes
    description: 'The IPSec Security Association (also called Quick Mode or

      Phase 2 SA) payload size in KB for P2S client.. Required.'
    types:
    - <xref:int>
  - name: ipsec_encryption
    description: 'The IPSec encryption algorithm (IKE phase 1). Required. Known values

      are: "None", "DES", "DES3", "AES128", "AES192", "AES256", "GCMAES128", "GCMAES192",
      and

      "GCMAES256".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.network.v2019_06_01.models.IpsecEncryption>
  - name: ipsec_integrity
    description: 'The IPSec integrity algorithm (IKE phase 1). Required. Known values

      are: "MD5", "SHA1", "SHA256", "GCMAES128", "GCMAES192", and "GCMAES256".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.network.v2019_06_01.models.IpsecIntegrity>
  - name: ike_encryption
    description: 'The IKE encryption algorithm (IKE phase 2). Required. Known values

      are: "DES", "DES3", "AES128", "AES192", "AES256", "GCMAES256", and "GCMAES128".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.network.v2019_06_01.models.IkeEncryption>
  - name: ike_integrity
    description: 'The IKE integrity algorithm (IKE phase 2). Required. Known values
      are:

      "MD5", "SHA1", "SHA256", "SHA384", "GCMAES256", and "GCMAES128".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.network.v2019_06_01.models.IkeIntegrity>
  - name: dh_group
    description: 'The DH Group used in IKE Phase 1 for initial SA. Required. Known
      values are:

      "None", "DHGroup1", "DHGroup2", "DHGroup14", "DHGroup2048", "ECP256", "ECP384",
      and

      "DHGroup24".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.network.v2019_06_01.models.DhGroup>
  - name: pfs_group
    description: 'The Pfs Group used in IKE Phase 2 for new child SA. Required. Known
      values

      are: "None", "PFS1", "PFS2", "PFS2048", "ECP256", "ECP384", "PFS24", "PFS14",
      and "PFSMM".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.network.v2019_06_01.models.PfsGroup>
variables:
- description: 'The IPSec Security Association (also called Quick Mode or Phase 2

    SA) lifetime in seconds for P2S client. Required.'
  name: sa_life_time_seconds
  types:
  - <xref:int>
- description: 'The IPSec Security Association (also called Quick Mode or Phase 2

    SA) payload size in KB for P2S client.. Required.'
  name: sa_data_size_kilobytes
  types:
  - <xref:int>
- description: 'The IPSec encryption algorithm (IKE phase 1). Required. Known values

    are: "None", "DES", "DES3", "AES128", "AES192", "AES256", "GCMAES128", "GCMAES192",
    and

    "GCMAES256".'
  name: ipsec_encryption
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2019_06_01.models.IpsecEncryption>
- description: 'The IPSec integrity algorithm (IKE phase 1). Required. Known values
    are:

    "MD5", "SHA1", "SHA256", "GCMAES128", "GCMAES192", and "GCMAES256".'
  name: ipsec_integrity
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2019_06_01.models.IpsecIntegrity>
- description: 'The IKE encryption algorithm (IKE phase 2). Required. Known values
    are:

    "DES", "DES3", "AES128", "AES192", "AES256", "GCMAES256", and "GCMAES128".'
  name: ike_encryption
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2019_06_01.models.IkeEncryption>
- description: 'The IKE integrity algorithm (IKE phase 2). Required. Known values
    are:

    "MD5", "SHA1", "SHA256", "SHA384", "GCMAES256", and "GCMAES128".'
  name: ike_integrity
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2019_06_01.models.IkeIntegrity>
- description: 'The DH Group used in IKE Phase 1 for initial SA. Required. Known values
    are:

    "None", "DHGroup1", "DHGroup2", "DHGroup14", "DHGroup2048", "ECP256", "ECP384",
    and

    "DHGroup24".'
  name: dh_group
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2019_06_01.models.DhGroup>
- description: 'The Pfs Group used in IKE Phase 2 for new child SA. Required. Known
    values

    are: "None", "PFS1", "PFS2", "PFS2048", "ECP256", "ECP384", "PFS24", "PFS14",
    and "PFSMM".'
  name: pfs_group
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2019_06_01.models.PfsGroup>
methods:
- uid: azure.mgmt.network.v2019_06_01.models.VpnClientIPsecParameters.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.network.v2019_06_01.models.VpnClientIPsecParameters.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.network.v2019_06_01.models.VpnClientIPsecParameters.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.network.v2019_06_01.models.VpnClientIPsecParameters.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.network.v2019_06_01.models.VpnClientIPsecParameters.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.network.v2019_06_01.models.VpnClientIPsecParameters.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
