### YamlMime:PythonClass
uid: azure.mgmt.network.v2019_12_01.models.ExpressRouteCrossConnectionPeering
name: ExpressRouteCrossConnectionPeering
fullName: azure.mgmt.network.v2019_12_01.models.ExpressRouteCrossConnectionPeering
module: azure.mgmt.network.v2019_12_01.models
inheritances:
- azure.mgmt.network.v2019_12_01.models._models_py3.SubResource
summary: 'Peering in an ExpressRoute Cross Connection resource.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'ExpressRouteCrossConnectionPeering(*, id: str | None = None, name: str
    | None = None, peering_type: str | _models.ExpressRoutePeeringType | None = None,
    state: str | _models.ExpressRoutePeeringState | None = None, peer_asn: int | None
    = None, primary_peer_address_prefix: str | None = None, secondary_peer_address_prefix:
    str | None = None, shared_key: str | None = None, vlan_id: int | None = None,
    microsoft_peering_config: _models.ExpressRouteCircuitPeeringConfig | None = None,
    gateway_manager_etag: str | None = None, ipv6_peering_config: _models.Ipv6ExpressRouteCircuitPeeringConfig
    | None = None, **kwargs)'
  parameters:
  - name: id
    description: Resource ID.
    types:
    - <xref:str>
  - name: name
    description: 'The name of the resource that is unique within a resource group.
      This name can

      be used to access the resource.'
    types:
    - <xref:str>
  - name: peering_type
    description: 'The peering type. Known values are: "AzurePublicPeering",

      "AzurePrivatePeering", and "MicrosoftPeering".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.network.v2019_12_01.models.ExpressRoutePeeringType>
  - name: state
    description: 'The peering state. Known values are: "Disabled" and "Enabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.network.v2019_12_01.models.ExpressRoutePeeringState>
  - name: peer_asn
    description: The peer ASN.
    types:
    - <xref:int>
  - name: primary_peer_address_prefix
    description: The primary address prefix.
    types:
    - <xref:str>
  - name: secondary_peer_address_prefix
    description: The secondary address prefix.
    types:
    - <xref:str>
  - name: shared_key
    description: The shared key.
    types:
    - <xref:str>
  - name: vlan_id
    description: The VLAN ID.
    types:
    - <xref:int>
  - name: microsoft_peering_config
    description: The Microsoft peering configuration.
    types:
    - <xref:azure.mgmt.network.v2019_12_01.models.ExpressRouteCircuitPeeringConfig>
  - name: gateway_manager_etag
    description: The GatewayManager Etag.
    types:
    - <xref:str>
  - name: ipv6_peering_config
    description: The IPv6 peering configuration.
    types:
    - <xref:azure.mgmt.network.v2019_12_01.models.Ipv6ExpressRouteCircuitPeeringConfig>
variables:
- description: Resource ID.
  name: id
  types:
  - <xref:str>
- description: 'The name of the resource that is unique within a resource group. This
    name can be

    used to access the resource.'
  name: name
  types:
  - <xref:str>
- description: A unique read-only string that changes whenever the resource is updated.
  name: etag
  types:
  - <xref:str>
- description: 'The peering type. Known values are: "AzurePublicPeering",

    "AzurePrivatePeering", and "MicrosoftPeering".'
  name: peering_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2019_12_01.models.ExpressRoutePeeringType>
- description: 'The peering state. Known values are: "Disabled" and "Enabled".'
  name: state
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2019_12_01.models.ExpressRoutePeeringState>
- description: The Azure ASN.
  name: azure_asn
  types:
  - <xref:int>
- description: The peer ASN.
  name: peer_asn
  types:
  - <xref:int>
- description: The primary address prefix.
  name: primary_peer_address_prefix
  types:
  - <xref:str>
- description: The secondary address prefix.
  name: secondary_peer_address_prefix
  types:
  - <xref:str>
- description: The primary port.
  name: primary_azure_port
  types:
  - <xref:str>
- description: The secondary port.
  name: secondary_azure_port
  types:
  - <xref:str>
- description: The shared key.
  name: shared_key
  types:
  - <xref:str>
- description: The VLAN ID.
  name: vlan_id
  types:
  - <xref:int>
- description: The Microsoft peering configuration.
  name: microsoft_peering_config
  types:
  - <xref:azure.mgmt.network.v2019_12_01.models.ExpressRouteCircuitPeeringConfig>
- description: 'The provisioning state of the express route cross connection peering

    resource. Known values are: "Succeeded", "Updating", "Deleting", and "Failed".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2019_12_01.models.ProvisioningState>
- description: The GatewayManager Etag.
  name: gateway_manager_etag
  types:
  - <xref:str>
- description: Who was the last to modify the peering.
  name: last_modified_by
  types:
  - <xref:str>
- description: The IPv6 peering configuration.
  name: ipv6_peering_config
  types:
  - <xref:azure.mgmt.network.v2019_12_01.models.Ipv6ExpressRouteCircuitPeeringConfig>
methods:
- uid: azure.mgmt.network.v2019_12_01.models.ExpressRouteCrossConnectionPeering.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.network.v2019_12_01.models.ExpressRouteCrossConnectionPeering.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.network.v2019_12_01.models.ExpressRouteCrossConnectionPeering.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.network.v2019_12_01.models.ExpressRouteCrossConnectionPeering.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.network.v2019_12_01.models.ExpressRouteCrossConnectionPeering.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.network.v2019_12_01.models.ExpressRouteCrossConnectionPeering.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
