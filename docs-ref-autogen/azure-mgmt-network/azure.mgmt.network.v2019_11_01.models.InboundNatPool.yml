### YamlMime:PythonClass
uid: azure.mgmt.network.v2019_11_01.models.InboundNatPool
name: InboundNatPool
fullName: azure.mgmt.network.v2019_11_01.models.InboundNatPool
module: azure.mgmt.network.v2019_11_01.models
inheritances:
- azure.mgmt.network.v2019_11_01.models._models_py3.SubResource
summary: 'Inbound NAT pool of the load balancer.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'InboundNatPool(*, id: str | None = None, name: str | None = None, frontend_ip_configuration:
    _models.SubResource | None = None, protocol: str | _models.TransportProtocol |
    None = None, frontend_port_range_start: int | None = None, frontend_port_range_end:
    int | None = None, backend_port: int | None = None, idle_timeout_in_minutes: int
    | None = None, enable_floating_ip: bool | None = None, enable_tcp_reset: bool
    | None = None, **kwargs)'
  parameters:
  - name: id
    description: Resource ID.
    types:
    - <xref:str>
  - name: name
    description: 'The name of the resource that is unique within the set of inbound
      NAT pools used

      by the load balancer. This name can be used to access the resource.'
    types:
    - <xref:str>
  - name: frontend_ip_configuration
    description: A reference to frontend IP addresses.
    types:
    - <xref:azure.mgmt.network.v2019_11_01.models.SubResource>
  - name: protocol
    description: 'The reference to the transport protocol used by the inbound NAT
      pool. Known

      values are: "Udp", "Tcp", and "All".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.network.v2019_11_01.models.TransportProtocol>
  - name: frontend_port_range_start
    description: 'The first port number in the range of external ports that

      will be used to provide Inbound Nat to NICs associated with a load balancer.
      Acceptable values

      range between 1 and 65534.'
    types:
    - <xref:int>
  - name: frontend_port_range_end
    description: 'The last port number in the range of external ports that will

      be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable
      values range

      between 1 and 65535.'
    types:
    - <xref:int>
  - name: backend_port
    description: 'The port used for internal connections on the endpoint. Acceptable

      values are between 1 and 65535.'
    types:
    - <xref:int>
  - name: idle_timeout_in_minutes
    description: 'The timeout for the TCP idle connection. The value can be set

      between 4 and 30 minutes. The default value is 4 minutes. This element is only
      used when the

      protocol is set to TCP.'
    types:
    - <xref:int>
  - name: enable_floating_ip
    description: 'Configures a virtual machine''s endpoint for the floating IP

      capability required to configure a SQL AlwaysOn Availability Group. This setting
      is required

      when using the SQL AlwaysOn Availability Groups in SQL server. This setting
      can''t be changed

      after you create the endpoint.'
    types:
    - <xref:bool>
  - name: enable_tcp_reset
    description: 'Receive bidirectional TCP Reset on TCP flow idle timeout or

      unexpected connection termination. This element is only used when the protocol
      is set to TCP.'
    types:
    - <xref:bool>
variables:
- description: Resource ID.
  name: id
  types:
  - <xref:str>
- description: 'The name of the resource that is unique within the set of inbound
    NAT pools used by

    the load balancer. This name can be used to access the resource.'
  name: name
  types:
  - <xref:str>
- description: A unique read-only string that changes whenever the resource is updated.
  name: etag
  types:
  - <xref:str>
- description: Type of the resource.
  name: type
  types:
  - <xref:str>
- description: A reference to frontend IP addresses.
  name: frontend_ip_configuration
  types:
  - <xref:azure.mgmt.network.v2019_11_01.models.SubResource>
- description: 'The reference to the transport protocol used by the inbound NAT pool.
    Known

    values are: "Udp", "Tcp", and "All".'
  name: protocol
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2019_11_01.models.TransportProtocol>
- description: 'The first port number in the range of external ports that will

    be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable
    values range

    between 1 and 65534.'
  name: frontend_port_range_start
  types:
  - <xref:int>
- description: 'The last port number in the range of external ports that will be

    used to provide Inbound Nat to NICs associated with a load balancer. Acceptable
    values range

    between 1 and 65535.'
  name: frontend_port_range_end
  types:
  - <xref:int>
- description: 'The port used for internal connections on the endpoint. Acceptable
    values

    are between 1 and 65535.'
  name: backend_port
  types:
  - <xref:int>
- description: 'The timeout for the TCP idle connection. The value can be set

    between 4 and 30 minutes. The default value is 4 minutes. This element is only
    used when the

    protocol is set to TCP.'
  name: idle_timeout_in_minutes
  types:
  - <xref:int>
- description: 'Configures a virtual machine''s endpoint for the floating IP

    capability required to configure a SQL AlwaysOn Availability Group. This setting
    is required

    when using the SQL AlwaysOn Availability Groups in SQL server. This setting can''t
    be changed

    after you create the endpoint.'
  name: enable_floating_ip
  types:
  - <xref:bool>
- description: 'Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected

    connection termination. This element is only used when the protocol is set to
    TCP.'
  name: enable_tcp_reset
  types:
  - <xref:bool>
- description: 'The provisioning state of the inbound NAT pool resource. Known values

    are: "Succeeded", "Updating", "Deleting", and "Failed".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2019_11_01.models.ProvisioningState>
methods:
- uid: azure.mgmt.network.v2019_11_01.models.InboundNatPool.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.network.v2019_11_01.models.InboundNatPool.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.network.v2019_11_01.models.InboundNatPool.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.network.v2019_11_01.models.InboundNatPool.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.network.v2019_11_01.models.InboundNatPool.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.network.v2019_11_01.models.InboundNatPool.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
