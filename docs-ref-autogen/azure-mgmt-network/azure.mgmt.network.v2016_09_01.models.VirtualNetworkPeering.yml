### YamlMime:PythonClass
uid: azure.mgmt.network.v2016_09_01.models.VirtualNetworkPeering
name: VirtualNetworkPeering
fullName: azure.mgmt.network.v2016_09_01.models.VirtualNetworkPeering
module: azure.mgmt.network.v2016_09_01.models
inheritances:
- azure.mgmt.network.v2016_09_01.models._models_py3.SubResource
summary: Peerings in a virtual network resource.
constructor:
  syntax: 'VirtualNetworkPeering(*, id: str | None = None, name: str | None = None,
    etag: str | None = None, allow_virtual_network_access: bool | None = None, allow_forwarded_traffic:
    bool | None = None, allow_gateway_transit: bool | None = None, use_remote_gateways:
    bool | None = None, remote_virtual_network: _models.SubResource | None = None,
    peering_state: str | _models.VirtualNetworkPeeringState | None = None, provisioning_state:
    str | None = None, **kwargs)'
  parameters:
  - name: id
    description: Resource ID.
    types:
    - <xref:str>
  - name: name
    description: 'The name of the resource that is unique within a resource group.
      This name can

      be used to access the resource.'
    types:
    - <xref:str>
  - name: etag
    description: A unique read-only string that changes whenever the resource is updated.
    types:
    - <xref:str>
  - name: allow_virtual_network_access
    description: 'Whether the VMs in the linked virtual network space

      would be able to access all the VMs in local Virtual network space.'
    types:
    - <xref:bool>
  - name: allow_forwarded_traffic
    description: 'Whether the forwarded traffic from the VMs in the remote

      virtual network will be allowed/disallowed.'
    types:
    - <xref:bool>
  - name: allow_gateway_transit
    description: 'If gateway links can be used in remote virtual networking to

      link to this virtual network.'
    types:
    - <xref:bool>
  - name: use_remote_gateways
    description: 'If remote gateways can be used on this virtual network. If the

      flag is set to true, and allowGatewayTransit on remote peering is also true,
      virtual network

      will use gateways of remote virtual network for transit. Only one peering can
      have this flag

      set to true. This flag cannot be set if virtual network already has a gateway.'
    types:
    - <xref:bool>
  - name: remote_virtual_network
    description: The reference of the remote virtual network.
    types:
    - <xref:azure.mgmt.network.v2016_09_01.models.SubResource>
  - name: peering_state
    description: 'The status of the virtual network peering. Possible values are

      ''Initiated'', ''Connected'', and ''Disconnected''. Known values are: "Initiated",
      "Connected", and

      "Disconnected".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.network.v2016_09_01.models.VirtualNetworkPeeringState>
  - name: provisioning_state
    description: The provisioning state of the resource.
    types:
    - <xref:str>
variables:
- description: Resource ID.
  name: id
  types:
  - <xref:str>
- description: 'The name of the resource that is unique within a resource group. This
    name can be

    used to access the resource.'
  name: name
  types:
  - <xref:str>
- description: A unique read-only string that changes whenever the resource is updated.
  name: etag
  types:
  - <xref:str>
- description: 'Whether the VMs in the linked virtual network space would

    be able to access all the VMs in local Virtual network space.'
  name: allow_virtual_network_access
  types:
  - <xref:bool>
- description: 'Whether the forwarded traffic from the VMs in the remote virtual

    network will be allowed/disallowed.'
  name: allow_forwarded_traffic
  types:
  - <xref:bool>
- description: 'If gateway links can be used in remote virtual networking to link

    to this virtual network.'
  name: allow_gateway_transit
  types:
  - <xref:bool>
- description: 'If remote gateways can be used on this virtual network. If the flag

    is set to true, and allowGatewayTransit on remote peering is also true, virtual
    network will

    use gateways of remote virtual network for transit. Only one peering can have
    this flag set to

    true. This flag cannot be set if virtual network already has a gateway.'
  name: use_remote_gateways
  types:
  - <xref:bool>
- description: The reference of the remote virtual network.
  name: remote_virtual_network
  types:
  - <xref:azure.mgmt.network.v2016_09_01.models.SubResource>
- description: 'The status of the virtual network peering. Possible values are

    ''Initiated'', ''Connected'', and ''Disconnected''. Known values are: "Initiated",
    "Connected", and

    "Disconnected".'
  name: peering_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2016_09_01.models.VirtualNetworkPeeringState>
- description: The provisioning state of the resource.
  name: provisioning_state
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.network.v2016_09_01.models.VirtualNetworkPeering.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.network.v2016_09_01.models.VirtualNetworkPeering.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.network.v2016_09_01.models.VirtualNetworkPeering.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.network.v2016_09_01.models.VirtualNetworkPeering.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.network.v2016_09_01.models.VirtualNetworkPeering.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.network.v2016_09_01.models.VirtualNetworkPeering.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
