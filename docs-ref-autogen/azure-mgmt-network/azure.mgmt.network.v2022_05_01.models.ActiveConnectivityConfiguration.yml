### YamlMime:PythonClass
uid: azure.mgmt.network.v2022_05_01.models.ActiveConnectivityConfiguration
name: ActiveConnectivityConfiguration
fullName: azure.mgmt.network.v2022_05_01.models.ActiveConnectivityConfiguration
module: azure.mgmt.network.v2022_05_01.models
inheritances:
- azure.mgmt.network.v2022_05_01.models._models_py3.EffectiveConnectivityConfiguration
summary: 'Active connectivity configuration.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'ActiveConnectivityConfiguration(*, id: str | None = None, configuration_groups:
    List[_models.ConfigurationGroup] | None = None, description: str | None = None,
    connectivity_topology: str | _models.ConnectivityTopology | None = None, hubs:
    List[_models.Hub] | None = None, is_global: str | _models.IsGlobal | None = None,
    applies_to_groups: List[_models.ConnectivityGroupItem] | None = None, delete_existing_peering:
    str | _models.DeleteExistingPeering | None = None, commit_time: datetime | None
    = None, region: str | None = None, **kwargs)'
  parameters:
  - name: id
    description: Connectivity configuration ID.
    types:
    - <xref:str>
  - name: configuration_groups
    description: Effective configuration groups.
    types:
    - <xref:azure.mgmt.network.v2022_05_01.aio.operations.AdminRuleCollectionsOperations.list>[<xref:azure.mgmt.network.v2022_05_01.models.ConfigurationGroup>]
  - name: description
    description: A description of the connectivity configuration.
    types:
    - <xref:str>
  - name: connectivity_topology
    description: 'Connectivity topology type. Known values are: "HubAndSpoke" and

      "Mesh".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.network.v2022_05_01.models.ConnectivityTopology>
  - name: hubs
    description: List of hubItems.
    types:
    - <xref:azure.mgmt.network.v2022_05_01.aio.operations.AdminRuleCollectionsOperations.list>[<xref:azure.mgmt.network.v2022_05_01.models.Hub>]
  - name: is_global
    description: 'Flag if global mesh is supported. Known values are: "False" and
      "True".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.network.v2022_05_01.models.IsGlobal>
  - name: applies_to_groups
    description: Groups for configuration.
    types:
    - <xref:azure.mgmt.network.v2022_05_01.aio.operations.AdminRuleCollectionsOperations.list>[<xref:azure.mgmt.network.v2022_05_01.models.ConnectivityGroupItem>]
  - name: delete_existing_peering
    description: 'Flag if need to remove current existing peerings. Known

      values are: "False" and "True".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.network.v2022_05_01.models.DeleteExistingPeering>
  - name: commit_time
    description: Deployment time string.
    types:
    - <xref:datetime.datetime>
  - name: region
    description: Deployment region.
    types:
    - <xref:str>
variables:
- description: Connectivity configuration ID.
  name: id
  types:
  - <xref:str>
- description: Effective configuration groups.
  name: configuration_groups
  types:
  - <xref:list>[<xref:azure.mgmt.network.v2022_05_01.models.ConfigurationGroup>]
- description: A description of the connectivity configuration.
  name: description
  types:
  - <xref:str>
- description: 'Connectivity topology type. Known values are: "HubAndSpoke" and

    "Mesh".'
  name: connectivity_topology
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2022_05_01.models.ConnectivityTopology>
- description: List of hubItems.
  name: hubs
  types:
  - <xref:list>[<xref:azure.mgmt.network.v2022_05_01.models.Hub>]
- description: 'Flag if global mesh is supported. Known values are: "False" and "True".'
  name: is_global
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2022_05_01.models.IsGlobal>
- description: Groups for configuration.
  name: applies_to_groups
  types:
  - <xref:list>[<xref:azure.mgmt.network.v2022_05_01.models.ConnectivityGroupItem>]
- description: 'The provisioning state of the connectivity configuration resource.

    Known values are: "Succeeded", "Updating", "Deleting", and "Failed".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2022_05_01.models.ProvisioningState>
- description: 'Flag if need to remove current existing peerings. Known values

    are: "False" and "True".'
  name: delete_existing_peering
  types:
  - <xref:str>
  - <xref:azure.mgmt.network.v2022_05_01.models.DeleteExistingPeering>
- description: Deployment time string.
  name: commit_time
  types:
  - <xref:datetime.datetime>
- description: Deployment region.
  name: region
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.network.v2022_05_01.models.ActiveConnectivityConfiguration.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.network.v2022_05_01.models.ActiveConnectivityConfiguration.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.network.v2022_05_01.models.ActiveConnectivityConfiguration.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.network.v2022_05_01.models.ActiveConnectivityConfiguration.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.network.v2022_05_01.models.ActiveConnectivityConfiguration.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.network.v2022_05_01.models.ActiveConnectivityConfiguration.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
