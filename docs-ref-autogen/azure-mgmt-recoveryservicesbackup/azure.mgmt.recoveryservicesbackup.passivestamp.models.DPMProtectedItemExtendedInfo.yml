### YamlMime:PythonClass
uid: azure.mgmt.recoveryservicesbackup.passivestamp.models.DPMProtectedItemExtendedInfo
name: DPMProtectedItemExtendedInfo
fullName: azure.mgmt.recoveryservicesbackup.passivestamp.models.DPMProtectedItemExtendedInfo
module: azure.mgmt.recoveryservicesbackup.passivestamp.models
inheritances:
- azure.mgmt.recoveryservicesbackup.passivestamp._serialization.Model
summary: Additional information of DPM Protected item.
constructor:
  syntax: 'DPMProtectedItemExtendedInfo(*, protectable_object_load_path: Dict[str,
    str] | None = None, protected: bool | None = None, is_present_on_cloud: bool |
    None = None, last_backup_status: str | None = None, last_refreshed_at: datetime
    | None = None, oldest_recovery_point: datetime | None = None, recovery_point_count:
    int | None = None, on_premise_oldest_recovery_point: datetime | None = None, on_premise_latest_recovery_point:
    datetime | None = None, on_premise_recovery_point_count: int | None = None, is_collocated:
    bool | None = None, protection_group_name: str | None = None, disk_storage_used_in_bytes:
    str | None = None, total_disk_storage_size_in_bytes: str | None = None, **kwargs:
    Any)'
  parameters:
  - name: protectable_object_load_path
    description: Attribute to provide information on various DBs.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: protected
    description: To check if backup item is disk protected.
    types:
    - <xref:bool>
  - name: is_present_on_cloud
    description: To check if backup item is cloud protected.
    types:
    - <xref:bool>
  - name: last_backup_status
    description: Last backup status information on backup item.
    types:
    - <xref:str>
  - name: last_refreshed_at
    description: Last refresh time on backup item.
    types:
    - <xref:datetime.datetime>
  - name: oldest_recovery_point
    description: Oldest cloud recovery point time.
    types:
    - <xref:datetime.datetime>
  - name: recovery_point_count
    description: cloud recovery point count.
    types:
    - <xref:int>
  - name: on_premise_oldest_recovery_point
    description: Oldest disk recovery point time.
    types:
    - <xref:datetime.datetime>
  - name: on_premise_latest_recovery_point
    description: latest disk recovery point time.
    types:
    - <xref:datetime.datetime>
  - name: on_premise_recovery_point_count
    description: disk recovery point count.
    types:
    - <xref:int>
  - name: is_collocated
    description: To check if backup item is collocated.
    types:
    - <xref:bool>
  - name: protection_group_name
    description: Protection group name of the backup item.
    types:
    - <xref:str>
  - name: disk_storage_used_in_bytes
    description: Used Disk storage in bytes.
    types:
    - <xref:str>
  - name: total_disk_storage_size_in_bytes
    description: total Disk storage in bytes.
    types:
    - <xref:str>
variables:
- description: Attribute to provide information on various DBs.
  name: protectable_object_load_path
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: To check if backup item is disk protected.
  name: protected
  types:
  - <xref:bool>
- description: To check if backup item is cloud protected.
  name: is_present_on_cloud
  types:
  - <xref:bool>
- description: Last backup status information on backup item.
  name: last_backup_status
  types:
  - <xref:str>
- description: Last refresh time on backup item.
  name: last_refreshed_at
  types:
  - <xref:datetime.datetime>
- description: Oldest cloud recovery point time.
  name: oldest_recovery_point
  types:
  - <xref:datetime.datetime>
- description: cloud recovery point count.
  name: recovery_point_count
  types:
  - <xref:int>
- description: Oldest disk recovery point time.
  name: on_premise_oldest_recovery_point
  types:
  - <xref:datetime.datetime>
- description: latest disk recovery point time.
  name: on_premise_latest_recovery_point
  types:
  - <xref:datetime.datetime>
- description: disk recovery point count.
  name: on_premise_recovery_point_count
  types:
  - <xref:int>
- description: To check if backup item is collocated.
  name: is_collocated
  types:
  - <xref:bool>
- description: Protection group name of the backup item.
  name: protection_group_name
  types:
  - <xref:str>
- description: Used Disk storage in bytes.
  name: disk_storage_used_in_bytes
  types:
  - <xref:str>
- description: total Disk storage in bytes.
  name: total_disk_storage_size_in_bytes
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.recoveryservicesbackup.passivestamp.models.DPMProtectedItemExtendedInfo.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.recoveryservicesbackup.passivestamp.models.DPMProtectedItemExtendedInfo.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.recoveryservicesbackup.passivestamp.models.DPMProtectedItemExtendedInfo.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.recoveryservicesbackup.passivestamp.models.DPMProtectedItemExtendedInfo.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.recoveryservicesbackup.passivestamp.models.DPMProtectedItemExtendedInfo.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.recoveryservicesbackup.passivestamp.models.DPMProtectedItemExtendedInfo.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
