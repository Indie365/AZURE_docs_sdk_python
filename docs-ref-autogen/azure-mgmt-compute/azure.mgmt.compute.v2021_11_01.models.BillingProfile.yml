### YamlMime:PythonClass
uid: azure.mgmt.compute.v2021_11_01.models.BillingProfile
name: BillingProfile
fullName: azure.mgmt.compute.v2021_11_01.models.BillingProfile
module: azure.mgmt.compute.v2021_11_01.models
inheritances:
- azure.mgmt.compute._serialization.Model
summary: 'Specifies the billing related details of a Azure Spot VM or VMSS. `<br>`:code:>>`<<<br>`Minimum
  api-version: 2019-03-01.'
constructor:
  syntax: 'BillingProfile(*, max_price: float | None = None, **kwargs)'
  parameters:
  - name: max_price
    description: "Specifies the maximum price you are willing to pay for a Azure Spot\n\
      VM/VMSS. This price is in US Dollars. `<br>``<br>` This price will be compared\
      \ with\nthe current Azure Spot price for the VM size. Also, the prices are compared\
      \ at the time of\ncreate/update of Azure Spot VM/VMSS and the operation will\
      \ only succeed if  the maxPrice is\ngreater than the current Azure Spot price.\
      \ `<br>``<br>` The maxPrice will also be\nused for evicting a Azure Spot VM/VMSS\
      \ if the current Azure Spot price goes beyond the maxPrice\nafter creation of\
      \ VM/VMSS. `<br>``<br>` Possible values are:\n`<br>``<br>` - Any decimal value\
      \ greater than zero. Example: 0.01538\n`<br>``<br>` -1 \u2013 indicates default\
      \ price to be up-to on-demand.\n`<br>``<br>` You can set the maxPrice to -1\
      \ to indicate that the Azure Spot VM/VMSS\nshould not be evicted for price reasons.\
      \ Also, the default max price is -1 if it is not\nprovided by you. `<br>`:code:>>`<<<br>`Minimum\
      \ api-version: 2019-03-01."
    types:
    - <xref:float>
variables:
- description: "Specifies the maximum price you are willing to pay for a Azure Spot\
    \ VM/VMSS.\nThis price is in US Dollars. `<br>``<br>` This price will be compared\
    \ with the\ncurrent Azure Spot price for the VM size. Also, the prices are compared\
    \ at the time of\ncreate/update of Azure Spot VM/VMSS and the operation will only\
    \ succeed if  the maxPrice is\ngreater than the current Azure Spot price. `<br>``<br>`\
    \ The maxPrice will also be\nused for evicting a Azure Spot VM/VMSS if the current\
    \ Azure Spot price goes beyond the maxPrice\nafter creation of VM/VMSS. `<br>``<br>`\
    \ Possible values are:\n`<br>``<br>` - Any decimal value greater than zero. Example:\
    \ 0.01538\n`<br>``<br>` -1 \u2013 indicates default price to be up-to on-demand.\n\
    `<br>``<br>` You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS\n\
    should not be evicted for price reasons. Also, the default max price is -1 if\
    \ it is not\nprovided by you. `<br>`:code:>>`<<<br>`Minimum api-version: 2019-03-01."
  name: max_price
  types:
  - <xref:float>
methods:
- uid: azure.mgmt.compute.v2021_11_01.models.BillingProfile.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.compute.v2021_11_01.models.BillingProfile.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2021_11_01.models.BillingProfile.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.compute.v2021_11_01.models.BillingProfile.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2021_11_01.models.BillingProfile.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.compute.v2021_11_01.models.BillingProfile.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
