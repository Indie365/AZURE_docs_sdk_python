### YamlMime:PythonClass
uid: azure.mgmt.compute.v2022_08_01.models.VirtualMachineNetworkInterfaceConfiguration
name: VirtualMachineNetworkInterfaceConfiguration
fullName: azure.mgmt.compute.v2022_08_01.models.VirtualMachineNetworkInterfaceConfiguration
module: azure.mgmt.compute.v2022_08_01.models
inheritances:
- azure.mgmt.compute._serialization.Model
summary: 'Describes a virtual machine network interface configurations.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'VirtualMachineNetworkInterfaceConfiguration(*, name: str, primary: bool
    | None = None, delete_option: str | _models.DeleteOptions | None = None, enable_accelerated_networking:
    bool | None = None, disable_tcp_state_tracking: bool | None = None, enable_fpga:
    bool | None = None, enable_ip_forwarding: bool | None = None, network_security_group:
    _models.SubResource | None = None, dns_settings: _models.VirtualMachineNetworkInterfaceDnsSettingsConfiguration
    | None = None, ip_configurations: List[_models.VirtualMachineNetworkInterfaceIPConfiguration]
    | None = None, dscp_configuration: _models.SubResource | None = None, **kwargs)'
  parameters:
  - name: name
    description: The network interface configuration name. Required.
    types:
    - <xref:str>
  - name: primary
    description: 'Specifies the primary network interface in case the virtual machine
      has more

      than 1 network interface.'
    types:
    - <xref:bool>
  - name: delete_option
    description: 'Specify what happens to the network interface when the VM is deleted.

      Known values are: "Delete" and "Detach".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2022_08_01.models.DeleteOptions>
  - name: enable_accelerated_networking
    description: 'Specifies whether the network interface is accelerated

      networking-enabled.'
    types:
    - <xref:bool>
  - name: disable_tcp_state_tracking
    description: 'Specifies whether the network interface is disabled for

      tcp state tracking.'
    types:
    - <xref:bool>
  - name: enable_fpga
    description: Specifies whether the network interface is FPGA networking-enabled.
    types:
    - <xref:bool>
  - name: enable_ip_forwarding
    description: Whether IP forwarding enabled on this NIC.
    types:
    - <xref:bool>
  - name: network_security_group
    description: The network security group.
    types:
    - <xref:azure.mgmt.compute.v2022_08_01.models.SubResource>
  - name: dns_settings
    description: The dns settings to be applied on the network interfaces.
    types:
    - <xref:azure.mgmt.compute.v2022_08_01.models.VirtualMachineNetworkInterfaceDnsSettingsConfiguration>
  - name: ip_configurations
    description: Specifies the IP configurations of the network interface.
    types:
    - <xref:azure.mgmt.compute.v2015_06_15.aio.operations.AvailabilitySetsOperations.list>[<xref:azure.mgmt.compute.v2022_08_01.models.VirtualMachineNetworkInterfaceIPConfiguration>]
  - name: dscp_configuration
    types:
    - <xref:azure.mgmt.compute.v2022_08_01.models.SubResource>
variables:
- description: The network interface configuration name. Required.
  name: name
  types:
  - <xref:str>
- description: 'Specifies the primary network interface in case the virtual machine
    has more

    than 1 network interface.'
  name: primary
  types:
  - <xref:bool>
- description: 'Specify what happens to the network interface when the VM is deleted.

    Known values are: "Delete" and "Detach".'
  name: delete_option
  types:
  - <xref:str>
  - <xref:azure.mgmt.compute.v2022_08_01.models.DeleteOptions>
- description: 'Specifies whether the network interface is accelerated

    networking-enabled.'
  name: enable_accelerated_networking
  types:
  - <xref:bool>
- description: 'Specifies whether the network interface is disabled for tcp

    state tracking.'
  name: disable_tcp_state_tracking
  types:
  - <xref:bool>
- description: Specifies whether the network interface is FPGA networking-enabled.
  name: enable_fpga
  types:
  - <xref:bool>
- description: Whether IP forwarding enabled on this NIC.
  name: enable_ip_forwarding
  types:
  - <xref:bool>
- description: The network security group.
  name: network_security_group
  types:
  - <xref:azure.mgmt.compute.v2022_08_01.models.SubResource>
- description: The dns settings to be applied on the network interfaces.
  name: dns_settings
  types:
  - <xref:azure.mgmt.compute.v2022_08_01.models.VirtualMachineNetworkInterfaceDnsSettingsConfiguration>
- description: Specifies the IP configurations of the network interface.
  name: ip_configurations
  types:
  - <xref:list>[<xref:azure.mgmt.compute.v2022_08_01.models.VirtualMachineNetworkInterfaceIPConfiguration>]
- name: dscp_configuration
  types:
  - <xref:azure.mgmt.compute.v2022_08_01.models.SubResource>
methods:
- uid: azure.mgmt.compute.v2022_08_01.models.VirtualMachineNetworkInterfaceConfiguration.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.compute.v2022_08_01.models.VirtualMachineNetworkInterfaceConfiguration.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2022_08_01.models.VirtualMachineNetworkInterfaceConfiguration.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.compute.v2022_08_01.models.VirtualMachineNetworkInterfaceConfiguration.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2022_08_01.models.VirtualMachineNetworkInterfaceConfiguration.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.compute.v2022_08_01.models.VirtualMachineNetworkInterfaceConfiguration.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
