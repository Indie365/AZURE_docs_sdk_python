### YamlMime:PythonClass
uid: azure.mgmt.compute.v2020_06_01.models.WindowsConfiguration
name: WindowsConfiguration
fullName: azure.mgmt.compute.v2020_06_01.models.WindowsConfiguration
module: azure.mgmt.compute.v2020_06_01.models
inheritances:
- azure.mgmt.compute._serialization.Model
summary: Specifies Windows operating system settings on the virtual machine.
constructor:
  syntax: 'WindowsConfiguration(*, provision_vm_agent: bool | None = None, enable_automatic_updates:
    bool | None = None, time_zone: str | None = None, additional_unattend_content:
    List[_models.AdditionalUnattendContent] | None = None, patch_settings: _models.PatchSettings
    | None = None, win_rm: _models.WinRMConfiguration | None = None, **kwargs)'
  parameters:
  - name: provision_vm_agent
    description: 'Indicates whether virtual machine agent should be provisioned on

      the virtual machine. `<br>``<br>` When this property is not specified in the

      request body, default behavior is to set it to true.  This will ensure that
      VM Agent is

      installed on the VM so that extensions can be added to the VM later.'
    types:
    - <xref:bool>
  - name: enable_automatic_updates
    description: 'Indicates whether Automatic Updates is enabled for the

      Windows virtual machine. Default value is true. `<br>``<br>` For virtual machine

      scale sets, this property can be updated and updates will take effect on OS
      reprovisioning.'
    types:
    - <xref:bool>
  - name: time_zone
    description: 'Specifies the time zone of the virtual machine. e.g. "Pacific Standard

      Time". `<br>``<br>` Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)

      value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.getsystemtimezones).'
    types:
    - <xref:str>
  - name: additional_unattend_content
    description: 'Specifies additional base-64 encoded XML formatted

      information that can be included in the Unattend.xml file, which is used by
      Windows Setup.'
    types:
    - <xref:azure.mgmt.compute.v2015_06_15.aio.operations.AvailabilitySetsOperations.list>[<xref:azure.mgmt.compute.v2020_06_01.models.AdditionalUnattendContent>]
  - name: patch_settings
    description: Specifies settings related to in-guest patching (KBs).
    types:
    - <xref:azure.mgmt.compute.v2020_06_01.models.PatchSettings>
  - name: win_rm
    description: 'Specifies the Windows Remote Management listeners. This enables
      remote Windows

      PowerShell.'
    types:
    - <xref:azure.mgmt.compute.v2020_06_01.models.WinRMConfiguration>
variables:
- description: 'Indicates whether virtual machine agent should be provisioned on the

    virtual machine. `<br>``<br>` When this property is not specified in the request

    body, default behavior is to set it to true.  This will ensure that VM Agent is
    installed on

    the VM so that extensions can be added to the VM later.'
  name: provision_vm_agent
  types:
  - <xref:bool>
- description: 'Indicates whether Automatic Updates is enabled for the Windows

    virtual machine. Default value is true. `<br>``<br>` For virtual machine scale

    sets, this property can be updated and updates will take effect on OS reprovisioning.'
  name: enable_automatic_updates
  types:
  - <xref:bool>
- description: 'Specifies the time zone of the virtual machine. e.g. "Pacific Standard
    Time".

    `<br>``<br>` Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)

    value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.getsystemtimezones).'
  name: time_zone
  types:
  - <xref:str>
- description: 'Specifies additional base-64 encoded XML formatted

    information that can be included in the Unattend.xml file, which is used by Windows
    Setup.'
  name: additional_unattend_content
  types:
  - <xref:list>[<xref:azure.mgmt.compute.v2020_06_01.models.AdditionalUnattendContent>]
- description: Specifies settings related to in-guest patching (KBs).
  name: patch_settings
  types:
  - <xref:azure.mgmt.compute.v2020_06_01.models.PatchSettings>
- description: 'Specifies the Windows Remote Management listeners. This enables remote
    Windows

    PowerShell.'
  name: win_rm
  types:
  - <xref:azure.mgmt.compute.v2020_06_01.models.WinRMConfiguration>
methods:
- uid: azure.mgmt.compute.v2020_06_01.models.WindowsConfiguration.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.compute.v2020_06_01.models.WindowsConfiguration.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2020_06_01.models.WindowsConfiguration.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.compute.v2020_06_01.models.WindowsConfiguration.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2020_06_01.models.WindowsConfiguration.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.compute.v2020_06_01.models.WindowsConfiguration.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
