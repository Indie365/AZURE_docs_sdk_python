### YamlMime:PythonClass
uid: azure.mgmt.compute.v2022_08_01.models.VirtualMachineScaleSetDataDisk
name: VirtualMachineScaleSetDataDisk
fullName: azure.mgmt.compute.v2022_08_01.models.VirtualMachineScaleSetDataDisk
module: azure.mgmt.compute.v2022_08_01.models
inheritances:
- azure.mgmt.compute._serialization.Model
summary: 'Describes a virtual machine scale set data disk.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'VirtualMachineScaleSetDataDisk(*, lun: int, create_option: str | _models.DiskCreateOptionTypes,
    name: str | None = None, caching: str | _models.CachingTypes | None = None, write_accelerator_enabled:
    bool | None = None, disk_size_gb: int | None = None, managed_disk: _models.VirtualMachineScaleSetManagedDiskParameters
    | None = None, disk_iops_read_write: int | None = None, disk_m_bps_read_write:
    int | None = None, delete_option: str | _models.DiskDeleteOptionTypes | None =
    None, **kwargs)'
  parameters:
  - name: name
    description: The disk name.
    types:
    - <xref:str>
  - name: lun
    description: 'Specifies the logical unit number of the data disk. This value is
      used to

      identify data disks within the VM and therefore must be unique for each data
      disk attached to a

      VM. Required.'
    types:
    - <xref:int>
  - name: caching
    description: 'Specifies the caching requirements. `<br>``<br>` Possible values

      are: `<br>``<br>` **None** `<br>``<br>` **ReadOnly**

      `<br>``<br>` **ReadWrite** `<br>``<br>` Default: **None for Standard

      storage. ReadOnly for Premium storage**. Known values are: "None", "ReadOnly",
      and "ReadWrite".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2022_08_01.models.CachingTypes>
  - name: write_accelerator_enabled
    description: 'Specifies whether writeAccelerator should be enabled or

      disabled on the disk.'
    types:
    - <xref:bool>
  - name: create_option
    description: 'The create option. Required. Known values are: "FromImage", "Empty",

      and "Attach".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2022_08_01.models.DiskCreateOptionTypes>
  - name: disk_size_gb
    description: 'Specifies the size of an empty data disk in gigabytes. This element
      can

      be used to overwrite the size of the disk in a virtual machine image. `<br>``<br>`

      diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot
      be larger than

      1023.'
    types:
    - <xref:int>
  - name: managed_disk
    description: The managed disk parameters.
    types:
    - <xref:azure.mgmt.compute.v2022_08_01.models.VirtualMachineScaleSetManagedDiskParameters>
  - name: disk_iops_read_write
    description: 'Specifies the Read-Write IOPS for the managed disk. Should be

      used only when StorageAccountType is UltraSSD_LRS. If not specified, a default
      value would be

      assigned based on diskSizeGB.'
    types:
    - <xref:int>
  - name: disk_m_bps_read_write
    description: 'Specifies the bandwidth in MB per second for the managed disk.

      Should be used only when StorageAccountType is UltraSSD_LRS. If not specified,
      a default value

      would be assigned based on diskSizeGB.'
    types:
    - <xref:int>
  - name: delete_option
    description: 'Specifies whether data disk should be deleted or detached upon VMSS

      Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode

      only).:code:*<br>*`<br>` Possible values: `<br>``<br>` **Delete** If this

      value is used, the data disk is deleted when the VMSS Flex VM is

      deleted.:code:*<br>*`<br>` **Detach** If this value is used, the data disk is
      retained

      after VMSS Flex VM is deleted.:code:*<br>*`<br>` The default value is set to
      **Delete**.

      Known values are: "Delete" and "Detach".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2022_08_01.models.DiskDeleteOptionTypes>
variables:
- description: The disk name.
  name: name
  types:
  - <xref:str>
- description: 'Specifies the logical unit number of the data disk. This value is
    used to identify

    data disks within the VM and therefore must be unique for each data disk attached
    to a VM.

    Required.'
  name: lun
  types:
  - <xref:int>
- description: 'Specifies the caching requirements. `<br>``<br>` Possible values

    are: `<br>``<br>` **None** `<br>``<br>` **ReadOnly**

    `<br>``<br>` **ReadWrite** `<br>``<br>` Default: **None for Standard

    storage. ReadOnly for Premium storage**. Known values are: "None", "ReadOnly",
    and "ReadWrite".'
  name: caching
  types:
  - <xref:str>
  - <xref:azure.mgmt.compute.v2022_08_01.models.CachingTypes>
- description: 'Specifies whether writeAccelerator should be enabled or

    disabled on the disk.'
  name: write_accelerator_enabled
  types:
  - <xref:bool>
- description: 'The create option. Required. Known values are: "FromImage", "Empty",
    and

    "Attach".'
  name: create_option
  types:
  - <xref:str>
  - <xref:azure.mgmt.compute.v2022_08_01.models.DiskCreateOptionTypes>
- description: 'Specifies the size of an empty data disk in gigabytes. This element
    can be

    used to overwrite the size of the disk in a virtual machine image. `<br>``<br>`

    diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be
    larger than

    1023.'
  name: disk_size_gb
  types:
  - <xref:int>
- description: The managed disk parameters.
  name: managed_disk
  types:
  - <xref:azure.mgmt.compute.v2022_08_01.models.VirtualMachineScaleSetManagedDiskParameters>
- description: 'Specifies the Read-Write IOPS for the managed disk. Should be used

    only when StorageAccountType is UltraSSD_LRS. If not specified, a default value
    would be

    assigned based on diskSizeGB.'
  name: disk_iops_read_write
  types:
  - <xref:int>
- description: 'Specifies the bandwidth in MB per second for the managed disk.

    Should be used only when StorageAccountType is UltraSSD_LRS. If not specified,
    a default value

    would be assigned based on diskSizeGB.'
  name: disk_m_bps_read_write
  types:
  - <xref:int>
- description: 'Specifies whether data disk should be deleted or detached upon VMSS
    Flex

    deletion (This feature is available for VMSS with Flexible OrchestrationMode

    only).:code:*<br>*`<br>` Possible values: `<br>``<br>` **Delete** If this

    value is used, the data disk is deleted when the VMSS Flex VM is

    deleted.:code:*<br>*`<br>` **Detach** If this value is used, the data disk is
    retained

    after VMSS Flex VM is deleted.:code:*<br>*`<br>` The default value is set to **Delete**.

    Known values are: "Delete" and "Detach".'
  name: delete_option
  types:
  - <xref:str>
  - <xref:azure.mgmt.compute.v2022_08_01.models.DiskDeleteOptionTypes>
methods:
- uid: azure.mgmt.compute.v2022_08_01.models.VirtualMachineScaleSetDataDisk.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.compute.v2022_08_01.models.VirtualMachineScaleSetDataDisk.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2022_08_01.models.VirtualMachineScaleSetDataDisk.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.compute.v2022_08_01.models.VirtualMachineScaleSetDataDisk.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2022_08_01.models.VirtualMachineScaleSetDataDisk.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.compute.v2022_08_01.models.VirtualMachineScaleSetDataDisk.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
