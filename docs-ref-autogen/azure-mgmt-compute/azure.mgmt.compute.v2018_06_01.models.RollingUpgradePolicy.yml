### YamlMime:PythonClass
uid: azure.mgmt.compute.v2018_06_01.models.RollingUpgradePolicy
name: RollingUpgradePolicy
fullName: azure.mgmt.compute.v2018_06_01.models.RollingUpgradePolicy
module: azure.mgmt.compute.v2018_06_01.models
inheritances:
- azure.mgmt.compute._serialization.Model
summary: The configuration parameters used while performing a rolling upgrade.
constructor:
  syntax: 'RollingUpgradePolicy(*, max_batch_instance_percent: int | None = None,
    max_unhealthy_instance_percent: int | None = None, max_unhealthy_upgraded_instance_percent:
    int | None = None, pause_time_between_batches: str | None = None, **kwargs)'
  parameters:
  - name: max_batch_instance_percent
    description: 'The maximum percent of total virtual machine instances

      that will be upgraded simultaneously by the rolling upgrade in one batch. As
      this is a maximum,

      unhealthy instances in previous or future batches can cause the percentage of
      instances in a

      batch to decrease to ensure higher reliability. The default value for this parameter
      is 20%.'
    types:
    - <xref:int>
  - name: max_unhealthy_instance_percent
    description: 'The maximum percentage of the total virtual machine

      instances in the scale set that can be simultaneously unhealthy, either as a
      result of being

      upgraded, or by being found in an unhealthy state by the virtual machine health
      checks before

      the rolling upgrade aborts. This constraint will be checked prior to starting
      any batch. The

      default value for this parameter is 20%.'
    types:
    - <xref:int>
  - name: max_unhealthy_upgraded_instance_percent
    description: 'The maximum percentage of upgraded virtual

      machine instances that can be found to be in an unhealthy state. This check
      will happen after

      each batch is upgraded. If this percentage is ever exceeded, the rolling update
      aborts. The

      default value for this parameter is 20%.'
    types:
    - <xref:int>
  - name: pause_time_between_batches
    description: 'The wait time between completing the update for all

      virtual machines in one batch and starting the next batch. The time duration
      should be

      specified in ISO 8601 format. The default value is 0 seconds (PT0S).'
    types:
    - <xref:str>
variables:
- description: 'The maximum percent of total virtual machine instances that

    will be upgraded simultaneously by the rolling upgrade in one batch. As this is
    a maximum,

    unhealthy instances in previous or future batches can cause the percentage of
    instances in a

    batch to decrease to ensure higher reliability. The default value for this parameter
    is 20%.'
  name: max_batch_instance_percent
  types:
  - <xref:int>
- description: 'The maximum percentage of the total virtual machine

    instances in the scale set that can be simultaneously unhealthy, either as a result
    of being

    upgraded, or by being found in an unhealthy state by the virtual machine health
    checks before

    the rolling upgrade aborts. This constraint will be checked prior to starting
    any batch. The

    default value for this parameter is 20%.'
  name: max_unhealthy_instance_percent
  types:
  - <xref:int>
- description: 'The maximum percentage of upgraded virtual

    machine instances that can be found to be in an unhealthy state. This check will
    happen after

    each batch is upgraded. If this percentage is ever exceeded, the rolling update
    aborts. The

    default value for this parameter is 20%.'
  name: max_unhealthy_upgraded_instance_percent
  types:
  - <xref:int>
- description: 'The wait time between completing the update for all virtual

    machines in one batch and starting the next batch. The time duration should be
    specified in ISO

    8601 format. The default value is 0 seconds (PT0S).'
  name: pause_time_between_batches
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.compute.v2018_06_01.models.RollingUpgradePolicy.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.compute.v2018_06_01.models.RollingUpgradePolicy.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2018_06_01.models.RollingUpgradePolicy.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.compute.v2018_06_01.models.RollingUpgradePolicy.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2018_06_01.models.RollingUpgradePolicy.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.compute.v2018_06_01.models.RollingUpgradePolicy.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
