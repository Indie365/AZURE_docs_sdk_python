### YamlMime:PythonClass
uid: azure.mgmt.compute.v2020_05_01.models.Snapshot
name: Snapshot
fullName: azure.mgmt.compute.v2020_05_01.models.Snapshot
module: azure.mgmt.compute.v2020_05_01.models
inheritances:
- azure.mgmt.compute.v2020_05_01.models._models_py3.Resource
summary: 'Snapshot resource.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'Snapshot(*, location: str, tags: Dict[str, str] | None = None, sku: _models.SnapshotSku
    | None = None, os_type: str | _models.OperatingSystemTypes | None = None, hyper_v_generation:
    str | _models.HyperVGeneration | None = None, creation_data: _models.CreationData
    | None = None, disk_size_gb: int | None = None, encryption_settings_collection:
    _models.EncryptionSettingsCollection | None = None, incremental: bool | None =
    None, encryption: _models.Encryption | None = None, network_access_policy: str
    | _models.NetworkAccessPolicy | None = None, disk_access_id: str | None = None,
    **kwargs)'
  parameters:
  - name: location
    description: Resource location. Required.
    types:
    - <xref:str>
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: sku
    description: The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS.
    types:
    - <xref:azure.mgmt.compute.v2020_05_01.models.SnapshotSku>
  - name: os_type
    description: 'The Operating System type. Known values are: "Windows" and "Linux".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2020_05_01.models.OperatingSystemTypes>
  - name: hyper_v_generation
    description: 'The hypervisor generation of the Virtual Machine. Applicable to
      OS

      disks only. Known values are: "V1" and "V2".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2020_05_01.models.HyperVGeneration>
  - name: creation_data
    description: 'Disk source information. CreationData information cannot be changed

      after the disk has been created.'
    types:
    - <xref:azure.mgmt.compute.v2020_05_01.models.CreationData>
  - name: disk_size_gb
    description: 'If creationData.createOption is Empty, this field is mandatory and
      it

      indicates the size of the disk to create. If this field is present for updates
      or creation with

      other options, it indicates a resize. Resizes are only allowed if the disk is
      not attached to a

      running VM, and can only increase the disk''s size.'
    types:
    - <xref:int>
  - name: encryption_settings_collection
    description: 'Encryption settings collection used be Azure Disk

      Encryption, can contain multiple encryption settings per disk or snapshot.'
    types:
    - <xref:azure.mgmt.compute.v2020_05_01.models.EncryptionSettingsCollection>
  - name: incremental
    description: 'Whether a snapshot is incremental. Incremental snapshots on the
      same disk

      occupy less space than full snapshots and can be diffed.'
    types:
    - <xref:bool>
  - name: encryption
    description: 'Encryption property can be used to encrypt data at rest with customer

      managed keys or platform managed keys.'
    types:
    - <xref:azure.mgmt.compute.v2020_05_01.models.Encryption>
  - name: network_access_policy
    description: 'Policy for accessing the disk via network. Known values are:

      "AllowAll", "AllowPrivate", and "DenyAll".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2020_05_01.models.NetworkAccessPolicy>
  - name: disk_access_id
    description: 'ARM id of the DiskAccess resource for using private endpoints on

      disks.'
    types:
    - <xref:str>
variables:
- description: Resource Id.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: Resource location. Required.
  name: location
  types:
  - <xref:str>
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: Unused. Always Null.
  name: managed_by
  types:
  - <xref:str>
- description: The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS.
  name: sku
  types:
  - <xref:azure.mgmt.compute.v2020_05_01.models.SnapshotSku>
- description: The time when the snapshot was created.
  name: time_created
  types:
  - <xref:datetime.datetime>
- description: 'The Operating System type. Known values are: "Windows" and "Linux".'
  name: os_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.compute.v2020_05_01.models.OperatingSystemTypes>
- description: 'The hypervisor generation of the Virtual Machine. Applicable to OS

    disks only. Known values are: "V1" and "V2".'
  name: hyper_v_generation
  types:
  - <xref:str>
  - <xref:azure.mgmt.compute.v2020_05_01.models.HyperVGeneration>
- description: 'Disk source information. CreationData information cannot be changed
    after

    the disk has been created.'
  name: creation_data
  types:
  - <xref:azure.mgmt.compute.v2020_05_01.models.CreationData>
- description: 'If creationData.createOption is Empty, this field is mandatory and
    it

    indicates the size of the disk to create. If this field is present for updates
    or creation with

    other options, it indicates a resize. Resizes are only allowed if the disk is
    not attached to a

    running VM, and can only increase the disk''s size.'
  name: disk_size_gb
  types:
  - <xref:int>
- description: The size of the disk in bytes. This field is read only.
  name: disk_size_bytes
  types:
  - <xref:int>
- description: Unique Guid identifying the resource.
  name: unique_id
  types:
  - <xref:str>
- description: 'Encryption settings collection used be Azure Disk

    Encryption, can contain multiple encryption settings per disk or snapshot.'
  name: encryption_settings_collection
  types:
  - <xref:azure.mgmt.compute.v2020_05_01.models.EncryptionSettingsCollection>
- description: The disk provisioning state.
  name: provisioning_state
  types:
  - <xref:str>
- description: 'Whether a snapshot is incremental. Incremental snapshots on the same
    disk

    occupy less space than full snapshots and can be diffed.'
  name: incremental
  types:
  - <xref:bool>
- description: 'Encryption property can be used to encrypt data at rest with customer
    managed

    keys or platform managed keys.'
  name: encryption
  types:
  - <xref:azure.mgmt.compute.v2020_05_01.models.Encryption>
- description: 'Policy for accessing the disk via network. Known values are:

    "AllowAll", "AllowPrivate", and "DenyAll".'
  name: network_access_policy
  types:
  - <xref:str>
  - <xref:azure.mgmt.compute.v2020_05_01.models.NetworkAccessPolicy>
- description: ARM id of the DiskAccess resource for using private endpoints on disks.
  name: disk_access_id
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.compute.v2020_05_01.models.Snapshot.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.compute.v2020_05_01.models.Snapshot.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2020_05_01.models.Snapshot.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.compute.v2020_05_01.models.Snapshot.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2020_05_01.models.Snapshot.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.compute.v2020_05_01.models.Snapshot.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
