### YamlMime:PythonClass
uid: azure.mgmt.compute.v2018_04_01.models.VirtualMachineScaleSet
name: VirtualMachineScaleSet
fullName: azure.mgmt.compute.v2018_04_01.models.VirtualMachineScaleSet
module: azure.mgmt.compute.v2018_04_01.models
inheritances:
- azure.mgmt.compute.v2018_04_01.models._models_py3.Resource
summary: 'Describes a Virtual Machine Scale Set.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'VirtualMachineScaleSet(*, location: str, tags: Dict[str, str] | None =
    None, sku: _models.Sku | None = None, plan: _models.Plan | None = None, identity:
    _models.VirtualMachineScaleSetIdentity | None = None, zones: List[str] | None
    = None, upgrade_policy: _models.UpgradePolicy | None = None, virtual_machine_profile:
    _models.VirtualMachineScaleSetVMProfile | None = None, overprovision: bool | None
    = None, single_placement_group: bool | None = None, zone_balance: bool | None
    = None, platform_fault_domain_count: int | None = None, proximity_placement_group:
    _models.SubResource | None = None, **kwargs)'
  parameters:
  - name: location
    description: Resource location. Required.
    types:
    - <xref:str>
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: sku
    description: The virtual machine scale set sku.
    types:
    - <xref:azure.mgmt.compute.v2018_04_01.models.Sku>
  - name: plan
    description: 'Specifies information about the marketplace image used to create
      the virtual

      machine. This element is only used for marketplace images. Before you can use
      a marketplace

      image from an API, you must enable the image for programmatic use.  In the Azure
      portal, find

      the marketplace image that you want to use and then click **Want to deploy programmatically,

      Get Started ->**. Enter any required information and then click **Save**.'
    types:
    - <xref:azure.mgmt.compute.v2018_04_01.models.Plan>
  - name: identity
    description: The identity of the virtual machine scale set, if configured.
    types:
    - <xref:azure.mgmt.compute.v2018_04_01.models.VirtualMachineScaleSetIdentity>
  - name: zones
    description: 'The virtual machine scale set zones. NOTE: Availability zones can
      only be set

      when you create the scale set.'
    types:
    - <xref:azure.mgmt.compute.v2015_06_15.aio.operations.AvailabilitySetsOperations.list>[<xref:str>]
  - name: upgrade_policy
    description: The upgrade policy.
    types:
    - <xref:azure.mgmt.compute.v2018_04_01.models.UpgradePolicy>
  - name: virtual_machine_profile
    description: The virtual machine profile.
    types:
    - <xref:azure.mgmt.compute.v2018_04_01.models.VirtualMachineScaleSetVMProfile>
  - name: overprovision
    description: 'Specifies whether the Virtual Machine Scale Set should be

      overprovisioned.'
    types:
    - <xref:bool>
  - name: single_placement_group
    description: 'When true this limits the scale set to a single placement

      group, of max size 100 virtual machines.'
    types:
    - <xref:bool>
  - name: zone_balance
    description: 'Whether to force strictly even Virtual Machine distribution cross

      x-zones in case there is zone outage.'
    types:
    - <xref:bool>
  - name: platform_fault_domain_count
    description: Fault Domain count for each placement group.
    types:
    - <xref:int>
  - name: proximity_placement_group
    description: 'Specifies information about the proximity placement group

      that the virtual machine scale set should be assigned to. `<br>`:code:>>`<<<br>`Minimum

      api-version: 2018-04-01.'
    types:
    - <xref:azure.mgmt.compute.v2018_04_01.models.SubResource>
variables:
- description: Resource Id.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: Resource location. Required.
  name: location
  types:
  - <xref:str>
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The virtual machine scale set sku.
  name: sku
  types:
  - <xref:azure.mgmt.compute.v2018_04_01.models.Sku>
- description: 'Specifies information about the marketplace image used to create the
    virtual

    machine. This element is only used for marketplace images. Before you can use
    a marketplace

    image from an API, you must enable the image for programmatic use.  In the Azure
    portal, find

    the marketplace image that you want to use and then click **Want to deploy programmatically,

    Get Started ->**. Enter any required information and then click **Save**.'
  name: plan
  types:
  - <xref:azure.mgmt.compute.v2018_04_01.models.Plan>
- description: The identity of the virtual machine scale set, if configured.
  name: identity
  types:
  - <xref:azure.mgmt.compute.v2018_04_01.models.VirtualMachineScaleSetIdentity>
- description: 'The virtual machine scale set zones. NOTE: Availability zones can
    only be set when

    you create the scale set.'
  name: zones
  types:
  - <xref:list>[<xref:str>]
- description: The upgrade policy.
  name: upgrade_policy
  types:
  - <xref:azure.mgmt.compute.v2018_04_01.models.UpgradePolicy>
- description: The virtual machine profile.
  name: virtual_machine_profile
  types:
  - <xref:azure.mgmt.compute.v2018_04_01.models.VirtualMachineScaleSetVMProfile>
- description: The provisioning state, which only appears in the response.
  name: provisioning_state
  types:
  - <xref:str>
- description: Specifies whether the Virtual Machine Scale Set should be overprovisioned.
  name: overprovision
  types:
  - <xref:bool>
- description: Specifies the ID which uniquely identifies a Virtual Machine Scale
    Set.
  name: unique_id
  types:
  - <xref:str>
- description: 'When true this limits the scale set to a single placement group,

    of max size 100 virtual machines.'
  name: single_placement_group
  types:
  - <xref:bool>
- description: 'Whether to force strictly even Virtual Machine distribution cross
    x-zones

    in case there is zone outage.'
  name: zone_balance
  types:
  - <xref:bool>
- description: Fault Domain count for each placement group.
  name: platform_fault_domain_count
  types:
  - <xref:int>
- description: 'Specifies information about the proximity placement group that

    the virtual machine scale set should be assigned to. `<br>`:code:>>`<<<br>`Minimum

    api-version: 2018-04-01.'
  name: proximity_placement_group
  types:
  - <xref:azure.mgmt.compute.v2018_04_01.models.SubResource>
methods:
- uid: azure.mgmt.compute.v2018_04_01.models.VirtualMachineScaleSet.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.compute.v2018_04_01.models.VirtualMachineScaleSet.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2018_04_01.models.VirtualMachineScaleSet.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.compute.v2018_04_01.models.VirtualMachineScaleSet.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2018_04_01.models.VirtualMachineScaleSet.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.compute.v2018_04_01.models.VirtualMachineScaleSet.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
