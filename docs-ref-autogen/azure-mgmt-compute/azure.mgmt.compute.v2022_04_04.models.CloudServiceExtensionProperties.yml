### YamlMime:PythonClass
uid: azure.mgmt.compute.v2022_04_04.models.CloudServiceExtensionProperties
name: CloudServiceExtensionProperties
fullName: azure.mgmt.compute.v2022_04_04.models.CloudServiceExtensionProperties
module: azure.mgmt.compute.v2022_04_04.models
inheritances:
- azure.mgmt.compute._serialization.Model
summary: 'Extension Properties.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'CloudServiceExtensionProperties(*, publisher: str | None = None, type:
    str | None = None, type_handler_version: str | None = None, auto_upgrade_minor_version:
    bool | None = None, settings: MutableMapping[str, Any] | None = None, protected_settings:
    MutableMapping[str, Any] | None = None, protected_settings_from_key_vault: _models.CloudServiceVaultAndSecretReference
    | None = None, force_update_tag: str | None = None, roles_applied_to: List[str]
    | None = None, **kwargs)'
  parameters:
  - name: publisher
    description: The name of the extension handler publisher.
    types:
    - <xref:str>
  - name: type
    description: Specifies the type of the extension.
    types:
    - <xref:str>
  - name: type_handler_version
    description: 'Specifies the version of the extension. Specifies the version of

      the extension. If this element is not specified or an asterisk (*) is used as
      the value, the

      latest version of the extension is used. If the value is specified with a major
      version number

      and an asterisk as the minor version number (X.), the latest minor version of
      the specified

      major version is selected. If a major version number and a minor version number
      are specified

      (X.Y), the specific extension version is selected. If a version is specified,
      an auto-upgrade

      is performed on the role instance.'
    types:
    - <xref:str>
  - name: auto_upgrade_minor_version
    description: 'Explicitly specify whether platform can automatically

      upgrade typeHandlerVersion to higher minor versions when they become available.'
    types:
    - <xref:bool>
  - name: settings
    description: 'Public settings for the extension. For JSON extensions, this is
      the JSON

      settings for the extension. For XML Extension (like RDP), this is the XML setting
      for the

      extension.'
    types:
    - <xref:JSON>
  - name: protected_settings
    description: 'Protected settings for the extension which are encrypted before

      sent to the role instance.'
    types:
    - <xref:JSON>
  - name: protected_settings_from_key_vault
    description: 'Protected settings for the extension, referenced

      using KeyVault which are encrypted before sent to the role instance.'
    types:
    - <xref:azure.mgmt.compute.v2022_04_04.models.CloudServiceVaultAndSecretReference>
  - name: force_update_tag
    description: 'Tag to force apply the provided public and protected settings.

      Changing the tag value allows for re-running the extension without changing
      any of the public

      or protected settings.

      If forceUpdateTag is not changed, updates to public or protected settings would
      still be

      applied by the handler.

      If neither forceUpdateTag nor any of public or protected settings change, extension
      would flow

      to the role instance with the same sequence-number, and

      it is up to handler implementation whether to re-run it or not.'
    types:
    - <xref:str>
  - name: roles_applied_to
    description: 'Optional list of roles to apply this extension. If property is not

      specified or ''*'' is specified, extension is applied to all roles in the cloud
      service.'
    types:
    - <xref:azure.mgmt.compute.v2015_06_15.aio.operations.AvailabilitySetsOperations.list>[<xref:str>]
variables:
- description: The name of the extension handler publisher.
  name: publisher
  types:
  - <xref:str>
- description: Specifies the type of the extension.
  name: type
  types:
  - <xref:str>
- description: 'Specifies the version of the extension. Specifies the version of

    the extension. If this element is not specified or an asterisk (*) is used as
    the value, the

    latest version of the extension is used. If the value is specified with a major
    version number

    and an asterisk as the minor version number (X.), the latest minor version of
    the specified

    major version is selected. If a major version number and a minor version number
    are specified

    (X.Y), the specific extension version is selected. If a version is specified,
    an auto-upgrade

    is performed on the role instance.'
  name: type_handler_version
  types:
  - <xref:str>
- description: 'Explicitly specify whether platform can automatically upgrade

    typeHandlerVersion to higher minor versions when they become available.'
  name: auto_upgrade_minor_version
  types:
  - <xref:bool>
- description: 'Public settings for the extension. For JSON extensions, this is the
    JSON

    settings for the extension. For XML Extension (like RDP), this is the XML setting
    for the

    extension.'
  name: settings
  types:
  - <xref:JSON>
- description: 'Protected settings for the extension which are encrypted before sent

    to the role instance.'
  name: protected_settings
  types:
  - <xref:JSON>
- description: 'Protected settings for the extension, referenced using

    KeyVault which are encrypted before sent to the role instance.'
  name: protected_settings_from_key_vault
  types:
  - <xref:azure.mgmt.compute.v2022_04_04.models.CloudServiceVaultAndSecretReference>
- description: 'Tag to force apply the provided public and protected settings.

    Changing the tag value allows for re-running the extension without changing any
    of the public

    or protected settings.

    If forceUpdateTag is not changed, updates to public or protected settings would
    still be

    applied by the handler.

    If neither forceUpdateTag nor any of public or protected settings change, extension
    would flow

    to the role instance with the same sequence-number, and

    it is up to handler implementation whether to re-run it or not.'
  name: force_update_tag
  types:
  - <xref:str>
- description: The provisioning state, which only appears in the response.
  name: provisioning_state
  types:
  - <xref:str>
- description: 'Optional list of roles to apply this extension. If property is not

    specified or ''*'' is specified, extension is applied to all roles in the cloud
    service.'
  name: roles_applied_to
  types:
  - <xref:list>[<xref:str>]
methods:
- uid: azure.mgmt.compute.v2022_04_04.models.CloudServiceExtensionProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.compute.v2022_04_04.models.CloudServiceExtensionProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2022_04_04.models.CloudServiceExtensionProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.compute.v2022_04_04.models.CloudServiceExtensionProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2022_04_04.models.CloudServiceExtensionProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.compute.v2022_04_04.models.CloudServiceExtensionProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
