### YamlMime:PythonClass
uid: azure.mgmt.compute.v2022_03_02.models.DiskEncryptionSet
name: DiskEncryptionSet
fullName: azure.mgmt.compute.v2022_03_02.models.DiskEncryptionSet
module: azure.mgmt.compute.v2022_03_02.models
inheritances:
- azure.mgmt.compute.v2022_03_02.models._models_py3.Resource
summary: 'disk encryption set resource.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'DiskEncryptionSet(*, location: str, tags: Dict[str, str] | None = None,
    identity: _models.EncryptionSetIdentity | None = None, encryption_type: str |
    _models.DiskEncryptionSetType | None = None, active_key: _models.KeyForDiskEncryptionSet
    | None = None, rotation_to_latest_key_version_enabled: bool | None = None, federated_client_id:
    str | None = None, **kwargs)'
  parameters:
  - name: location
    description: Resource location. Required.
    types:
    - <xref:str>
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: identity
    description: 'The managed identity for the disk encryption set. It should be given

      permission on the key vault before it can be used to encrypt disks.'
    types:
    - <xref:azure.mgmt.compute.v2022_03_02.models.EncryptionSetIdentity>
  - name: encryption_type
    description: 'The type of key used to encrypt the data of the disk. Known values

      are: "EncryptionAtRestWithCustomerKey", "EncryptionAtRestWithPlatformAndCustomerKeys",
      and

      "ConfidentialVmEncryptedWithCustomerKey".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2022_03_02.models.DiskEncryptionSetType>
  - name: active_key
    description: The key vault key which is currently used by this disk encryption
      set.
    types:
    - <xref:azure.mgmt.compute.v2022_03_02.models.KeyForDiskEncryptionSet>
  - name: rotation_to_latest_key_version_enabled
    description: 'Set this flag to true to enable auto-updating

      of this disk encryption set to the latest key version.'
    types:
    - <xref:bool>
  - name: federated_client_id
    description: 'Multi-tenant application client id to access key vault in a

      different tenant. Setting the value to ''None'' will clear the property.'
    types:
    - <xref:str>
variables:
- description: Resource Id.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: Resource location. Required.
  name: location
  types:
  - <xref:str>
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: 'The managed identity for the disk encryption set. It should be given
    permission

    on the key vault before it can be used to encrypt disks.'
  name: identity
  types:
  - <xref:azure.mgmt.compute.v2022_03_02.models.EncryptionSetIdentity>
- description: 'The type of key used to encrypt the data of the disk. Known values
    are:

    "EncryptionAtRestWithCustomerKey", "EncryptionAtRestWithPlatformAndCustomerKeys",
    and

    "ConfidentialVmEncryptedWithCustomerKey".'
  name: encryption_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.compute.v2022_03_02.models.DiskEncryptionSetType>
- description: The key vault key which is currently used by this disk encryption set.
  name: active_key
  types:
  - <xref:azure.mgmt.compute.v2022_03_02.models.KeyForDiskEncryptionSet>
- description: 'A readonly collection of key vault keys previously used by this disk

    encryption set while a key rotation is in progress. It will be empty if there
    is no ongoing key

    rotation.'
  name: previous_keys
  types:
  - <xref:list>[<xref:azure.mgmt.compute.v2022_03_02.models.KeyForDiskEncryptionSet>]
- description: The disk encryption set provisioning state.
  name: provisioning_state
  types:
  - <xref:str>
- description: 'Set this flag to true to enable auto-updating of

    this disk encryption set to the latest key version.'
  name: rotation_to_latest_key_version_enabled
  types:
  - <xref:bool>
- description: 'The time when the active key of this disk encryption set was

    updated.'
  name: last_key_rotation_timestamp
  types:
  - <xref:datetime.datetime>
- description: 'The error that was encountered during auto-key rotation. If an

    error is present, then auto-key rotation will not be attempted until the error
    on this disk

    encryption set is fixed.'
  name: auto_key_rotation_error
  types:
  - <xref:azure.mgmt.compute.v2022_03_02.models.ApiError>
- description: 'Multi-tenant application client id to access key vault in a

    different tenant. Setting the value to ''None'' will clear the property.'
  name: federated_client_id
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.compute.v2022_03_02.models.DiskEncryptionSet.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.compute.v2022_03_02.models.DiskEncryptionSet.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2022_03_02.models.DiskEncryptionSet.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.compute.v2022_03_02.models.DiskEncryptionSet.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2022_03_02.models.DiskEncryptionSet.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.compute.v2022_03_02.models.DiskEncryptionSet.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
