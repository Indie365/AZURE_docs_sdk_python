### YamlMime:PythonClass
uid: azure.mgmt.compute.v2022_03_01.models.VirtualMachineInstanceView
name: VirtualMachineInstanceView
fullName: azure.mgmt.compute.v2022_03_01.models.VirtualMachineInstanceView
module: azure.mgmt.compute.v2022_03_01.models
inheritances:
- azure.mgmt.compute._serialization.Model
summary: 'The instance view of a virtual machine.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'VirtualMachineInstanceView(*, platform_update_domain: int | None = None,
    platform_fault_domain: int | None = None, computer_name: str | None = None, os_name:
    str | None = None, os_version: str | None = None, hyper_v_generation: str | _models.HyperVGenerationType
    | None = None, rdp_thumb_print: str | None = None, vm_agent: _models.VirtualMachineAgentInstanceView
    | None = None, maintenance_redeploy_status: _models.MaintenanceRedeployStatus
    | None = None, disks: List[_models.DiskInstanceView] | None = None, extensions:
    List[_models.VirtualMachineExtensionInstanceView] | None = None, boot_diagnostics:
    _models.BootDiagnosticsInstanceView | None = None, statuses: List[_models.InstanceViewStatus]
    | None = None, patch_status: _models.VirtualMachinePatchStatus | None = None,
    **kwargs)'
  parameters:
  - name: platform_update_domain
    description: Specifies the update domain of the virtual machine.
    types:
    - <xref:int>
  - name: platform_fault_domain
    description: Specifies the fault domain of the virtual machine.
    types:
    - <xref:int>
  - name: computer_name
    description: The computer name assigned to the virtual machine.
    types:
    - <xref:str>
  - name: os_name
    description: The Operating System running on the virtual machine.
    types:
    - <xref:str>
  - name: os_version
    description: The version of Operating System running on the virtual machine.
    types:
    - <xref:str>
  - name: hyper_v_generation
    description: 'Specifies the HyperVGeneration Type associated with a resource.

      Known values are: "V1" and "V2".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2022_03_01.models.HyperVGenerationType>
  - name: rdp_thumb_print
    description: The Remote desktop certificate thumbprint.
    types:
    - <xref:str>
  - name: vm_agent
    description: The VM Agent running on the virtual machine.
    types:
    - <xref:azure.mgmt.compute.v2022_03_01.models.VirtualMachineAgentInstanceView>
  - name: maintenance_redeploy_status
    description: The Maintenance Operation status on the virtual machine.
    types:
    - <xref:azure.mgmt.compute.v2022_03_01.models.MaintenanceRedeployStatus>
  - name: disks
    description: The virtual machine disk information.
    types:
    - <xref:azure.mgmt.compute.v2015_06_15.aio.operations.AvailabilitySetsOperations.list>[<xref:azure.mgmt.compute.v2022_03_01.models.DiskInstanceView>]
  - name: extensions
    description: The extensions information.
    types:
    - <xref:azure.mgmt.compute.v2015_06_15.aio.operations.AvailabilitySetsOperations.list>[<xref:azure.mgmt.compute.v2022_03_01.models.VirtualMachineExtensionInstanceView>]
  - name: boot_diagnostics
    description: 'Boot Diagnostics is a debugging feature which allows you to view

      Console Output and Screenshot to diagnose VM status. `<br>``<br>` You can easily

      view the output of your console log. `<br>``<br>` Azure also enables you to
      see a

      screenshot of the VM from the hypervisor.'
    types:
    - <xref:azure.mgmt.compute.v2022_03_01.models.BootDiagnosticsInstanceView>
  - name: statuses
    description: The resource status information.
    types:
    - <xref:azure.mgmt.compute.v2015_06_15.aio.operations.AvailabilitySetsOperations.list>[<xref:azure.mgmt.compute.v2022_03_01.models.InstanceViewStatus>]
  - name: patch_status
    description: '[Preview Feature] The status of virtual machine patch operations.'
    types:
    - <xref:azure.mgmt.compute.v2022_03_01.models.VirtualMachinePatchStatus>
variables:
- description: Specifies the update domain of the virtual machine.
  name: platform_update_domain
  types:
  - <xref:int>
- description: Specifies the fault domain of the virtual machine.
  name: platform_fault_domain
  types:
  - <xref:int>
- description: The computer name assigned to the virtual machine.
  name: computer_name
  types:
  - <xref:str>
- description: The Operating System running on the virtual machine.
  name: os_name
  types:
  - <xref:str>
- description: The version of Operating System running on the virtual machine.
  name: os_version
  types:
  - <xref:str>
- description: 'Specifies the HyperVGeneration Type associated with a resource. Known

    values are: "V1" and "V2".'
  name: hyper_v_generation
  types:
  - <xref:str>
  - <xref:azure.mgmt.compute.v2022_03_01.models.HyperVGenerationType>
- description: The Remote desktop certificate thumbprint.
  name: rdp_thumb_print
  types:
  - <xref:str>
- description: The VM Agent running on the virtual machine.
  name: vm_agent
  types:
  - <xref:azure.mgmt.compute.v2022_03_01.models.VirtualMachineAgentInstanceView>
- description: The Maintenance Operation status on the virtual machine.
  name: maintenance_redeploy_status
  types:
  - <xref:azure.mgmt.compute.v2022_03_01.models.MaintenanceRedeployStatus>
- description: The virtual machine disk information.
  name: disks
  types:
  - <xref:list>[<xref:azure.mgmt.compute.v2022_03_01.models.DiskInstanceView>]
- description: The extensions information.
  name: extensions
  types:
  - <xref:list>[<xref:azure.mgmt.compute.v2022_03_01.models.VirtualMachineExtensionInstanceView>]
- description: The health status for the VM.
  name: vm_health
  types:
  - <xref:azure.mgmt.compute.v2022_03_01.models.VirtualMachineHealthStatus>
- description: 'Boot Diagnostics is a debugging feature which allows you to view

    Console Output and Screenshot to diagnose VM status. `<br>``<br>` You can easily

    view the output of your console log. `<br>``<br>` Azure also enables you to see
    a

    screenshot of the VM from the hypervisor.'
  name: boot_diagnostics
  types:
  - <xref:azure.mgmt.compute.v2022_03_01.models.BootDiagnosticsInstanceView>
- description: 'Resource id of the dedicated host, on which the virtual machine is

    allocated through automatic placement, when the virtual machine is associated
    with a dedicated

    host group that has automatic placement enabled. `<br>`:code:>>`<<<br>`Minimum
    api-version:

    2020-06-01.'
  name: assigned_host
  types:
  - <xref:str>
- description: The resource status information.
  name: statuses
  types:
  - <xref:list>[<xref:azure.mgmt.compute.v2022_03_01.models.InstanceViewStatus>]
- description: '[Preview Feature] The status of virtual machine patch operations.'
  name: patch_status
  types:
  - <xref:azure.mgmt.compute.v2022_03_01.models.VirtualMachinePatchStatus>
methods:
- uid: azure.mgmt.compute.v2022_03_01.models.VirtualMachineInstanceView.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.compute.v2022_03_01.models.VirtualMachineInstanceView.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2022_03_01.models.VirtualMachineInstanceView.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.compute.v2022_03_01.models.VirtualMachineInstanceView.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2022_03_01.models.VirtualMachineInstanceView.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.compute.v2022_03_01.models.VirtualMachineInstanceView.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
