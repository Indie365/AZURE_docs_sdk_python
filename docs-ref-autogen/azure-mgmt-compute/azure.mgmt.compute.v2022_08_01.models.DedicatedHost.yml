### YamlMime:PythonClass
uid: azure.mgmt.compute.v2022_08_01.models.DedicatedHost
name: DedicatedHost
fullName: azure.mgmt.compute.v2022_08_01.models.DedicatedHost
module: azure.mgmt.compute.v2022_08_01.models
inheritances:
- azure.mgmt.compute.v2022_08_01.models._models_py3.Resource
summary: 'Specifies information about the Dedicated host.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'DedicatedHost(*, location: str, sku: _models.Sku, tags: Dict[str, str]
    | None = None, platform_fault_domain: int | None = None, auto_replace_on_failure:
    bool | None = None, license_type: str | _models.DedicatedHostLicenseTypes | None
    = None, **kwargs)'
  parameters:
  - name: location
    description: Resource location. Required.
    types:
    - <xref:str>
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: sku
    description: 'SKU of the dedicated host for Hardware Generation and VM family.
      Only name is

      required to be set. List Microsoft.Compute SKUs for a list of possible values.
      Required.'
    types:
    - <xref:azure.mgmt.compute.v2022_08_01.models.Sku>
  - name: platform_fault_domain
    description: 'Fault domain of the dedicated host within a dedicated host

      group.'
    types:
    - <xref:int>
  - name: auto_replace_on_failure
    description: 'Specifies whether the dedicated host should be replaced

      automatically in case of a failure. The value is defaulted to ''true'' when
      not provided.'
    types:
    - <xref:bool>
  - name: license_type
    description: 'Specifies the software license type that will be applied to the
      VMs

      deployed on the dedicated host. `<br>``<br>` Possible values are:

      `<br>``<br>` **None** `<br>``<br>` **Windows_Server_Hybrid**

      `<br>``<br>` **Windows_Server_Perpetual** `<br>``<br>` Default:

      **None**. Known values are: "None", "Windows_Server_Hybrid", and "Windows_Server_Perpetual".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2022_08_01.models.DedicatedHostLicenseTypes>
variables:
- description: Resource Id.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: Resource location. Required.
  name: location
  types:
  - <xref:str>
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: 'SKU of the dedicated host for Hardware Generation and VM family. Only
    name is

    required to be set. List Microsoft.Compute SKUs for a list of possible values.
    Required.'
  name: sku
  types:
  - <xref:azure.mgmt.compute.v2022_08_01.models.Sku>
- description: Fault domain of the dedicated host within a dedicated host group.
  name: platform_fault_domain
  types:
  - <xref:int>
- description: 'Specifies whether the dedicated host should be replaced

    automatically in case of a failure. The value is defaulted to ''true'' when not
    provided.'
  name: auto_replace_on_failure
  types:
  - <xref:bool>
- description: 'A unique id generated and assigned to the dedicated host by the platform.

    `<br>``<br>` Does not change throughout the lifetime of the host.'
  name: host_id
  types:
  - <xref:str>
- description: A list of references to all virtual machines in the Dedicated Host.
  name: virtual_machines
  types:
  - <xref:list>[<xref:azure.mgmt.compute.v2022_08_01.models.SubResourceReadOnly>]
- description: 'Specifies the software license type that will be applied to the VMs

    deployed on the dedicated host. `<br>``<br>` Possible values are:

    `<br>``<br>` **None** `<br>``<br>` **Windows_Server_Hybrid**

    `<br>``<br>` **Windows_Server_Perpetual** `<br>``<br>` Default:

    **None**. Known values are: "None", "Windows_Server_Hybrid", and "Windows_Server_Perpetual".'
  name: license_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.compute.v2022_08_01.models.DedicatedHostLicenseTypes>
- description: The date when the host was first provisioned.
  name: provisioning_time
  types:
  - <xref:datetime.datetime>
- description: The provisioning state, which only appears in the response.
  name: provisioning_state
  types:
  - <xref:str>
- description: The dedicated host instance view.
  name: instance_view
  types:
  - <xref:azure.mgmt.compute.v2022_08_01.models.DedicatedHostInstanceView>
- description: 'Specifies the time at which the Dedicated Host resource was

    created.:code:*<br>*:code:>>`<<<br>`Minimum api-version: 2021-11-01.'
  name: time_created
  types:
  - <xref:datetime.datetime>
methods:
- uid: azure.mgmt.compute.v2022_08_01.models.DedicatedHost.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.compute.v2022_08_01.models.DedicatedHost.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2022_08_01.models.DedicatedHost.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.compute.v2022_08_01.models.DedicatedHost.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2022_08_01.models.DedicatedHost.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.compute.v2022_08_01.models.DedicatedHost.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
