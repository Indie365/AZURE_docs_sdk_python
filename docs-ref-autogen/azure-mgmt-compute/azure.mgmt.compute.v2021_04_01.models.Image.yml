### YamlMime:PythonClass
uid: azure.mgmt.compute.v2021_04_01.models.Image
name: Image
fullName: azure.mgmt.compute.v2021_04_01.models.Image
module: azure.mgmt.compute.v2021_04_01.models
inheritances:
- azure.mgmt.compute.v2021_04_01.models._models_py3.Resource
summary: 'The source user image virtual hard disk. The virtual hard disk will be copied
  before being attached to the virtual machine. If SourceImage is provided, the destination
  virtual hard drive must not exist.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'Image(*, location: str, tags: Dict[str, str] | None = None, extended_location:
    _models.ExtendedLocation | None = None, source_virtual_machine: _models.SubResource
    | None = None, storage_profile: _models.ImageStorageProfile | None = None, hyper_v_generation:
    str | _models.HyperVGenerationTypes | None = None, **kwargs)'
  parameters:
  - name: location
    description: Resource location. Required.
    types:
    - <xref:str>
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: extended_location
    description: The extended location of the Image.
    types:
    - <xref:azure.mgmt.compute.v2021_04_01.models.ExtendedLocation>
  - name: source_virtual_machine
    description: The source virtual machine from which Image is created.
    types:
    - <xref:azure.mgmt.compute.v2021_04_01.models.SubResource>
  - name: storage_profile
    description: Specifies the storage settings for the virtual machine disks.
    types:
    - <xref:azure.mgmt.compute.v2021_04_01.models.ImageStorageProfile>
  - name: hyper_v_generation
    description: 'Specifies the HyperVGenerationType of the VirtualMachine created

      from the image. From API Version 2019-03-01 if the image source is a blob, then
      we need the

      user to specify the value, if the source is managed resource like disk or snapshot,
      we may

      require the user to specify the property if we cannot deduce it from the source
      managed

      resource. Known values are: "V1" and "V2".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2021_04_01.models.HyperVGenerationTypes>
variables:
- description: Resource Id.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: Resource location. Required.
  name: location
  types:
  - <xref:str>
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The extended location of the Image.
  name: extended_location
  types:
  - <xref:azure.mgmt.compute.v2021_04_01.models.ExtendedLocation>
- description: The source virtual machine from which Image is created.
  name: source_virtual_machine
  types:
  - <xref:azure.mgmt.compute.v2021_04_01.models.SubResource>
- description: Specifies the storage settings for the virtual machine disks.
  name: storage_profile
  types:
  - <xref:azure.mgmt.compute.v2021_04_01.models.ImageStorageProfile>
- description: The provisioning state.
  name: provisioning_state
  types:
  - <xref:str>
- description: 'Specifies the HyperVGenerationType of the VirtualMachine created from

    the image. From API Version 2019-03-01 if the image source is a blob, then we
    need the user to

    specify the value, if the source is managed resource like disk or snapshot, we
    may require the

    user to specify the property if we cannot deduce it from the source managed resource.
    Known

    values are: "V1" and "V2".'
  name: hyper_v_generation
  types:
  - <xref:str>
  - <xref:azure.mgmt.compute.v2021_04_01.models.HyperVGenerationTypes>
methods:
- uid: azure.mgmt.compute.v2021_04_01.models.Image.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.compute.v2021_04_01.models.Image.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2021_04_01.models.Image.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.compute.v2021_04_01.models.Image.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2021_04_01.models.Image.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.compute.v2021_04_01.models.Image.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
