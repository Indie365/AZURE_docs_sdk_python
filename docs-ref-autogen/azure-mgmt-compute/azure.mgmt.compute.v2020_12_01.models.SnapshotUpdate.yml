### YamlMime:PythonClass
uid: azure.mgmt.compute.v2020_12_01.models.SnapshotUpdate
name: SnapshotUpdate
fullName: azure.mgmt.compute.v2020_12_01.models.SnapshotUpdate
module: azure.mgmt.compute.v2020_12_01.models
inheritances:
- azure.mgmt.compute._serialization.Model
summary: Snapshot update resource.
constructor:
  syntax: 'SnapshotUpdate(*, tags: Dict[str, str] | None = None, sku: _models.SnapshotSku
    | None = None, os_type: str | _models.OperatingSystemTypes | None = None, disk_size_gb:
    int | None = None, encryption_settings_collection: _models.EncryptionSettingsCollection
    | None = None, encryption: _models.Encryption | None = None, network_access_policy:
    str | _models.NetworkAccessPolicy | None = None, disk_access_id: str | None =
    None, supports_hibernation: bool | None = None, **kwargs)'
  parameters:
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: sku
    description: 'The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS.
      This

      is an optional parameter for incremental snapshot and the default behavior is
      the SKU will be

      set to the same sku as the previous snapshot.'
    types:
    - <xref:azure.mgmt.compute.v2020_12_01.models.SnapshotSku>
  - name: os_type
    description: 'the Operating System type. Known values are: "Windows" and "Linux".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2020_12_01.models.OperatingSystemTypes>
  - name: disk_size_gb
    description: 'If creationData.createOption is Empty, this field is mandatory and
      it

      indicates the size of the disk to create. If this field is present for updates
      or creation with

      other options, it indicates a resize. Resizes are only allowed if the disk is
      not attached to a

      running VM, and can only increase the disk''s size.'
    types:
    - <xref:int>
  - name: encryption_settings_collection
    description: 'Encryption settings collection used be Azure Disk

      Encryption, can contain multiple encryption settings per disk or snapshot.'
    types:
    - <xref:azure.mgmt.compute.v2020_12_01.models.EncryptionSettingsCollection>
  - name: encryption
    description: 'Encryption property can be used to encrypt data at rest with customer

      managed keys or platform managed keys.'
    types:
    - <xref:azure.mgmt.compute.v2020_12_01.models.Encryption>
  - name: network_access_policy
    description: 'Policy for accessing the disk via network. Known values are:

      "AllowAll", "AllowPrivate", and "DenyAll".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2020_12_01.models.NetworkAccessPolicy>
  - name: disk_access_id
    description: 'ARM id of the DiskAccess resource for using private endpoints on

      disks.'
    types:
    - <xref:str>
  - name: supports_hibernation
    description: Indicates the OS on a snapshot supports hibernation.
    types:
    - <xref:bool>
variables:
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: 'The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS.
    This is

    an optional parameter for incremental snapshot and the default behavior is the
    SKU will be set

    to the same sku as the previous snapshot.'
  name: sku
  types:
  - <xref:azure.mgmt.compute.v2020_12_01.models.SnapshotSku>
- description: 'the Operating System type. Known values are: "Windows" and "Linux".'
  name: os_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.compute.v2020_12_01.models.OperatingSystemTypes>
- description: 'If creationData.createOption is Empty, this field is mandatory and
    it

    indicates the size of the disk to create. If this field is present for updates
    or creation with

    other options, it indicates a resize. Resizes are only allowed if the disk is
    not attached to a

    running VM, and can only increase the disk''s size.'
  name: disk_size_gb
  types:
  - <xref:int>
- description: 'Encryption settings collection used be Azure Disk

    Encryption, can contain multiple encryption settings per disk or snapshot.'
  name: encryption_settings_collection
  types:
  - <xref:azure.mgmt.compute.v2020_12_01.models.EncryptionSettingsCollection>
- description: 'Encryption property can be used to encrypt data at rest with customer
    managed

    keys or platform managed keys.'
  name: encryption
  types:
  - <xref:azure.mgmt.compute.v2020_12_01.models.Encryption>
- description: 'Policy for accessing the disk via network. Known values are:

    "AllowAll", "AllowPrivate", and "DenyAll".'
  name: network_access_policy
  types:
  - <xref:str>
  - <xref:azure.mgmt.compute.v2020_12_01.models.NetworkAccessPolicy>
- description: ARM id of the DiskAccess resource for using private endpoints on disks.
  name: disk_access_id
  types:
  - <xref:str>
- description: Indicates the OS on a snapshot supports hibernation.
  name: supports_hibernation
  types:
  - <xref:bool>
methods:
- uid: azure.mgmt.compute.v2020_12_01.models.SnapshotUpdate.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.compute.v2020_12_01.models.SnapshotUpdate.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2020_12_01.models.SnapshotUpdate.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.compute.v2020_12_01.models.SnapshotUpdate.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2020_12_01.models.SnapshotUpdate.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.compute.v2020_12_01.models.SnapshotUpdate.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
