### YamlMime:PythonClass
uid: azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSetIPConfiguration
name: VirtualMachineScaleSetIPConfiguration
fullName: azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSetIPConfiguration
module: azure.mgmt.compute.v2020_06_01.models
inheritances:
- azure.mgmt.compute.v2020_06_01.models._models_py3.SubResource
summary: 'Describes a virtual machine scale set network profile''s IP configuration.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'VirtualMachineScaleSetIPConfiguration(*, name: str, id: str | None = None,
    subnet: _models.ApiEntityReference | None = None, primary: bool | None = None,
    public_ip_address_configuration: _models.VirtualMachineScaleSetPublicIPAddressConfiguration
    | None = None, private_ip_address_version: str | _models.IPVersion | None = None,
    application_gateway_backend_address_pools: List[_models.SubResource] | None =
    None, application_security_groups: List[_models.SubResource] | None = None, load_balancer_backend_address_pools:
    List[_models.SubResource] | None = None, load_balancer_inbound_nat_pools: List[_models.SubResource]
    | None = None, **kwargs)'
  parameters:
  - name: id
    description: Resource Id.
    types:
    - <xref:str>
  - name: name
    description: The IP configuration name. Required.
    types:
    - <xref:str>
  - name: subnet
    description: Specifies the identifier of the subnet.
    types:
    - <xref:azure.mgmt.compute.v2020_06_01.models.ApiEntityReference>
  - name: primary
    description: 'Specifies the primary network interface in case the virtual machine
      has more

      than 1 network interface.'
    types:
    - <xref:bool>
  - name: public_ip_address_configuration
    description: The publicIPAddressConfiguration.
    types:
    - <xref:azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSetPublicIPAddressConfiguration>
  - name: private_ip_address_version
    description: 'Available from Api-Version 2017-03-30 onwards, it

      represents whether the specific ipconfiguration is IPv4 or IPv6. Default is
      taken as IPv4.

      Possible values are: ''IPv4'' and ''IPv6''. Known values are: "IPv4" and "IPv6".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.compute.v2020_06_01.models.IPVersion>
  - name: application_gateway_backend_address_pools
    description: 'Specifies an array of references to backend

      address pools of application gateways. A scale set can reference backend address
      pools of

      multiple application gateways. Multiple scale sets cannot use the same application
      gateway.'
    types:
    - <xref:azure.mgmt.compute.v2015_06_15.aio.operations.AvailabilitySetsOperations.list>[<xref:azure.mgmt.compute.v2020_06_01.models.SubResource>]
  - name: application_security_groups
    description: 'Specifies an array of references to application security

      group.'
    types:
    - <xref:azure.mgmt.compute.v2015_06_15.aio.operations.AvailabilitySetsOperations.list>[<xref:azure.mgmt.compute.v2020_06_01.models.SubResource>]
  - name: load_balancer_backend_address_pools
    description: 'Specifies an array of references to backend

      address pools of load balancers. A scale set can reference backend address pools
      of one public

      and one internal load balancer. Multiple scale sets cannot use the same basic
      sku load

      balancer.'
    types:
    - <xref:azure.mgmt.compute.v2015_06_15.aio.operations.AvailabilitySetsOperations.list>[<xref:azure.mgmt.compute.v2020_06_01.models.SubResource>]
  - name: load_balancer_inbound_nat_pools
    description: 'Specifies an array of references to inbound Nat pools

      of the load balancers. A scale set can reference inbound nat pools of one public
      and one

      internal load balancer. Multiple scale sets cannot use the same basic sku load
      balancer.'
    types:
    - <xref:azure.mgmt.compute.v2015_06_15.aio.operations.AvailabilitySetsOperations.list>[<xref:azure.mgmt.compute.v2020_06_01.models.SubResource>]
variables:
- description: Resource Id.
  name: id
  types:
  - <xref:str>
- description: The IP configuration name. Required.
  name: name
  types:
  - <xref:str>
- description: Specifies the identifier of the subnet.
  name: subnet
  types:
  - <xref:azure.mgmt.compute.v2020_06_01.models.ApiEntityReference>
- description: 'Specifies the primary network interface in case the virtual machine
    has more

    than 1 network interface.'
  name: primary
  types:
  - <xref:bool>
- description: The publicIPAddressConfiguration.
  name: public_ip_address_configuration
  types:
  - <xref:azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSetPublicIPAddressConfiguration>
- description: 'Available from Api-Version 2017-03-30 onwards, it represents

    whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible

    values are: ''IPv4'' and ''IPv6''. Known values are: "IPv4" and "IPv6".'
  name: private_ip_address_version
  types:
  - <xref:str>
  - <xref:azure.mgmt.compute.v2020_06_01.models.IPVersion>
- description: 'Specifies an array of references to backend

    address pools of application gateways. A scale set can reference backend address
    pools of

    multiple application gateways. Multiple scale sets cannot use the same application
    gateway.'
  name: application_gateway_backend_address_pools
  types:
  - <xref:list>[<xref:azure.mgmt.compute.v2020_06_01.models.SubResource>]
- description: 'Specifies an array of references to application security

    group.'
  name: application_security_groups
  types:
  - <xref:list>[<xref:azure.mgmt.compute.v2020_06_01.models.SubResource>]
- description: 'Specifies an array of references to backend address

    pools of load balancers. A scale set can reference backend address pools of one
    public and one

    internal load balancer. Multiple scale sets cannot use the same basic sku load
    balancer.'
  name: load_balancer_backend_address_pools
  types:
  - <xref:list>[<xref:azure.mgmt.compute.v2020_06_01.models.SubResource>]
- description: 'Specifies an array of references to inbound Nat pools of

    the load balancers. A scale set can reference inbound nat pools of one public
    and one internal

    load balancer. Multiple scale sets cannot use the same basic sku load balancer.'
  name: load_balancer_inbound_nat_pools
  types:
  - <xref:list>[<xref:azure.mgmt.compute.v2020_06_01.models.SubResource>]
methods:
- uid: azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSetIPConfiguration.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSetIPConfiguration.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSetIPConfiguration.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSetIPConfiguration.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSetIPConfiguration.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.compute.v2020_06_01.models.VirtualMachineScaleSetIPConfiguration.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
