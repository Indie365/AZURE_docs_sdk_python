### YamlMime:PythonClass
uid: azure.mgmt.media.models.StreamingLocator
name: StreamingLocator
fullName: azure.mgmt.media.models.StreamingLocator
module: azure.mgmt.media.models
inheritances:
- azure.mgmt.media.models._models_py3.ProxyResource
summary: 'A Streaming Locator resource.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'StreamingLocator(*, asset_name: str | None = None, start_time: datetime
    | None = None, end_time: datetime | None = None, streaming_locator_id: str | None
    = None, streaming_policy_name: str | None = None, default_content_key_policy_name:
    str | None = None, content_keys: List[_models.StreamingLocatorContentKey] | None
    = None, alternative_media_id: str | None = None, filters: List[str] | None = None,
    **kwargs)'
  parameters:
  - name: asset_name
    description: Asset Name.
    types:
    - <xref:str>
  - name: start_time
    description: The start time of the Streaming Locator.
    types:
    - <xref:datetime.datetime>
  - name: end_time
    description: The end time of the Streaming Locator.
    types:
    - <xref:datetime.datetime>
  - name: streaming_locator_id
    description: The StreamingLocatorId of the Streaming Locator.
    types:
    - <xref:str>
  - name: streaming_policy_name
    description: 'Name of the Streaming Policy used by this Streaming Locator.

      Either specify the name of Streaming Policy you created or use one of the predefined
      Streaming

      Policies. The predefined Streaming Policies available are: ''Predefined_DownloadOnly'',

      ''Predefined_ClearStreamingOnly'', ''Predefined_DownloadAndClearStreaming'',
      ''Predefined_ClearKey'',

      ''Predefined_MultiDrmCencStreaming'' and ''Predefined_MultiDrmStreaming''.'
    types:
    - <xref:str>
  - name: default_content_key_policy_name
    description: 'Name of the default ContentKeyPolicy used by this

      Streaming Locator.'
    types:
    - <xref:str>
  - name: content_keys
    description: The ContentKeys used by this Streaming Locator.
    types:
    - <xref:azure.mgmt.media.aio.operations.AccountFiltersOperations.list>[<xref:azure.mgmt.media.models.StreamingLocatorContentKey>]
  - name: alternative_media_id
    description: Alternative Media ID of this Streaming Locator.
    types:
    - <xref:str>
  - name: filters
    description: A list of asset or account filters which apply to this streaming
      locator.
    types:
    - <xref:azure.mgmt.media.aio.operations.AccountFiltersOperations.list>[<xref:str>]
variables:
- description: 'Fully qualified resource ID for the resource. Ex -

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: 'The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
    or

    "Microsoft.Storage/storageAccounts".'
  name: type
  types:
  - <xref:str>
- description: The system metadata relating to this resource.
  name: system_data
  types:
  - <xref:azure.mgmt.media.models.SystemData>
- description: Asset Name.
  name: asset_name
  types:
  - <xref:str>
- description: The creation time of the Streaming Locator.
  name: created
  types:
  - <xref:datetime.datetime>
- description: The start time of the Streaming Locator.
  name: start_time
  types:
  - <xref:datetime.datetime>
- description: The end time of the Streaming Locator.
  name: end_time
  types:
  - <xref:datetime.datetime>
- description: The StreamingLocatorId of the Streaming Locator.
  name: streaming_locator_id
  types:
  - <xref:str>
- description: 'Name of the Streaming Policy used by this Streaming Locator.

    Either specify the name of Streaming Policy you created or use one of the predefined
    Streaming

    Policies. The predefined Streaming Policies available are: ''Predefined_DownloadOnly'',

    ''Predefined_ClearStreamingOnly'', ''Predefined_DownloadAndClearStreaming'', ''Predefined_ClearKey'',

    ''Predefined_MultiDrmCencStreaming'' and ''Predefined_MultiDrmStreaming''.'
  name: streaming_policy_name
  types:
  - <xref:str>
- description: 'Name of the default ContentKeyPolicy used by this

    Streaming Locator.'
  name: default_content_key_policy_name
  types:
  - <xref:str>
- description: The ContentKeys used by this Streaming Locator.
  name: content_keys
  types:
  - <xref:list>[<xref:azure.mgmt.media.models.StreamingLocatorContentKey>]
- description: Alternative Media ID of this Streaming Locator.
  name: alternative_media_id
  types:
  - <xref:str>
- description: A list of asset or account filters which apply to this streaming locator.
  name: filters
  types:
  - <xref:list>[<xref:str>]
methods:
- uid: azure.mgmt.media.models.StreamingLocator.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.media.models.StreamingLocator.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.StreamingLocator.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.media.models.StreamingLocator.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.StreamingLocator.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.media.models.StreamingLocator.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
