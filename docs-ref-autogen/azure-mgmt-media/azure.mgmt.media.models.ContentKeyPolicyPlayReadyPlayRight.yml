### YamlMime:PythonClass
uid: azure.mgmt.media.models.ContentKeyPolicyPlayReadyPlayRight
name: ContentKeyPolicyPlayReadyPlayRight
fullName: azure.mgmt.media.models.ContentKeyPolicyPlayReadyPlayRight
module: azure.mgmt.media.models
inheritances:
- azure.mgmt.media._serialization.Model
summary: 'Configures the Play Right in the PlayReady license.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'ContentKeyPolicyPlayReadyPlayRight(*, digital_video_only_content_restriction:
    bool, image_constraint_for_analog_component_video_restriction: bool, image_constraint_for_analog_computer_monitor_restriction:
    bool, allow_passing_video_content_to_unknown_output: str | _models.ContentKeyPolicyPlayReadyUnknownOutputPassingOption,
    first_play_expiration: timedelta | None = None, scms_restriction: int | None =
    None, agc_and_color_stripe_restriction: int | None = None, explicit_analog_television_output_restriction:
    _models.ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction | None =
    None, uncompressed_digital_video_opl: int | None = None, compressed_digital_video_opl:
    int | None = None, analog_video_opl: int | None = None, compressed_digital_audio_opl:
    int | None = None, uncompressed_digital_audio_opl: int | None = None, **kwargs)'
  parameters:
  - name: first_play_expiration
    description: 'The amount of time that the license is valid after the license

      is first used to play content.'
    types:
    - <xref:datetime.timedelta>
  - name: scms_restriction
    description: 'Configures the Serial Copy Management System (SCMS) in the license.

      Must be between 0 and 3 inclusive.'
    types:
    - <xref:int>
  - name: agc_and_color_stripe_restriction
    description: 'Configures Automatic Gain Control (AGC) and Color

      Stripe in the license. Must be between 0 and 3 inclusive.'
    types:
    - <xref:int>
  - name: explicit_analog_television_output_restriction
    description: 'Configures the Explicit Analog

      Television Output Restriction in the license. Configuration data must be between
      0 and 3

      inclusive.'
    types:
    - <xref:azure.mgmt.media.models.ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction>
  - name: digital_video_only_content_restriction
    description: 'Enables the Image Constraint For Analog

      Component Video Restriction in the license. Required.'
    types:
    - <xref:bool>
  - name: image_constraint_for_analog_component_video_restriction
    description: 'Enables the Image Constraint

      For Analog Component Video Restriction in the license. Required.'
    types:
    - <xref:bool>
  - name: image_constraint_for_analog_computer_monitor_restriction
    description: 'Enables the Image Constraint

      For Analog Component Video Restriction in the license. Required.'
    types:
    - <xref:bool>
  - name: allow_passing_video_content_to_unknown_output
    description: 'Configures Unknown output handling

      settings of the license. Required. Known values are: "Unknown", "NotAllowed",
      "Allowed", and

      "AllowedWithVideoConstriction".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.media.models.ContentKeyPolicyPlayReadyUnknownOutputPassingOption>
  - name: uncompressed_digital_video_opl
    description: 'Specifies the output protection level for uncompressed

      digital video.'
    types:
    - <xref:int>
  - name: compressed_digital_video_opl
    description: 'Specifies the output protection level for compressed

      digital video.'
    types:
    - <xref:int>
  - name: analog_video_opl
    description: Specifies the output protection level for compressed digital audio.
    types:
    - <xref:int>
  - name: compressed_digital_audio_opl
    description: 'Specifies the output protection level for compressed

      digital audio.'
    types:
    - <xref:int>
  - name: uncompressed_digital_audio_opl
    description: 'Specifies the output protection level for uncompressed

      digital audio.'
    types:
    - <xref:int>
variables:
- description: 'The amount of time that the license is valid after the license is

    first used to play content.'
  name: first_play_expiration
  types:
  - <xref:datetime.timedelta>
- description: 'Configures the Serial Copy Management System (SCMS) in the license.

    Must be between 0 and 3 inclusive.'
  name: scms_restriction
  types:
  - <xref:int>
- description: 'Configures Automatic Gain Control (AGC) and Color

    Stripe in the license. Must be between 0 and 3 inclusive.'
  name: agc_and_color_stripe_restriction
  types:
  - <xref:int>
- description: 'Configures the Explicit Analog Television

    Output Restriction in the license. Configuration data must be between 0 and 3
    inclusive.'
  name: explicit_analog_television_output_restriction
  types:
  - <xref:azure.mgmt.media.models.ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction>
- description: 'Enables the Image Constraint For Analog Component

    Video Restriction in the license. Required.'
  name: digital_video_only_content_restriction
  types:
  - <xref:bool>
- description: 'Enables the Image Constraint For

    Analog Component Video Restriction in the license. Required.'
  name: image_constraint_for_analog_component_video_restriction
  types:
  - <xref:bool>
- description: 'Enables the Image Constraint

    For Analog Component Video Restriction in the license. Required.'
  name: image_constraint_for_analog_computer_monitor_restriction
  types:
  - <xref:bool>
- description: 'Configures Unknown output handling

    settings of the license. Required. Known values are: "Unknown", "NotAllowed",
    "Allowed", and

    "AllowedWithVideoConstriction".'
  name: allow_passing_video_content_to_unknown_output
  types:
  - <xref:str>
  - <xref:azure.mgmt.media.models.ContentKeyPolicyPlayReadyUnknownOutputPassingOption>
- description: 'Specifies the output protection level for uncompressed

    digital video.'
  name: uncompressed_digital_video_opl
  types:
  - <xref:int>
- description: 'Specifies the output protection level for compressed

    digital video.'
  name: compressed_digital_video_opl
  types:
  - <xref:int>
- description: Specifies the output protection level for compressed digital audio.
  name: analog_video_opl
  types:
  - <xref:int>
- description: 'Specifies the output protection level for compressed

    digital audio.'
  name: compressed_digital_audio_opl
  types:
  - <xref:int>
- description: 'Specifies the output protection level for uncompressed

    digital audio.'
  name: uncompressed_digital_audio_opl
  types:
  - <xref:int>
methods:
- uid: azure.mgmt.media.models.ContentKeyPolicyPlayReadyPlayRight.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.media.models.ContentKeyPolicyPlayReadyPlayRight.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.ContentKeyPolicyPlayReadyPlayRight.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.media.models.ContentKeyPolicyPlayReadyPlayRight.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.ContentKeyPolicyPlayReadyPlayRight.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.media.models.ContentKeyPolicyPlayReadyPlayRight.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
