### YamlMime:PythonClass
uid: azure.mgmt.media.models.JobInputHttp
name: JobInputHttp
fullName: azure.mgmt.media.models.JobInputHttp
module: azure.mgmt.media.models
inheritances:
- azure.mgmt.media.models._models_py3.JobInputClip
summary: 'Represents HTTPS job input.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'JobInputHttp(*, files: List[str] | None = None, start: _models.ClipTime
    | None = None, end: _models.ClipTime | None = None, label: str | None = None,
    input_definitions: List[_models.InputDefinition] | None = None, base_uri: str
    | None = None, **kwargs)'
  parameters:
  - name: files
    description: 'List of files. Required for JobInputHttp. Maximum of 4000 characters
      each.

      Query strings will not be returned in service responses to prevent sensitive
      data exposure.'
    types:
    - <xref:azure.mgmt.media.aio.operations.AccountFiltersOperations.list>[<xref:str>]
  - name: start
    description: 'Defines a point on the timeline of the input media at which processing
      will

      start. Defaults to the beginning of the input media.'
    types:
    - <xref:azure.mgmt.media.models.ClipTime>
  - name: end
    description: 'Defines a point on the timeline of the input media at which processing
      will end.

      Defaults to the end of the input media.'
    types:
    - <xref:azure.mgmt.media.models.ClipTime>
  - name: label
    description: 'A label that is assigned to a JobInputClip, that is used to satisfy
      a reference

      used in the Transform. For example, a Transform can be authored so as to take
      an image file

      with the label ''xyz'' and apply it as an overlay onto the input video before
      it is encoded. When

      submitting a Job, exactly one of the JobInputs should be the image file, and
      it should have the

      label ''xyz''.'
    types:
    - <xref:str>
  - name: input_definitions
    description: 'Defines a list of InputDefinitions. For each InputDefinition, it

      defines a list of track selections and related metadata.'
    types:
    - <xref:azure.mgmt.media.aio.operations.AccountFiltersOperations.list>[<xref:azure.mgmt.media.models.InputDefinition>]
  - name: base_uri
    description: 'Base URI for HTTPS job input. It will be concatenated with provided
      file

      names. If no base uri is given, then the provided file list is assumed to be
      fully qualified

      uris. Maximum length of 4000 characters. The query strings will not be returned
      in service

      responses to prevent sensitive data exposure.'
    types:
    - <xref:str>
variables:
- description: The discriminator for derived types. Required.
  name: odata_type
  types:
  - <xref:str>
- description: 'List of files. Required for JobInputHttp. Maximum of 4000 characters
    each. Query

    strings will not be returned in service responses to prevent sensitive data exposure.'
  name: files
  types:
  - <xref:list>[<xref:str>]
- description: 'Defines a point on the timeline of the input media at which processing
    will start.

    Defaults to the beginning of the input media.'
  name: start
  types:
  - <xref:azure.mgmt.media.models.ClipTime>
- description: 'Defines a point on the timeline of the input media at which processing
    will end.

    Defaults to the end of the input media.'
  name: end
  types:
  - <xref:azure.mgmt.media.models.ClipTime>
- description: 'A label that is assigned to a JobInputClip, that is used to satisfy
    a reference

    used in the Transform. For example, a Transform can be authored so as to take
    an image file

    with the label ''xyz'' and apply it as an overlay onto the input video before
    it is encoded. When

    submitting a Job, exactly one of the JobInputs should be the image file, and it
    should have the

    label ''xyz''.'
  name: label
  types:
  - <xref:str>
- description: 'Defines a list of InputDefinitions. For each InputDefinition, it

    defines a list of track selections and related metadata.'
  name: input_definitions
  types:
  - <xref:list>[<xref:azure.mgmt.media.models.InputDefinition>]
- description: 'Base URI for HTTPS job input. It will be concatenated with provided
    file names.

    If no base uri is given, then the provided file list is assumed to be fully qualified
    uris.

    Maximum length of 4000 characters. The query strings will not be returned in service
    responses

    to prevent sensitive data exposure.'
  name: base_uri
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.media.models.JobInputHttp.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.media.models.JobInputHttp.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.JobInputHttp.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.media.models.JobInputHttp.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.JobInputHttp.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.media.models.JobInputHttp.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
