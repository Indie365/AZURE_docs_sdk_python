### YamlMime:PythonClass
uid: azure.mgmt.desktopvirtualization.models.Application
name: Application
fullName: azure.mgmt.desktopvirtualization.models.Application
module: azure.mgmt.desktopvirtualization.models
inheritances:
- azure.mgmt.desktopvirtualization.models._models_py3.Resource
summary: 'Schema for Application properties.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'Application(*, command_line_setting: str | _models.CommandLineSetting,
    description: str | None = None, friendly_name: str | None = None, file_path: str
    | None = None, msix_package_family_name: str | None = None, msix_package_application_id:
    str | None = None, application_type: str | _models.RemoteApplicationType | None
    = None, command_line_arguments: str | None = None, show_in_portal: bool | None
    = None, icon_path: str | None = None, icon_index: int | None = None, **kwargs:
    Any)'
  parameters:
  - name: description
    description: Description of Application.
    types:
    - <xref:str>
  - name: friendly_name
    description: Friendly name of Application.
    types:
    - <xref:str>
  - name: file_path
    description: Specifies a path for the executable file for the application.
    types:
    - <xref:str>
  - name: msix_package_family_name
    description: Specifies the package family name for MSIX applications.
    types:
    - <xref:str>
  - name: msix_package_application_id
    description: 'Specifies the package application Id for MSIX

      applications.'
    types:
    - <xref:str>
  - name: application_type
    description: 'Resource Type of Application. Known values are: "InBuilt" and

      "MsixApplication".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.desktopvirtualization.models.RemoteApplicationType>
  - name: command_line_setting
    description: 'Specifies whether this published application can be launched

      with command line arguments provided by the client, command line arguments specified
      at publish

      time, or no command line arguments at all. Required. Known values are: "DoNotAllow",
      "Allow",

      and "Require".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.desktopvirtualization.models.CommandLineSetting>
  - name: command_line_arguments
    description: Command Line Arguments for Application.
    types:
    - <xref:str>
  - name: show_in_portal
    description: 'Specifies whether to show the RemoteApp program in the RD Web Access

      server.'
    types:
    - <xref:bool>
  - name: icon_path
    description: Path to icon.
    types:
    - <xref:str>
  - name: icon_index
    description: Index of the icon.
    types:
    - <xref:int>
variables:
- description: 'Fully qualified resource ID for the resource. Ex -

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: 'The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
    or

    "Microsoft.Storage/storageAccounts".'
  name: type
  types:
  - <xref:str>
- description: Metadata pertaining to creation and last modification of the resource.
  name: system_data
  types:
  - <xref:azure.mgmt.desktopvirtualization.models.SystemData>
- description: ObjectId of Application. (internal use).
  name: object_id
  types:
  - <xref:str>
- description: Description of Application.
  name: description
  types:
  - <xref:str>
- description: Friendly name of Application.
  name: friendly_name
  types:
  - <xref:str>
- description: Specifies a path for the executable file for the application.
  name: file_path
  types:
  - <xref:str>
- description: Specifies the package family name for MSIX applications.
  name: msix_package_family_name
  types:
  - <xref:str>
- description: Specifies the package application Id for MSIX applications.
  name: msix_package_application_id
  types:
  - <xref:str>
- description: 'Resource Type of Application. Known values are: "InBuilt" and

    "MsixApplication".'
  name: application_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.desktopvirtualization.models.RemoteApplicationType>
- description: 'Specifies whether this published application can be launched with

    command line arguments provided by the client, command line arguments specified
    at publish

    time, or no command line arguments at all. Required. Known values are: "DoNotAllow",
    "Allow",

    and "Require".'
  name: command_line_setting
  types:
  - <xref:str>
  - <xref:azure.mgmt.desktopvirtualization.models.CommandLineSetting>
- description: Command Line Arguments for Application.
  name: command_line_arguments
  types:
  - <xref:str>
- description: 'Specifies whether to show the RemoteApp program in the RD Web Access

    server.'
  name: show_in_portal
  types:
  - <xref:bool>
- description: Path to icon.
  name: icon_path
  types:
  - <xref:str>
- description: Index of the icon.
  name: icon_index
  types:
  - <xref:int>
- description: Hash of the icon.
  name: icon_hash
  types:
  - <xref:str>
- description: the icon a 64 bit string as a byte array.
  name: icon_content
  types:
  - <xref:bytes>
methods:
- uid: azure.mgmt.desktopvirtualization.models.Application.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.desktopvirtualization.models.Application.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.desktopvirtualization.models.Application.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.desktopvirtualization.models.Application.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.desktopvirtualization.models.Application.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.desktopvirtualization.models.Application.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
