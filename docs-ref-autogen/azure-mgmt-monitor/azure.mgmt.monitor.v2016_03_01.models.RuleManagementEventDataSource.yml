### YamlMime:PythonClass
uid: azure.mgmt.monitor.v2016_03_01.models.RuleManagementEventDataSource
name: RuleManagementEventDataSource
fullName: azure.mgmt.monitor.v2016_03_01.models.RuleManagementEventDataSource
module: azure.mgmt.monitor.v2016_03_01.models
inheritances:
- azure.mgmt.monitor.v2016_03_01.models._models_py3.RuleDataSource
summary: 'A rule management event data source. The discriminator fields is always

  RuleManagementEventDataSource in this case.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'RuleManagementEventDataSource(*, resource_uri: str | None = None, legacy_resource_id:
    str | None = None, resource_location: str | None = None, metric_namespace: str
    | None = None, event_name: str | None = None, event_source: str | None = None,
    level: str | None = None, operation_name: str | None = None, resource_group_name:
    str | None = None, resource_provider_name: str | None = None, status: str | None
    = None, sub_status: str | None = None, claims: _models.RuleManagementEventClaimsDataSource
    | None = None, **kwargs: Any)'
  parameters:
  - name: resource_uri
    description: 'the resource identifier of the resource the rule monitors. **NOTE**:

      this property cannot be updated for an existing rule.'
    types:
    - <xref:str>
  - name: legacy_resource_id
    description: 'the legacy resource identifier of the resource the rule monitors.

      **NOTE**: this property cannot be updated for an existing rule.'
    types:
    - <xref:str>
  - name: resource_location
    description: the location of the resource.
    types:
    - <xref:str>
  - name: metric_namespace
    description: the namespace of the metric.
    types:
    - <xref:str>
  - name: event_name
    description: the event name.
    types:
    - <xref:str>
  - name: event_source
    description: the event source.
    types:
    - <xref:str>
  - name: level
    description: the level.
    types:
    - <xref:str>
  - name: operation_name
    description: 'The name of the operation that should be checked for. If no name
      is

      provided, any operation will match.'
    types:
    - <xref:str>
  - name: resource_group_name
    description: the resource group name.
    types:
    - <xref:str>
  - name: resource_provider_name
    description: the resource provider name.
    types:
    - <xref:str>
  - name: status
    description: 'The status of the operation that should be checked for. If no status
      is

      provided, any status will match.'
    types:
    - <xref:str>
  - name: sub_status
    description: the substatus.
    types:
    - <xref:str>
  - name: claims
    description: the claims.
    types:
    - <xref:azure.mgmt.monitor.v2016_03_01.models.RuleManagementEventClaimsDataSource>
variables:
- description: 'specifies the type of data source. There are two types of rule data
    sources:

    RuleMetricDataSource and RuleManagementEventDataSource. Required.'
  name: odata_type
  types:
  - <xref:str>
- description: 'the resource identifier of the resource the rule monitors. **NOTE**:
    this

    property cannot be updated for an existing rule.'
  name: resource_uri
  types:
  - <xref:str>
- description: 'the legacy resource identifier of the resource the rule monitors.

    **NOTE**: this property cannot be updated for an existing rule.'
  name: legacy_resource_id
  types:
  - <xref:str>
- description: the location of the resource.
  name: resource_location
  types:
  - <xref:str>
- description: the namespace of the metric.
  name: metric_namespace
  types:
  - <xref:str>
- description: the event name.
  name: event_name
  types:
  - <xref:str>
- description: the event source.
  name: event_source
  types:
  - <xref:str>
- description: the level.
  name: level
  types:
  - <xref:str>
- description: 'The name of the operation that should be checked for. If no name is

    provided, any operation will match.'
  name: operation_name
  types:
  - <xref:str>
- description: the resource group name.
  name: resource_group_name
  types:
  - <xref:str>
- description: the resource provider name.
  name: resource_provider_name
  types:
  - <xref:str>
- description: 'The status of the operation that should be checked for. If no status
    is provided,

    any status will match.'
  name: status
  types:
  - <xref:str>
- description: the substatus.
  name: sub_status
  types:
  - <xref:str>
- description: the claims.
  name: claims
  types:
  - <xref:azure.mgmt.monitor.v2016_03_01.models.RuleManagementEventClaimsDataSource>
methods:
- uid: azure.mgmt.monitor.v2016_03_01.models.RuleManagementEventDataSource.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.monitor.v2016_03_01.models.RuleManagementEventDataSource.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.monitor.v2016_03_01.models.RuleManagementEventDataSource.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.monitor.v2016_03_01.models.RuleManagementEventDataSource.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.monitor.v2016_03_01.models.RuleManagementEventDataSource.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.monitor.v2016_03_01.models.RuleManagementEventDataSource.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
