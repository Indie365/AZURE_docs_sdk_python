### YamlMime:PythonClass
uid: azure.mgmt.monitor.v2016_03_01.models.RuleEmailAction
name: RuleEmailAction
fullName: azure.mgmt.monitor.v2016_03_01.models.RuleEmailAction
module: azure.mgmt.monitor.v2016_03_01.models
inheritances:
- azure.mgmt.monitor.v2016_03_01.models._models_py3.RuleAction
summary: 'Specifies the action to send email when the rule condition is evaluated.
  The discriminator is

  always RuleEmailAction in this case.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'RuleEmailAction(*, send_to_service_owners: bool | None = None, custom_emails:
    List[str] | None = None, **kwargs: Any)'
  parameters:
  - name: send_to_service_owners
    description: 'Whether the administrators (service and co-administrators) of

      the service should be notified when the alert is activated.'
    types:
    - <xref:bool>
  - name: custom_emails
    description: 'the list of administrator''s custom email addresses to notify of
      the

      activation of the alert.'
    types:
    - <xref:azure.mgmt.monitor.v2015_04_01.aio.operations.ActivityLogsOperations.list>[<xref:str>]
variables:
- description: 'specifies the type of the action. There are two types of actions:

    RuleEmailAction and RuleWebhookAction. Required.'
  name: odata_type
  types:
  - <xref:str>
- description: 'Whether the administrators (service and co-administrators) of the

    service should be notified when the alert is activated.'
  name: send_to_service_owners
  types:
  - <xref:bool>
- description: 'the list of administrator''s custom email addresses to notify of the

    activation of the alert.'
  name: custom_emails
  types:
  - <xref:list>[<xref:str>]
methods:
- uid: azure.mgmt.monitor.v2016_03_01.models.RuleEmailAction.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.monitor.v2016_03_01.models.RuleEmailAction.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.monitor.v2016_03_01.models.RuleEmailAction.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.monitor.v2016_03_01.models.RuleEmailAction.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.monitor.v2016_03_01.models.RuleEmailAction.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.monitor.v2016_03_01.models.RuleEmailAction.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
