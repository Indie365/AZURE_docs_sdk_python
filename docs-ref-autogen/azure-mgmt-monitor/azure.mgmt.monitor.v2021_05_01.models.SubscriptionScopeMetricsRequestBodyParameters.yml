### YamlMime:PythonClass
uid: azure.mgmt.monitor.v2021_05_01.models.SubscriptionScopeMetricsRequestBodyParameters
name: SubscriptionScopeMetricsRequestBodyParameters
fullName: azure.mgmt.monitor.v2021_05_01.models.SubscriptionScopeMetricsRequestBodyParameters
module: azure.mgmt.monitor.v2021_05_01.models
inheritances:
- azure.mgmt.monitor._serialization.Model
summary: 'Query parameters can also be specified in the body, specifying the same
  parameter in both the

  body and query parameters will result in an error.'
constructor:
  syntax: 'SubscriptionScopeMetricsRequestBodyParameters(*, timespan: time | None
    = None, interval: timedelta | None = None, metric_names: str | None = None, aggregation:
    str | None = None, filter: str | None = None, top: int | None = None, order_by:
    str | None = None, roll_up_by: str | None = None, result_type: str | _models.MetricResultType
    | None = None, metric_namespace: str | None = None, auto_adjust_timegrain: bool
    | None = None, validate_dimensions: bool | None = None, **kwargs: Any)'
  parameters:
  - name: timespan
    description: 'The timespan of the query. It is a string with the following format

      ''startDateTime_ISO/endDateTime_ISO''.'
    types:
    - <xref:datetime.time>
  - name: interval
    description: The interval (i.e. timegrain) of the query.
    types:
    - <xref:datetime.timedelta>
  - name: metric_names
    description: The names of the metrics (comma separated) to retrieve.
    types:
    - <xref:str>
  - name: aggregation
    description: The list of aggregation types (comma separated) to retrieve.
    types:
    - <xref:str>
  - name: filter
    description: 'The **$filter** is used to reduce the set of metric data

      returned.:code:*<br>`Example::code:`<br>`Metric contains metadata A, B and C.:code:`<br>*-

      Return all time series of C where A = a1 and B = b1 or b2:code:*<br>***$filter=A
      eq ''a1'' and

      B eq ''b1'' or B eq ''b2'' and C eq ''*''**`<br>`- Invalid variant:`<br>`**$filter=A

      eq ''a1'' and B eq ''b1'' and C eq ''*'' or B = ''b2''**`<br>`This is invalid
      because the

      logical or operator cannot separate two different metadata names.:code:`<br>`-
      Return all time

      series where A = a1, B = b1 and C = c1:`<br>`**$filter=A eq ''a1'' and B eq
      ''b1'' and C eq

      ''c1''**`<br>`- Return all time series where A = a1:code:*<br>***$filter=A eq
      ''a1'' and

      B eq ''*'' and C eq ''*''**.'
    types:
    - <xref:str>
  - name: top
    description: 'The maximum number of records to retrieve.

      Valid only if $filter is specified.

      Defaults to 10.'
    types:
    - <xref:int>
  - name: order_by
    description: 'The aggregation to use for sorting results and the direction of
      the sort.

      Only one order can be specified.

      Examples: sum asc.'
    types:
    - <xref:str>
  - name: roll_up_by
    description: 'Dimension name(s) to rollup results by. For example if you only
      want to

      see metric values with a filter like ''City eq Seattle or City eq Tacoma'' but
      don''t want to see

      separate values for each city, you can specify ''RollUpBy=City'' to see the
      results for Seattle

      and Tacoma rolled up into one timeseries.'
    types:
    - <xref:str>
  - name: result_type
    description: 'Reduces the set of data collected. The syntax allowed depends on
      the

      operation. See the operation''s description for details. Known values are: "Data"
      and

      "Metadata".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.monitor.v2021_05_01.models.MetricResultType>
  - name: metric_namespace
    description: Metric namespace where the metrics you want reside.
    types:
    - <xref:str>
  - name: auto_adjust_timegrain
    description: 'When set to true, if the timespan passed in is not supported by

      this metric, the API will return the result using the closest supported timespan.
      When set to

      false, an error is returned for invalid timespan parameters. Defaults to false.'
    types:
    - <xref:bool>
  - name: validate_dimensions
    description: 'When set to false, invalid filter parameter values will be

      ignored. When set to true, an error is returned for invalid filter parameters.
      Defaults to

      true.'
    types:
    - <xref:bool>
variables:
- description: 'The timespan of the query. It is a string with the following format

    ''startDateTime_ISO/endDateTime_ISO''.'
  name: timespan
  types:
  - <xref:datetime.time>
- description: The interval (i.e. timegrain) of the query.
  name: interval
  types:
  - <xref:datetime.timedelta>
- description: The names of the metrics (comma separated) to retrieve.
  name: metric_names
  types:
  - <xref:str>
- description: The list of aggregation types (comma separated) to retrieve.
  name: aggregation
  types:
  - <xref:str>
- description: 'The **$filter** is used to reduce the set of metric data

    returned.:code:*<br>`Example::code:`<br>`Metric contains metadata A, B and C.:code:`<br>*-

    Return all time series of C where A = a1 and B = b1 or b2:code:*<br>***$filter=A
    eq ''a1'' and

    B eq ''b1'' or B eq ''b2'' and C eq ''*''**`<br>`- Invalid variant:`<br>`**$filter=A

    eq ''a1'' and B eq ''b1'' and C eq ''*'' or B = ''b2''**`<br>`This is invalid
    because the

    logical or operator cannot separate two different metadata names.:code:`<br>`-
    Return all time

    series where A = a1, B = b1 and C = c1:`<br>`**$filter=A eq ''a1'' and B eq ''b1''
    and C eq

    ''c1''**`<br>`- Return all time series where A = a1:code:*<br>***$filter=A eq
    ''a1'' and

    B eq ''*'' and C eq ''*''**.'
  name: filter
  types:
  - <xref:str>
- description: 'The maximum number of records to retrieve.

    Valid only if $filter is specified.

    Defaults to 10.'
  name: top
  types:
  - <xref:int>
- description: 'The aggregation to use for sorting results and the direction of the
    sort.

    Only one order can be specified.

    Examples: sum asc.'
  name: order_by
  types:
  - <xref:str>
- description: 'Dimension name(s) to rollup results by. For example if you only want
    to see

    metric values with a filter like ''City eq Seattle or City eq Tacoma'' but don''t
    want to see

    separate values for each city, you can specify ''RollUpBy=City'' to see the results
    for Seattle

    and Tacoma rolled up into one timeseries.'
  name: roll_up_by
  types:
  - <xref:str>
- description: 'Reduces the set of data collected. The syntax allowed depends on the

    operation. See the operation''s description for details. Known values are: "Data"
    and

    "Metadata".'
  name: result_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.monitor.v2021_05_01.models.MetricResultType>
- description: Metric namespace where the metrics you want reside.
  name: metric_namespace
  types:
  - <xref:str>
- description: 'When set to true, if the timespan passed in is not supported by

    this metric, the API will return the result using the closest supported timespan.
    When set to

    false, an error is returned for invalid timespan parameters. Defaults to false.'
  name: auto_adjust_timegrain
  types:
  - <xref:bool>
- description: 'When set to false, invalid filter parameter values will be ignored.

    When set to true, an error is returned for invalid filter parameters. Defaults
    to true.'
  name: validate_dimensions
  types:
  - <xref:bool>
methods:
- uid: azure.mgmt.monitor.v2021_05_01.models.SubscriptionScopeMetricsRequestBodyParameters.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.monitor.v2021_05_01.models.SubscriptionScopeMetricsRequestBodyParameters.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.monitor.v2021_05_01.models.SubscriptionScopeMetricsRequestBodyParameters.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.monitor.v2021_05_01.models.SubscriptionScopeMetricsRequestBodyParameters.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.monitor.v2021_05_01.models.SubscriptionScopeMetricsRequestBodyParameters.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.monitor.v2021_05_01.models.SubscriptionScopeMetricsRequestBodyParameters.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
