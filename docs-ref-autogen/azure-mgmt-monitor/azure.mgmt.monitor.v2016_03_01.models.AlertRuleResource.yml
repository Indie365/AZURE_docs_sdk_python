### YamlMime:PythonClass
uid: azure.mgmt.monitor.v2016_03_01.models.AlertRuleResource
name: AlertRuleResource
fullName: azure.mgmt.monitor.v2016_03_01.models.AlertRuleResource
module: azure.mgmt.monitor.v2016_03_01.models
inheritances:
- azure.mgmt.monitor.v2016_03_01.models._models_py3.Resource
summary: 'The alert rule resource.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'AlertRuleResource(*, location: str, name_properties_name: str, is_enabled:
    bool, condition: _models.RuleCondition, tags: Dict[str, str] | None = None, description:
    str | None = None, provisioning_state: str | None = None, action: _models.RuleAction
    | None = None, actions: List[_models.RuleAction] | None = None, **kwargs: Any)'
  parameters:
  - name: location
    description: Resource location. Required.
    types:
    - <xref:str>
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: name_properties_name
    description: the name of the alert rule. Required.
    types:
    - <xref:str>
  - name: description
    description: 'the description of the alert rule that will be included in the alert

      email.'
    types:
    - <xref:str>
  - name: provisioning_state
    description: the provisioning state.
    types:
    - <xref:str>
  - name: is_enabled
    description: the flag that indicates whether the alert rule is enabled. Required.
    types:
    - <xref:bool>
  - name: condition
    description: the condition that results in the alert rule being activated. Required.
    types:
    - <xref:azure.mgmt.monitor.v2016_03_01.models.RuleCondition>
  - name: action
    description: 'action that is performed when the alert rule becomes active, and
      when an alert

      condition is resolved.'
    types:
    - <xref:azure.mgmt.monitor.v2016_03_01.models.RuleAction>
  - name: actions
    description: 'the array of actions that are performed when the alert rule becomes
      active,

      and when an alert condition is resolved.'
    types:
    - <xref:azure.mgmt.monitor.v2015_04_01.aio.operations.ActivityLogsOperations.list>[<xref:azure.mgmt.monitor.v2016_03_01.models.RuleAction>]
variables:
- description: Azure resource Id.
  name: id
  types:
  - <xref:str>
- description: Azure resource name.
  name: name
  types:
  - <xref:str>
- description: Azure resource type.
  name: type
  types:
  - <xref:str>
- description: Resource location. Required.
  name: location
  types:
  - <xref:str>
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: the name of the alert rule. Required.
  name: name_properties_name
  types:
  - <xref:str>
- description: the description of the alert rule that will be included in the alert
    email.
  name: description
  types:
  - <xref:str>
- description: the provisioning state.
  name: provisioning_state
  types:
  - <xref:str>
- description: the flag that indicates whether the alert rule is enabled. Required.
  name: is_enabled
  types:
  - <xref:bool>
- description: the condition that results in the alert rule being activated. Required.
  name: condition
  types:
  - <xref:azure.mgmt.monitor.v2016_03_01.models.RuleCondition>
- description: 'action that is performed when the alert rule becomes active, and when
    an alert

    condition is resolved.'
  name: action
  types:
  - <xref:azure.mgmt.monitor.v2016_03_01.models.RuleAction>
- description: 'the array of actions that are performed when the alert rule becomes
    active, and

    when an alert condition is resolved.'
  name: actions
  types:
  - <xref:list>[<xref:azure.mgmt.monitor.v2016_03_01.models.RuleAction>]
- description: Last time the rule was updated in ISO8601 format.
  name: last_updated_time
  types:
  - <xref:datetime.datetime>
methods:
- uid: azure.mgmt.monitor.v2016_03_01.models.AlertRuleResource.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.monitor.v2016_03_01.models.AlertRuleResource.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.monitor.v2016_03_01.models.AlertRuleResource.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.monitor.v2016_03_01.models.AlertRuleResource.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.monitor.v2016_03_01.models.AlertRuleResource.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.monitor.v2016_03_01.models.AlertRuleResource.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
