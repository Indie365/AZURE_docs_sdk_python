### YamlMime:PythonClass
uid: azure.mgmt.servicefabricmanagedclusters.models.StatefulServiceProperties
name: StatefulServiceProperties
fullName: azure.mgmt.servicefabricmanagedclusters.models.StatefulServiceProperties
module: azure.mgmt.servicefabricmanagedclusters.models
inheritances:
- azure.mgmt.servicefabricmanagedclusters.models._models_py3.ServiceResourceProperties
summary: 'The properties of a stateful service resource.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'StatefulServiceProperties(*, service_type_name: str, partition_description:
    Partition, placement_constraints: str | None = None, correlation_scheme: List[ServiceCorrelation]
    | None = None, service_load_metrics: List[ServiceLoadMetric] | None = None, service_placement_policies:
    List[ServicePlacementPolicy] | None = None, default_move_cost: str | MoveCost
    | None = None, scaling_policies: List[ScalingPolicy] | None = None, service_package_activation_mode:
    str | ServicePackageActivationMode | None = None, has_persisted_state: bool |
    None = None, target_replica_set_size: int | None = None, min_replica_set_size:
    int | None = None, replica_restart_wait_duration: str | None = None, quorum_loss_wait_duration:
    str | None = None, stand_by_replica_keep_duration: str | None = None, service_placement_time_limit:
    str | None = None, **kwargs)'
  parameters:
  - name: placement_constraints
    description: 'The placement constraints as a string. Placement constraints are

      boolean expressions on node properties and allow for restricting a service to
      particular nodes

      based on the service requirements. For example, to place a service on nodes
      where NodeType is

      blue specify the following: "NodeColor == blue)".'
    isRequired: true
    types:
    - <xref:str>
  - name: correlation_scheme
    description: 'A list that describes the correlation of the service with other

      services.'
    isRequired: true
    types:
    - <xref:list>[<xref:service_fabric_managed_clusters_management_client.models.ServiceCorrelation>]
  - name: service_load_metrics
    description: 'The service load metrics is given as an array of ServiceLoadMetric

      objects.'
    isRequired: true
    types:
    - <xref:list>[<xref:service_fabric_managed_clusters_management_client.models.ServiceLoadMetric>]
  - name: service_placement_policies
    description: 'A list that describes the correlation of the service with

      other services.'
    isRequired: true
    types:
    - <xref:list>[<xref:service_fabric_managed_clusters_management_client.models.ServicePlacementPolicy>]
  - name: default_move_cost
    description: 'Specifies the move cost for the service. Possible values include:

      "Zero", "Low", "Medium", "High".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:service_fabric_managed_clusters_management_client.models.MoveCost>
  - name: scaling_policies
    description: Scaling policies for this service.
    isRequired: true
    types:
    - <xref:list>[<xref:service_fabric_managed_clusters_management_client.models.ScalingPolicy>]
  - name: service_kind
    description: 'Required. The kind of service (Stateless or Stateful).Constant filled
      by

      server.  Possible values include: "Stateless", "Stateful".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:service_fabric_managed_clusters_management_client.models.ServiceKind>
  - name: service_type_name
    description: Required. The name of the service type.
    isRequired: true
    types:
    - <xref:str>
  - name: partition_description
    description: Required. Describes how the service is partitioned.
    isRequired: true
    types:
    - <xref:service_fabric_managed_clusters_management_client.models.Partition>
  - name: service_package_activation_mode
    description: 'The activation Mode of the service package. Possible

      values include: "SharedProcess", "ExclusiveProcess".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:service_fabric_managed_clusters_management_client.models.ServicePackageActivationMode>
  - name: has_persisted_state
    description: 'A flag indicating whether this is a persistent service which stores

      states on the local disk. If it is then the value of this property is true,
      if not it is false.'
    isRequired: true
    types:
    - <xref:bool>
  - name: target_replica_set_size
    description: The target replica set size as a number.
    isRequired: true
    types:
    - <xref:int>
  - name: min_replica_set_size
    description: The minimum replica set size as a number.
    isRequired: true
    types:
    - <xref:int>
  - name: replica_restart_wait_duration
    description: 'The duration between when a replica goes down and when a

      new replica is created, represented in ISO 8601 format "hh:mm:ss".'
    isRequired: true
    types:
    - <xref:str>
  - name: quorum_loss_wait_duration
    description: 'The maximum duration for which a partition is allowed to be

      in a state of quorum loss, represented in ISO 8601 format "hh:mm:ss".'
    isRequired: true
    types:
    - <xref:str>
  - name: stand_by_replica_keep_duration
    description: 'The definition on how long StandBy replicas should be

      maintained before being removed, represented in ISO 8601 format "hh:mm:ss".'
    isRequired: true
    types:
    - <xref:str>
  - name: service_placement_time_limit
    description: 'The duration for which replicas can stay InBuild before

      reporting that build is stuck, represented in ISO 8601 format "hh:mm:ss".'
    isRequired: true
    types:
    - <xref:str>
variables:
- description: 'The current deployment or provisioning state, which only appears in

    the response.'
  name: provisioning_state
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.servicefabricmanagedclusters.models.StatefulServiceProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.servicefabricmanagedclusters.models.StatefulServiceProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.servicefabricmanagedclusters.models.StatefulServiceProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.servicefabricmanagedclusters.models.StatefulServiceProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.servicefabricmanagedclusters.models.StatefulServiceProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.servicefabricmanagedclusters.models.StatefulServiceProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.servicefabricmanagedclusters.models.StatefulServiceProperties.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
