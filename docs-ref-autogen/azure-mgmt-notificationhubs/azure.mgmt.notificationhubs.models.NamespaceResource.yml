### YamlMime:PythonClass
uid: azure.mgmt.notificationhubs.models.NamespaceResource
name: NamespaceResource
fullName: azure.mgmt.notificationhubs.models.NamespaceResource
module: azure.mgmt.notificationhubs.models
inheritances:
- azure.mgmt.notificationhubs.models._models_py3.Resource
summary: 'Description of a Namespace resource.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'NamespaceResource(*, location: str | None = None, tags: Dict[str, str]
    | None = None, sku: Sku | None = None, name_properties_name: str | None = None,
    provisioning_state: str | None = None, region: str | None = None, status: str
    | None = None, created_at: datetime | None = None, updated_at: datetime | None
    = None, service_bus_endpoint: str | None = None, subscription_id: str | None =
    None, scale_unit: str | None = None, enabled: bool | None = None, critical: bool
    | None = None, data_center: str | None = None, namespace_type: str | NamespaceType
    | None = None, **kwargs)'
  parameters:
  - name: location
    description: Resource location.
    isRequired: true
    types:
    - <xref:str>
  - name: tags
    description: A set of tags. Resource tags.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: sku
    description: The sku of the created namespace.
    isRequired: true
    types:
    - <xref:azure.mgmt.notificationhubs.models.Sku>
  - name: name_properties_name
    description: The name of the namespace.
    isRequired: true
    types:
    - <xref:str>
  - name: provisioning_state
    description: Provisioning state of the Namespace.
    isRequired: true
    types:
    - <xref:str>
  - name: region
    description: 'Specifies the targeted region in which the namespace should be created.
      It can

      be any of the following values: Australia East, Australia Southeast, Central
      US, East US, East

      US 2, West US, North Central US, South Central US, East Asia, Southeast Asia,
      Brazil South,

      Japan East, Japan West, North Europe, West Europe.'
    isRequired: true
    types:
    - <xref:str>
  - name: status
    description: 'Status of the namespace. It can be any of these values:1 = Created/Active2
      =

      Creating3 = Suspended4 = Deleting.'
    isRequired: true
    types:
    - <xref:str>
  - name: created_at
    description: The time the namespace was created.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: updated_at
    description: The time the namespace was updated.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: service_bus_endpoint
    description: Endpoint you can use to perform NotificationHub operations.
    isRequired: true
    types:
    - <xref:str>
  - name: subscription_id
    description: The Id of the Azure subscription associated with the namespace.
    isRequired: true
    types:
    - <xref:str>
  - name: scale_unit
    description: ScaleUnit where the namespace gets created.
    isRequired: true
    types:
    - <xref:str>
  - name: enabled
    description: Whether or not the namespace is currently enabled.
    isRequired: true
    types:
    - <xref:bool>
  - name: critical
    description: Whether or not the namespace is set as Critical.
    isRequired: true
    types:
    - <xref:bool>
  - name: data_center
    description: Data center for the namespace.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_type
    description: 'The namespace type. Possible values include: "Messaging",

      "NotificationHub".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.notificationhubs.models.NamespaceType>
variables:
- description: Resource Id.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: Identifier for Azure Insights metrics.
  name: metric_id
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.notificationhubs.models.NamespaceResource.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.notificationhubs.models.NamespaceResource.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.notificationhubs.models.NamespaceResource.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.notificationhubs.models.NamespaceResource.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.notificationhubs.models.NamespaceResource.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.notificationhubs.models.NamespaceResource.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.notificationhubs.models.NamespaceResource.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
