### YamlMime:PythonClass
uid: azure.mgmt.recoveryservicessiterecovery.models.A2AProtectedDiskDetails
name: A2AProtectedDiskDetails
fullName: azure.mgmt.recoveryservicessiterecovery.models.A2AProtectedDiskDetails
module: azure.mgmt.recoveryservicessiterecovery.models
inheritances:
- azure.mgmt.recoveryservicessiterecovery._serialization.Model
summary: A2A protected disk details.
constructor:
  syntax: 'A2AProtectedDiskDetails(*, disk_uri: str | None = None, recovery_azure_storage_account_id:
    str | None = None, primary_disk_azure_storage_account_id: str | None = None, recovery_disk_uri:
    str | None = None, disk_name: str | None = None, disk_capacity_in_bytes: int |
    None = None, primary_staging_azure_storage_account_id: str | None = None, disk_type:
    str | None = None, resync_required: bool | None = None, monitoring_percentage_completion:
    int | None = None, monitoring_job_type: str | None = None, data_pending_in_staging_storage_account_in_mb:
    float | None = None, data_pending_at_source_agent_in_mb: float | None = None,
    disk_state: str | None = None, allowed_disk_level_operation: List[str] | None
    = None, is_disk_encrypted: bool | None = None, secret_identifier: str | None =
    None, dek_key_vault_arm_id: str | None = None, is_disk_key_encrypted: bool | None
    = None, key_identifier: str | None = None, kek_key_vault_arm_id: str | None =
    None, failover_disk_name: str | None = None, tfo_disk_name: str | None = None,
    **kwargs)'
  parameters:
  - name: disk_uri
    description: The disk uri.
    types:
    - <xref:str>
  - name: recovery_azure_storage_account_id
    description: The recovery disk storage account.
    types:
    - <xref:str>
  - name: primary_disk_azure_storage_account_id
    description: The primary disk storage account.
    types:
    - <xref:str>
  - name: recovery_disk_uri
    description: Recovery disk uri.
    types:
    - <xref:str>
  - name: disk_name
    description: The disk name.
    types:
    - <xref:str>
  - name: disk_capacity_in_bytes
    description: The disk capacity in bytes.
    types:
    - <xref:int>
  - name: primary_staging_azure_storage_account_id
    description: The primary staging storage account.
    types:
    - <xref:str>
  - name: disk_type
    description: The type of disk.
    types:
    - <xref:str>
  - name: resync_required
    description: A value indicating whether resync is required for this disk.
    types:
    - <xref:bool>
  - name: monitoring_percentage_completion
    description: 'The percentage of the monitoring job. The type of

      the monitoring job is defined by MonitoringJobType property.'
    types:
    - <xref:int>
  - name: monitoring_job_type
    description: 'The type of the monitoring job. The progress is contained in

      MonitoringPercentageCompletion property.'
    types:
    - <xref:str>
  - name: data_pending_in_staging_storage_account_in_mb
    description: 'The data pending for replication in MB

      at staging account.'
    types:
    - <xref:float>
  - name: data_pending_at_source_agent_in_mb
    description: The data pending at source virtual machine in MB.
    types:
    - <xref:float>
  - name: disk_state
    description: The disk state.
    types:
    - <xref:str>
  - name: allowed_disk_level_operation
    description: The disk level operations list.
    types:
    - <xref:azure.mgmt.recoveryservicessiterecovery.aio.operations.Operations.list>[<xref:str>]
  - name: is_disk_encrypted
    description: A value indicating whether vm has encrypted os disk or not.
    types:
    - <xref:bool>
  - name: secret_identifier
    description: The secret URL / identifier (BEK).
    types:
    - <xref:str>
  - name: dek_key_vault_arm_id
    description: The KeyVault resource id for secret (BEK).
    types:
    - <xref:str>
  - name: is_disk_key_encrypted
    description: A value indicating whether disk key got encrypted or not.
    types:
    - <xref:bool>
  - name: key_identifier
    description: The key URL / identifier (KEK).
    types:
    - <xref:str>
  - name: kek_key_vault_arm_id
    description: The KeyVault resource id for key (KEK).
    types:
    - <xref:str>
  - name: failover_disk_name
    description: The failover name for the managed disk.
    types:
    - <xref:str>
  - name: tfo_disk_name
    description: The test failover name for the managed disk.
    types:
    - <xref:str>
variables:
- description: The disk uri.
  name: disk_uri
  types:
  - <xref:str>
- description: The recovery disk storage account.
  name: recovery_azure_storage_account_id
  types:
  - <xref:str>
- description: The primary disk storage account.
  name: primary_disk_azure_storage_account_id
  types:
  - <xref:str>
- description: Recovery disk uri.
  name: recovery_disk_uri
  types:
  - <xref:str>
- description: The disk name.
  name: disk_name
  types:
  - <xref:str>
- description: The disk capacity in bytes.
  name: disk_capacity_in_bytes
  types:
  - <xref:int>
- description: The primary staging storage account.
  name: primary_staging_azure_storage_account_id
  types:
  - <xref:str>
- description: The type of disk.
  name: disk_type
  types:
  - <xref:str>
- description: A value indicating whether resync is required for this disk.
  name: resync_required
  types:
  - <xref:bool>
- description: 'The percentage of the monitoring job. The type of the

    monitoring job is defined by MonitoringJobType property.'
  name: monitoring_percentage_completion
  types:
  - <xref:int>
- description: 'The type of the monitoring job. The progress is contained in

    MonitoringPercentageCompletion property.'
  name: monitoring_job_type
  types:
  - <xref:str>
- description: 'The data pending for replication in MB at

    staging account.'
  name: data_pending_in_staging_storage_account_in_mb
  types:
  - <xref:float>
- description: The data pending at source virtual machine in MB.
  name: data_pending_at_source_agent_in_mb
  types:
  - <xref:float>
- description: The disk state.
  name: disk_state
  types:
  - <xref:str>
- description: The disk level operations list.
  name: allowed_disk_level_operation
  types:
  - <xref:list>[<xref:str>]
- description: A value indicating whether vm has encrypted os disk or not.
  name: is_disk_encrypted
  types:
  - <xref:bool>
- description: The secret URL / identifier (BEK).
  name: secret_identifier
  types:
  - <xref:str>
- description: The KeyVault resource id for secret (BEK).
  name: dek_key_vault_arm_id
  types:
  - <xref:str>
- description: A value indicating whether disk key got encrypted or not.
  name: is_disk_key_encrypted
  types:
  - <xref:bool>
- description: The key URL / identifier (KEK).
  name: key_identifier
  types:
  - <xref:str>
- description: The KeyVault resource id for key (KEK).
  name: kek_key_vault_arm_id
  types:
  - <xref:str>
- description: The failover name for the managed disk.
  name: failover_disk_name
  types:
  - <xref:str>
- description: The test failover name for the managed disk.
  name: tfo_disk_name
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.recoveryservicessiterecovery.models.A2AProtectedDiskDetails.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.recoveryservicessiterecovery.models.A2AProtectedDiskDetails.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.recoveryservicessiterecovery.models.A2AProtectedDiskDetails.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.recoveryservicessiterecovery.models.A2AProtectedDiskDetails.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.recoveryservicessiterecovery.models.A2AProtectedDiskDetails.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.recoveryservicessiterecovery.models.A2AProtectedDiskDetails.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
