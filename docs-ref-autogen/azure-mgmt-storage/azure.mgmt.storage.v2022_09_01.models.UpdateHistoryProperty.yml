### YamlMime:PythonClass
uid: azure.mgmt.storage.v2022_09_01.models.UpdateHistoryProperty
name: UpdateHistoryProperty
fullName: azure.mgmt.storage.v2022_09_01.models.UpdateHistoryProperty
module: azure.mgmt.storage.v2022_09_01.models
inheritances:
- azure.mgmt.storage._serialization.Model
summary: 'An update history of the ImmutabilityPolicy of a blob container.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'UpdateHistoryProperty(*, allow_protected_append_writes: bool | None = None,
    allow_protected_append_writes_all: bool | None = None, **kwargs)'
  parameters:
  - name: allow_protected_append_writes
    description: 'This property can only be changed for unlocked

      time-based retention policies. When enabled, new blocks can be written to an
      append blob while

      maintaining immutability protection and compliance. Only new blocks can be added
      and any

      existing blocks cannot be modified or deleted. This property cannot be changed
      with

      ExtendImmutabilityPolicy API.'
    types:
    - <xref:bool>
  - name: allow_protected_append_writes_all
    description: 'This property can only be changed for unlocked

      time-based retention policies. When enabled, new blocks can be written to both
      ''Append and Bock

      Blobs'' while maintaining immutability protection and compliance. Only new blocks
      can be added

      and any existing blocks cannot be modified or deleted. This property cannot
      be changed with

      ExtendImmutabilityPolicy API. The ''allowProtectedAppendWrites'' and

      ''allowProtectedAppendWritesAll'' properties are mutually exclusive.'
    types:
    - <xref:bool>
variables:
- description: 'The ImmutabilityPolicy update type of a blob container, possible values
    include:

    put, lock and extend. Known values are: "put", "lock", and "extend".'
  name: update
  types:
  - <xref:str>
  - <xref:azure.mgmt.storage.v2022_09_01.models.ImmutabilityPolicyUpdateType>
- description: 'The immutability period for the blobs in the

    container since the policy creation, in days.'
  name: immutability_period_since_creation_in_days
  types:
  - <xref:int>
- description: Returns the date and time the ImmutabilityPolicy was updated.
  name: timestamp
  types:
  - <xref:datetime.datetime>
- description: Returns the Object ID of the user who updated the ImmutabilityPolicy.
  name: object_identifier
  types:
  - <xref:str>
- description: 'Returns the Tenant ID that issued the token for the user who updated
    the

    ImmutabilityPolicy.'
  name: tenant_id
  types:
  - <xref:str>
- description: Returns the User Principal Name of the user who updated the ImmutabilityPolicy.
  name: upn
  types:
  - <xref:str>
- description: 'This property can only be changed for unlocked time-based

    retention policies. When enabled, new blocks can be written to an append blob
    while maintaining

    immutability protection and compliance. Only new blocks can be added and any existing
    blocks

    cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy

    API.'
  name: allow_protected_append_writes
  types:
  - <xref:bool>
- description: 'This property can only be changed for unlocked

    time-based retention policies. When enabled, new blocks can be written to both
    ''Append and Bock

    Blobs'' while maintaining immutability protection and compliance. Only new blocks
    can be added

    and any existing blocks cannot be modified or deleted. This property cannot be
    changed with

    ExtendImmutabilityPolicy API. The ''allowProtectedAppendWrites'' and

    ''allowProtectedAppendWritesAll'' properties are mutually exclusive.'
  name: allow_protected_append_writes_all
  types:
  - <xref:bool>
methods:
- uid: azure.mgmt.storage.v2022_09_01.models.UpdateHistoryProperty.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.storage.v2022_09_01.models.UpdateHistoryProperty.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.storage.v2022_09_01.models.UpdateHistoryProperty.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.storage.v2022_09_01.models.UpdateHistoryProperty.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.storage.v2022_09_01.models.UpdateHistoryProperty.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.storage.v2022_09_01.models.UpdateHistoryProperty.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
