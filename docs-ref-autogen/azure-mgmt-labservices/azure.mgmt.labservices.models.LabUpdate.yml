### YamlMime:PythonClass
uid: azure.mgmt.labservices.models.LabUpdate
name: LabUpdate
fullName: azure.mgmt.labservices.models.LabUpdate
module: azure.mgmt.labservices.models
inheritances:
- azure.mgmt.labservices.models._models_py3.TrackedResourceUpdate
summary: The lab resource for updates.
constructor:
  syntax: 'LabUpdate(*, tags: List[str] | None = None, auto_shutdown_profile: _models.AutoShutdownProfile
    | None = None, connection_profile: _models.ConnectionProfile | None = None, virtual_machine_profile:
    _models.VirtualMachineProfile | None = None, security_profile: _models.SecurityProfile
    | None = None, roster_profile: _models.RosterProfile | None = None, lab_plan_id:
    str | None = None, title: str | None = None, description: str | None = None, **kwargs)'
  parameters:
  - name: tags
    description: Resource tags.
    types:
    - <xref:azure.mgmt.labservices.aio.operations.Operations.list>[<xref:str>]
  - name: auto_shutdown_profile
    description: 'The resource auto shutdown configuration for the lab. This

      controls whether actions are taken on resources that are sitting idle.'
    types:
    - <xref:azure.mgmt.labservices.models.AutoShutdownProfile>
  - name: connection_profile
    description: 'The connection profile for the lab. This controls settings such
      as

      web access to lab resources or whether RDP or SSH ports are open.'
    types:
    - <xref:azure.mgmt.labservices.models.ConnectionProfile>
  - name: virtual_machine_profile
    description: The profile used for creating lab virtual machines.
    types:
    - <xref:azure.mgmt.labservices.models.VirtualMachineProfile>
  - name: security_profile
    description: The lab security profile.
    types:
    - <xref:azure.mgmt.labservices.models.SecurityProfile>
  - name: roster_profile
    description: The lab user list management profile.
    types:
    - <xref:azure.mgmt.labservices.models.RosterProfile>
  - name: lab_plan_id
    description: 'The ID of the lab plan. Used during resource creation to provide
      defaults

      and acts as a permission container when creating a lab via labs.azure.com. Setting
      a labPlanId

      on an existing lab provides organization..'
    types:
    - <xref:str>
  - name: title
    description: The title of the lab.
    types:
    - <xref:str>
  - name: description
    description: The description of the lab.
    types:
    - <xref:str>
variables:
- description: Resource tags.
  name: tags
  types:
  - <xref:list>[<xref:str>]
- description: 'The resource auto shutdown configuration for the lab. This

    controls whether actions are taken on resources that are sitting idle.'
  name: auto_shutdown_profile
  types:
  - <xref:azure.mgmt.labservices.models.AutoShutdownProfile>
- description: 'The connection profile for the lab. This controls settings such as

    web access to lab resources or whether RDP or SSH ports are open.'
  name: connection_profile
  types:
  - <xref:azure.mgmt.labservices.models.ConnectionProfile>
- description: The profile used for creating lab virtual machines.
  name: virtual_machine_profile
  types:
  - <xref:azure.mgmt.labservices.models.VirtualMachineProfile>
- description: The lab security profile.
  name: security_profile
  types:
  - <xref:azure.mgmt.labservices.models.SecurityProfile>
- description: The lab user list management profile.
  name: roster_profile
  types:
  - <xref:azure.mgmt.labservices.models.RosterProfile>
- description: 'The ID of the lab plan. Used during resource creation to provide defaults

    and acts as a permission container when creating a lab via labs.azure.com. Setting
    a labPlanId

    on an existing lab provides organization..'
  name: lab_plan_id
  types:
  - <xref:str>
- description: The title of the lab.
  name: title
  types:
  - <xref:str>
- description: The description of the lab.
  name: description
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.labservices.models.LabUpdate.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.labservices.models.LabUpdate.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.labservices.models.LabUpdate.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.labservices.models.LabUpdate.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.labservices.models.LabUpdate.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.labservices.models.LabUpdate.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
