### YamlMime:PythonClass
uid: azure.mgmt.orbital.models.ContactProfile
name: ContactProfile
fullName: azure.mgmt.orbital.models.ContactProfile
module: azure.mgmt.orbital.models
inheritances:
- azure.mgmt.orbital.models._models_py3.TrackedResource
summary: 'Customer creates a Contact Profile Resource, which will contain all of the
  configurations

  required for scheduling a contact.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'ContactProfile(*, location: str, network_configuration: _models.ContactProfilesPropertiesNetworkConfiguration,
    links: List[_models.ContactProfileLink], tags: Dict[str, str] | None = None, provisioning_state:
    str | _models.ContactProfilesPropertiesProvisioningState | None = None, minimum_viable_contact_duration:
    str | None = None, minimum_elevation_degrees: float | None = None, auto_tracking_configuration:
    str | _models.AutoTrackingConfiguration | None = None, event_hub_uri: str | None
    = None, third_party_configurations: List[_models.ContactProfileThirdPartyConfiguration]
    | None = None, **kwargs: Any)'
  parameters:
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: location
    description: The geo-location where the resource lives. Required.
    types:
    - <xref:str>
  - name: provisioning_state
    description: 'The current state of the resource''s creation, deletion, or

      modification. Known values are: "creating", "succeeded", "failed", "canceled",
      "updating", and

      "deleting".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.orbital.models.ContactProfilesPropertiesProvisioningState>
  - name: minimum_viable_contact_duration
    description: 'Minimum viable contact duration in ISO 8601 format.

      Used for listing the available contacts with a spacecraft at a given ground
      station.'
    types:
    - <xref:str>
  - name: minimum_elevation_degrees
    description: 'Minimum viable elevation for the contact in decimal

      degrees. Used for listing the available contacts with a spacecraft at a given
      ground station.'
    types:
    - <xref:float>
  - name: auto_tracking_configuration
    description: 'Auto-tracking configuration. Known values are:

      "disabled", "xBand", and "sBand".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.orbital.models.AutoTrackingConfiguration>
  - name: event_hub_uri
    description: 'ARM resource identifier of the Event Hub used for telemetry. Requires

      granting Orbital Resource Provider the rights to send telemetry into the hub.'
    types:
    - <xref:str>
  - name: network_configuration
    description: Network configuration of customer virtual network. Required.
    types:
    - <xref:azure.mgmt.orbital.models.ContactProfilesPropertiesNetworkConfiguration>
  - name: third_party_configurations
    description: 'Third-party mission configuration of the Contact Profile.

      Describes RF links, modem processing, and IP endpoints.'
    types:
    - <xref:azure.mgmt.orbital.aio.operations.ContactProfilesOperations.list>[<xref:azure.mgmt.orbital.models.ContactProfileThirdPartyConfiguration>]
  - name: links
    description: 'Links of the Contact Profile. Describes RF links, modem processing,
      and IP

      endpoints. Required.'
    types:
    - <xref:azure.mgmt.orbital.aio.operations.ContactProfilesOperations.list>[<xref:azure.mgmt.orbital.models.ContactProfileLink>]
variables:
- description: 'Fully qualified resource ID for the resource. Ex -

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: 'The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
    or

    "Microsoft.Storage/storageAccounts".'
  name: type
  types:
  - <xref:str>
- description: 'Azure Resource Manager metadata containing createdBy and modifiedBy

    information.'
  name: system_data
  types:
  - <xref:azure.mgmt.orbital.models.SystemData>
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The geo-location where the resource lives. Required.
  name: location
  types:
  - <xref:str>
- description: 'The current state of the resource''s creation, deletion, or

    modification. Known values are: "creating", "succeeded", "failed", "canceled",
    "updating", and

    "deleting".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.orbital.models.ContactProfilesPropertiesProvisioningState>
- description: 'Minimum viable contact duration in ISO 8601 format. Used

    for listing the available contacts with a spacecraft at a given ground station.'
  name: minimum_viable_contact_duration
  types:
  - <xref:str>
- description: 'Minimum viable elevation for the contact in decimal degrees.

    Used for listing the available contacts with a spacecraft at a given ground station.'
  name: minimum_elevation_degrees
  types:
  - <xref:float>
- description: 'Auto-tracking configuration. Known values are: "disabled",

    "xBand", and "sBand".'
  name: auto_tracking_configuration
  types:
  - <xref:str>
  - <xref:azure.mgmt.orbital.models.AutoTrackingConfiguration>
- description: 'ARM resource identifier of the Event Hub used for telemetry. Requires

    granting Orbital Resource Provider the rights to send telemetry into the hub.'
  name: event_hub_uri
  types:
  - <xref:str>
- description: Network configuration of customer virtual network. Required.
  name: network_configuration
  types:
  - <xref:azure.mgmt.orbital.models.ContactProfilesPropertiesNetworkConfiguration>
- description: 'Third-party mission configuration of the Contact Profile.

    Describes RF links, modem processing, and IP endpoints.'
  name: third_party_configurations
  types:
  - <xref:list>[<xref:azure.mgmt.orbital.models.ContactProfileThirdPartyConfiguration>]
- description: 'Links of the Contact Profile. Describes RF links, modem processing,
    and IP

    endpoints. Required.'
  name: links
  types:
  - <xref:list>[<xref:azure.mgmt.orbital.models.ContactProfileLink>]
methods:
- uid: azure.mgmt.orbital.models.ContactProfile.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.orbital.models.ContactProfile.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.orbital.models.ContactProfile.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.orbital.models.ContactProfile.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.orbital.models.ContactProfile.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.orbital.models.ContactProfile.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
