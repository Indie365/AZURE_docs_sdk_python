### YamlMime:PythonClass
uid: azure.mgmt.extendedlocation.v2021_08_31_preview.models.ResourceSyncRule
name: ResourceSyncRule
fullName: azure.mgmt.extendedlocation.v2021_08_31_preview.models.ResourceSyncRule
module: azure.mgmt.extendedlocation.v2021_08_31_preview.models
inheritances:
- azure.mgmt.extendedlocation.v2021_08_31_preview.models._models_py3.TrackedResource
summary: 'Resource Sync Rules definition.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'ResourceSyncRule(*, location: str, tags: Dict[str, str] | None = None,
    priority: int | None = None, selector: _models.ResourceSyncRulePropertiesSelector
    | None = None, target_resource_group: str | None = None, **kwargs)'
  parameters:
  - name: tags
    description: A set of tags. Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: location
    description: Required. The geo-location where the resource lives.
    types:
    - <xref:str>
  - name: priority
    description: Priority represents a priority of the Resource Sync Rule.
    types:
    - <xref:int>
  - name: selector
    description: 'A label selector is composed of two parts, matchLabels and matchExpressions.

      The first part, matchLabels is a map of {key,value} pairs. A single {key,value}
      in the

      matchLabels map is equivalent to an element of matchExpressions, whose key field
      is ''key'', the

      operator is ''In'', and the values array contains only ''value''. The second
      part, matchExpressions

      is a list of resource selector requirements. Valid operators include In, NotIn,
      Exists, and

      DoesNotExist. The values set must be non-empty in the case of In and NotIn.
      The values set must

      be empty in the case of Exists and DoesNotExist. All of the requirements, from
      both matchLabels

      and matchExpressions must all be satisfied in order to match.'
    types:
    - <xref:azure.mgmt.extendedlocation.v2021_08_31_preview.models.ResourceSyncRulePropertiesSelector>
  - name: target_resource_group
    description: 'For an unmapped custom resource, its labels will be used to

      find matching resource sync rules. If this resource sync rule is one of the
      matching rules with

      highest priority, then the unmapped custom resource will be projected to the
      target resource

      group associated with this resource sync rule. The user creating this resource
      sync rule should

      have write permissions on the target resource group and this write permission
      will be validated

      when creating the resource sync rule.'
    types:
    - <xref:str>
variables:
- description: 'Fully qualified resource ID for the resource. Ex -

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: 'The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
    or

    "Microsoft.Storage/storageAccounts".'
  name: type
  types:
  - <xref:str>
- description: A set of tags. Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: Required. The geo-location where the resource lives.
  name: location
  types:
  - <xref:str>
- description: Metadata pertaining to creation and last modification of the resource.
  name: system_data
  types:
  - <xref:azure.mgmt.extendedlocation.v2021_08_31_preview.models.SystemData>
- description: Priority represents a priority of the Resource Sync Rule.
  name: priority
  types:
  - <xref:int>
- description: Provisioning State for the Resource Sync Rule.
  name: provisioning_state
  types:
  - <xref:str>
- description: 'A label selector is composed of two parts, matchLabels and matchExpressions.

    The first part, matchLabels is a map of {key,value} pairs. A single {key,value}
    in the

    matchLabels map is equivalent to an element of matchExpressions, whose key field
    is ''key'', the

    operator is ''In'', and the values array contains only ''value''. The second part,
    matchExpressions

    is a list of resource selector requirements. Valid operators include In, NotIn,
    Exists, and

    DoesNotExist. The values set must be non-empty in the case of In and NotIn. The
    values set must

    be empty in the case of Exists and DoesNotExist. All of the requirements, from
    both matchLabels

    and matchExpressions must all be satisfied in order to match.'
  name: selector
  types:
  - <xref:azure.mgmt.extendedlocation.v2021_08_31_preview.models.ResourceSyncRulePropertiesSelector>
- description: 'For an unmapped custom resource, its labels will be used to find

    matching resource sync rules. If this resource sync rule is one of the matching
    rules with

    highest priority, then the unmapped custom resource will be projected to the target
    resource

    group associated with this resource sync rule. The user creating this resource
    sync rule should

    have write permissions on the target resource group and this write permission
    will be validated

    when creating the resource sync rule.'
  name: target_resource_group
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.extendedlocation.v2021_08_31_preview.models.ResourceSyncRule.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.extendedlocation.v2021_08_31_preview.models.ResourceSyncRule.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.extendedlocation.v2021_08_31_preview.models.ResourceSyncRule.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.extendedlocation.v2021_08_31_preview.models.ResourceSyncRule.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.extendedlocation.v2021_08_31_preview.models.ResourceSyncRule.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.extendedlocation.v2021_08_31_preview.models.ResourceSyncRule.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.extendedlocation.v2021_08_31_preview.models.ResourceSyncRule.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
