### YamlMime:PythonClass
uid: azure.mgmt.avs.models.VmHostPlacementPolicyProperties
name: VmHostPlacementPolicyProperties
fullName: azure.mgmt.avs.models.VmHostPlacementPolicyProperties
module: azure.mgmt.avs.models
inheritances:
- azure.mgmt.avs.models._models_py3.PlacementPolicyProperties
summary: 'VM-Host placement policy properties.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'VmHostPlacementPolicyProperties(*, vm_members: List[str], host_members:
    List[str], affinity_type: str | _models.AffinityType, state: str | _models.PlacementPolicyState
    | None = None, display_name: str | None = None, affinity_strength: str | _models.AffinityStrength
    | None = None, azure_hybrid_benefit_type: str | _models.AzureHybridBenefitType
    | None = None, **kwargs)'
  parameters:
  - name: state
    description: 'Whether the placement policy is enabled or disabled. Known values
      are:

      "Enabled" and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.avs.models.PlacementPolicyState>
  - name: display_name
    description: Display name of the placement policy.
    types:
    - <xref:str>
  - name: vm_members
    description: Virtual machine members list. Required.
    types:
    - <xref:azure.mgmt.avs.aio.operations.AddonsOperations.list>[<xref:str>]
  - name: host_members
    description: Host members list. Required.
    types:
    - <xref:azure.mgmt.avs.aio.operations.AddonsOperations.list>[<xref:str>]
  - name: affinity_type
    description: 'placement policy affinity type. Required. Known values are: "Affinity"

      and "AntiAffinity".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.avs.models.AffinityType>
  - name: affinity_strength
    description: 'vm-host placement policy affinity strength (should/must). Known

      values are: "Should" and "Must".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.avs.models.AffinityStrength>
  - name: azure_hybrid_benefit_type
    description: 'placement policy azure hybrid benefit opt-in type. Known

      values are: "SqlHost" and "None".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.avs.models.AzureHybridBenefitType>
variables:
- description: 'placement policy type. Required. Known values are: "VmVm" and "VmHost".'
  name: type
  types:
  - <xref:str>
  - <xref:azure.mgmt.avs.models.PlacementPolicyType>
- description: 'Whether the placement policy is enabled or disabled. Known values
    are: "Enabled"

    and "Disabled".'
  name: state
  types:
  - <xref:str>
  - <xref:azure.mgmt.avs.models.PlacementPolicyState>
- description: Display name of the placement policy.
  name: display_name
  types:
  - <xref:str>
- description: 'The provisioning state. Known values are: "Succeeded", "Failed",

    "Building", "Deleting", "Updating", and "Canceled".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.avs.models.PlacementPolicyProvisioningState>
- description: Virtual machine members list. Required.
  name: vm_members
  types:
  - <xref:list>[<xref:str>]
- description: Host members list. Required.
  name: host_members
  types:
  - <xref:list>[<xref:str>]
- description: 'placement policy affinity type. Required. Known values are: "Affinity"
    and

    "AntiAffinity".'
  name: affinity_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.avs.models.AffinityType>
- description: 'vm-host placement policy affinity strength (should/must). Known values

    are: "Should" and "Must".'
  name: affinity_strength
  types:
  - <xref:str>
  - <xref:azure.mgmt.avs.models.AffinityStrength>
- description: 'placement policy azure hybrid benefit opt-in type. Known

    values are: "SqlHost" and "None".'
  name: azure_hybrid_benefit_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.avs.models.AzureHybridBenefitType>
methods:
- uid: azure.mgmt.avs.models.VmHostPlacementPolicyProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.avs.models.VmHostPlacementPolicyProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.avs.models.VmHostPlacementPolicyProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.avs.models.VmHostPlacementPolicyProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.avs.models.VmHostPlacementPolicyProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.avs.models.VmHostPlacementPolicyProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
