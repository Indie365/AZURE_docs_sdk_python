### YamlMime:PythonClass
uid: azure.identity.InteractiveBrowserCredential
name: InteractiveBrowserCredential
fullName: azure.identity.InteractiveBrowserCredential
module: azure.identity
inheritances:
- azure.identity._internal.interactive.InteractiveCredential
summary: 'Opens a browser to interactively authenticate a user.


  <xref:azure.identity.InteractiveBrowserCredential.get_token> opens a browser to
  a login URL provided by Azure Active Directory and authenticates a user

  there with the authorization code flow, using PKCE (Proof Key for Code Exchange)
  internally to protect the code.'
constructor:
  syntax: 'InteractiveBrowserCredential(**kwargs: Any)'
  parameters:
  - name: authority
    description: 'Authority of an Azure Active Directory endpoint, for example "login.microsoftonline.com",

      the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

      defines authorities for other clouds.'
    types:
    - <xref:str>
  - name: tenant_id
    description: 'an Azure Active Directory tenant ID. Defaults to the "organizations"
      tenant, which can

      authenticate work or school accounts.'
    types:
    - <xref:str>
  - name: client_id
    description: 'Client ID of the Azure Active Directory application users will sign
      in to. If

      unspecified, users will authenticate to an Azure development application.'
    types:
    - <xref:str>
  - name: login_hint
    description: 'a username suggestion to pre-fill the login page''s username/email
      address field. A user

      may still log in with a different username.'
    types:
    - <xref:str>
  - name: redirect_uri
    description: 'a redirect URI for the application identified by *client_id* as
      configured in Azure

      Active Directory, for example "[http://localhost:8400](http://localhost:8400)".
      This is only required when passing a value for

      **client_id**, and must match a redirect URI in the application''s registration.
      The credential must be able to

      bind a socket to this URI.'
    types:
    - <xref:str>
  - name: authentication_record
    description: <xref:azure.identity.AuthenticationRecord> returned by <xref:azure.identity.InteractiveBrowserCredential.authenticate>
    types:
    - <xref:azure.identity.AuthenticationRecord>
  - name: disable_automatic_authentication
    description: 'if True, <xref:azure.identity.InteractiveBrowserCredential.get_token>
      will raise

      <xref:azure.identity.AuthenticationRequiredError> when user interaction is required
      to acquire a token. Defaults to False.'
    types:
    - <xref:bool>
  - name: cache_persistence_options
    description: 'configuration for persistent token caching. If unspecified, the
      credential

      will cache tokens in memory.'
    types:
    - <xref:azure.identity.TokenCachePersistenceOptions>
  - name: timeout
    description: seconds to wait for the user to complete authentication. Defaults
      to 300 (5 minutes).
    types:
    - <xref:int>
methods:
- uid: azure.identity.InteractiveBrowserCredential.authenticate
  name: authenticate
  summary: Interactively authenticate a user.
  signature: 'authenticate(**kwargs: Any) -> AuthenticationRecord'
  parameters:
  - name: scopes
    description: 'scopes to request during authentication, such as those provided
      by

      <xref:azure.identity.AuthenticationRequiredError.scopes>. If provided, successful
      authentication will cache an access token

      for these scopes.'
    types:
    - <xref:Iterable>[<xref:str>]
  - name: claims
    description: 'additional claims required in the token, such as those provided
      by

      <xref:azure.identity.AuthenticationRequiredError.claims>'
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.identity.AuthenticationRecord>
  exceptions:
  - type: azure.core.exceptions.ClientAuthenticationError
    description: authentication failed. The error's `message` attribute gives a reason.
- uid: azure.identity.InteractiveBrowserCredential.close
  name: close
  signature: close() -> None
- uid: azure.identity.InteractiveBrowserCredential.get_token
  name: get_token
  summary: 'Request an access token for *scopes*.


    This method is called automatically by Azure SDK clients.'
  signature: 'get_token(*scopes: str, **kwargs: Any) -> AccessToken'
  parameters:
  - name: scopes
    description: desired scopes for the access token. This method requires at least
      one scope.
    isRequired: true
    types:
    - <xref:str>
  - name: claims
    description: 'additional claims required in the token, such as those returned
      in a resource provider''s

      claims challenge following an authorization failure'
    types:
    - <xref:str>
  - name: tenant_id
    description: optional tenant to include in the token request.
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.core.credentials.AccessToken>
  exceptions:
  - type: azure.identity.CredentialUnavailableError
    description: 'the credential is unable to attempt authentication because it lacks

      required data, state, or platform support'
  - type: azure.core.exceptions.ClientAuthenticationError
    description: authentication failed. The error's `message` attribute gives a reason.
  - type: azure.identity.AuthenticationRequiredError
    description: 'user interaction is necessary to acquire a token, and the credential
      is

      configured not to begin this automatically. Call'
  - type: azure.identity.InteractiveBrowserCredential.authenticate
    description: to begin interactive authentication.
