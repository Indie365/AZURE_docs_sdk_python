### YamlMime:PythonClass
uid: azure.mgmt.datashare.models.Invitation
name: Invitation
fullName: azure.mgmt.datashare.models.Invitation
module: azure.mgmt.datashare.models
inheritances:
- azure.mgmt.datashare.models._models_py3.ProxyDto
summary: 'A Invitation data transfer object.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'Invitation(*, expiration_date: datetime | None = None, target_active_directory_id:
    str | None = None, target_email: str | None = None, target_object_id: str | None
    = None, **kwargs)'
  parameters:
  - name: expiration_date
    description: The expiration date for the invitation and share subscription.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: target_active_directory_id
    description: The target Azure AD Id. Can't be combined with email.
    isRequired: true
    types:
    - <xref:str>
  - name: target_email
    description: The email the invitation is directed to.
    isRequired: true
    types:
    - <xref:str>
  - name: target_object_id
    description: 'The target user or application Id that invitation is being sent
      to.

      Must be specified along TargetActiveDirectoryId. This enables sending

      invitations to specific users or applications in an AD tenant.'
    isRequired: true
    types:
    - <xref:str>
variables:
- description: The resource id of the azure resource.
  name: id
  types:
  - <xref:str>
- description: Name of the azure resource.
  name: name
  types:
  - <xref:str>
- description: System Data of the Azure resource.
  name: system_data
  types:
  - <xref:azure.mgmt.datashare.models.SystemData>
- description: Type of the azure resource.
  name: type
  types:
  - <xref:str>
- description: unique invitation id.
  name: invitation_id
  types:
  - <xref:str>
- description: 'The status of the invitation. Possible values include: "Pending",

    "Accepted", "Rejected", "Withdrawn".'
  name: invitation_status
  types:
  - <xref:str>
  - <xref:azure.mgmt.datashare.models.InvitationStatus>
- description: The time the recipient responded to the invitation.
  name: responded_at
  types:
  - <xref:datetime.datetime>
- description: Gets the time at which the invitation was sent.
  name: sent_at
  types:
  - <xref:datetime.datetime>
- description: Email of the user who created the resource.
  name: user_email
  types:
  - <xref:str>
- description: Name of the user who created the resource.
  name: user_name
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.datashare.models.Invitation.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.datashare.models.Invitation.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.datashare.models.Invitation.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.datashare.models.Invitation.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.datashare.models.Invitation.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.datashare.models.Invitation.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.datashare.models.Invitation.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
