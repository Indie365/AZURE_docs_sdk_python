### YamlMime:PythonClass
uid: azure.mgmt.storagecache.models.CacheUsernameDownloadSettings
name: CacheUsernameDownloadSettings
fullName: azure.mgmt.storagecache.models.CacheUsernameDownloadSettings
module: azure.mgmt.storagecache.models
inheritances:
- azure.mgmt.storagecache._serialization.Model
summary: 'Settings for Extended Groups username and group download.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'CacheUsernameDownloadSettings(*, extended_groups: bool | None = None, username_source:
    str | _models.UsernameSource = ''None'', group_file_uri: str | None = None, user_file_uri:
    str | None = None, ldap_server: str | None = None, ldap_base_dn: str | None =
    None, encrypt_ldap_connection: bool | None = None, require_valid_certificate:
    bool | None = None, auto_download_certificate: bool | None = None, ca_certificate_uri:
    str | None = None, credentials: _models.CacheUsernameDownloadSettingsCredentials
    | None = None, **kwargs: Any)'
  parameters:
  - name: extended_groups
    description: Whether or not Extended Groups is enabled.
    types:
    - <xref:bool>
  - name: username_source
    description: 'This setting determines how the cache gets username and group names

      for clients. Known values are: "AD", "LDAP", "File", and "None".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.storagecache.models.UsernameSource>
  - name: group_file_uri
    description: 'The URI of the file containing group information (in /etc/group
      file

      format). This field must be populated when ''usernameSource'' is set to ''File''.'
    types:
    - <xref:str>
  - name: user_file_uri
    description: 'The URI of the file containing user information (in /etc/passwd
      file

      format). This field must be populated when ''usernameSource'' is set to ''File''.'
    types:
    - <xref:str>
  - name: ldap_server
    description: The fully qualified domain name or IP address of the LDAP server
      to use.
    types:
    - <xref:str>
  - name: ldap_base_dn
    description: The base distinguished name for the LDAP domain.
    types:
    - <xref:str>
  - name: encrypt_ldap_connection
    description: Whether or not the LDAP connection should be encrypted.
    types:
    - <xref:bool>
  - name: require_valid_certificate
    description: 'Determines if the certificates must be validated by a

      certificate authority. When true, caCertificateURI must be provided.'
    types:
    - <xref:bool>
  - name: auto_download_certificate
    description: 'Determines if the certificate should be automatically

      downloaded. This applies to ''caCertificateURI'' only if ''requireValidCertificate''
      is true.'
    types:
    - <xref:bool>
  - name: ca_certificate_uri
    description: 'The URI of the CA certificate to validate the LDAP secure

      connection. This field must be populated when ''requireValidCertificate'' is
      set to true.'
    types:
    - <xref:str>
  - name: credentials
    description: When present, these are the credentials for the secure LDAP connection.
    types:
    - <xref:azure.mgmt.storagecache.models.CacheUsernameDownloadSettingsCredentials>
variables:
- description: Whether or not Extended Groups is enabled.
  name: extended_groups
  types:
  - <xref:bool>
- description: 'This setting determines how the cache gets username and group names
    for

    clients. Known values are: "AD", "LDAP", "File", and "None".'
  name: username_source
  types:
  - <xref:str>
  - <xref:azure.mgmt.storagecache.models.UsernameSource>
- description: 'The URI of the file containing group information (in /etc/group file

    format). This field must be populated when ''usernameSource'' is set to ''File''.'
  name: group_file_uri
  types:
  - <xref:str>
- description: 'The URI of the file containing user information (in /etc/passwd file

    format). This field must be populated when ''usernameSource'' is set to ''File''.'
  name: user_file_uri
  types:
  - <xref:str>
- description: The fully qualified domain name or IP address of the LDAP server to
    use.
  name: ldap_server
  types:
  - <xref:str>
- description: The base distinguished name for the LDAP domain.
  name: ldap_base_dn
  types:
  - <xref:str>
- description: Whether or not the LDAP connection should be encrypted.
  name: encrypt_ldap_connection
  types:
  - <xref:bool>
- description: 'Determines if the certificates must be validated by a

    certificate authority. When true, caCertificateURI must be provided.'
  name: require_valid_certificate
  types:
  - <xref:bool>
- description: 'Determines if the certificate should be automatically

    downloaded. This applies to ''caCertificateURI'' only if ''requireValidCertificate''
    is true.'
  name: auto_download_certificate
  types:
  - <xref:bool>
- description: 'The URI of the CA certificate to validate the LDAP secure connection.

    This field must be populated when ''requireValidCertificate'' is set to true.'
  name: ca_certificate_uri
  types:
  - <xref:str>
- description: 'Indicates whether or not the HPC Cache has performed the username

    download successfully. Known values are: "Yes", "No", and "Error".'
  name: username_downloaded
  types:
  - <xref:str>
  - <xref:azure.mgmt.storagecache.models.UsernameDownloadedType>
- description: When present, these are the credentials for the secure LDAP connection.
  name: credentials
  types:
  - <xref:azure.mgmt.storagecache.models.CacheUsernameDownloadSettingsCredentials>
methods:
- uid: azure.mgmt.storagecache.models.CacheUsernameDownloadSettings.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.storagecache.models.CacheUsernameDownloadSettings.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.storagecache.models.CacheUsernameDownloadSettings.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.storagecache.models.CacheUsernameDownloadSettings.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.storagecache.models.CacheUsernameDownloadSettings.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.storagecache.models.CacheUsernameDownloadSettings.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
