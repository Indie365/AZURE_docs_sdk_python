### YamlMime:PythonClass
uid: azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySet
name: ResourceModelWithAllowedPropertySet
fullName: azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySet
module: azure.mgmt.mixedreality.models
inheritances:
- msrest.serialization.Model
summary: 'The resource model definition containing the full set of allowed properties

  for a resource. Except properties bag, there cannot be a top level property

  outside of this set.


  Variables are only populated by the server, and will be ignored when

  sending a request.'
constructor:
  syntax: 'ResourceModelWithAllowedPropertySet(*, location: str = None, managed_by:
    str = None, kind: str = None, tags=None, identity=None, sku=None, plan=None, **kwargs)'
  parameters:
  - name: location
    description: The geo-location where the resource lives
    isRequired: true
    types:
    - <xref:str>
  - name: managed_by
    description: 'The  fully qualified resource ID of the resource that

      manages this resource. Indicates if this resource is managed by another

      azure resource. If this is present, complete mode deployment will not

      delete the resource if it is removed from the template since it is managed

      by another resource.'
    isRequired: true
    types:
    - <xref:str>
  - name: kind
    description: 'Metadata used by portal/tooling/etc to render different UX

      experiences for resources of the same type; e.g. ApiApps are a kind of

      Microsoft.Web/sites type.  If supported, the resource provider must

      validate and persist this value.'
    isRequired: true
    types:
    - <xref:str>
  - name: tags
    description: Resource tags.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: identity
    isRequired: true
    types:
    - <xref:azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySetIdentity>
  - name: sku
    isRequired: true
    types:
    - <xref:azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySetSku>
  - name: plan
    isRequired: true
    types:
    - <xref:azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySetPlan>
variables:
- description: 'Fully qualified resource Id for the resource. Ex -

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
  name: id
  types:
  - <xref:str>
- description: The name of the resource
  name: name
  types:
  - <xref:str>
- description: 'The type of the resource. Ex-

    Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts..'
  name: type
  types:
  - <xref:str>
- description: 'The etag field is *not* required. If it is provided in the

    response body, it must also be provided as a header per the normal etag

    convention.  Entity tags are used for comparing two or more entities from

    the same requested resource. HTTP/1.1 uses entity tags in the etag

    (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26),

    and If-Range (section 14.27) header fields.'
  name: etag
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySet.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySet.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySet.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySet.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySet.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySet.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.mixedreality.models.ResourceModelWithAllowedPropertySet.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
