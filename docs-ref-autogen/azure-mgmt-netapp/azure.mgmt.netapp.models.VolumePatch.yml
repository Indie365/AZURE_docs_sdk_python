### YamlMime:PythonClass
uid: azure.mgmt.netapp.models.VolumePatch
name: VolumePatch
fullName: azure.mgmt.netapp.models.VolumePatch
module: azure.mgmt.netapp.models
inheritances:
- msrest.serialization.Model
summary: 'Volume patch resource.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'VolumePatch(*, location: str | None = None, tags: Dict[str, str] | None
    = None, service_level: str | ServiceLevel | None = ''Premium'', usage_threshold:
    int | None = 107374182400, export_policy: VolumePatchPropertiesExportPolicy |
    None = None, throughput_mibps: float | None = None, data_protection: VolumePatchPropertiesDataProtection
    | None = None, is_default_quota_enabled: bool | None = False, default_user_quota_in_ki_bs:
    int | None = 0, default_group_quota_in_ki_bs: int | None = 0, **kwargs)'
  parameters:
  - name: location
    description: Resource location.
    isRequired: true
    types:
    - <xref:str>
  - name: tags
    description: A set of tags. Resource tags.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: service_level
    description: 'The service level of the file system. Possible values include:

      "Standard", "Premium", "Ultra", "StandardZRS". Default value: "Premium".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.netapp.models.ServiceLevel>
  - name: usage_threshold
    description: 'Maximum storage quota allowed for a file system in bytes. This is
      a

      soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB.
      Specified in

      bytes.'
    isRequired: true
    types:
    - <xref:long>
  - name: export_policy
    description: Set of export policy rules.
    isRequired: true
    types:
    - <xref:azure.mgmt.netapp.models.VolumePatchPropertiesExportPolicy>
  - name: throughput_mibps
    description: Maximum throughput in Mibps that can be achieved by this volume.
    isRequired: true
    types:
    - <xref:float>
  - name: data_protection
    description: 'DataProtection type volumes include an object containing details
      of the

      replication.'
    isRequired: true
    types:
    - <xref:azure.mgmt.netapp.models.VolumePatchPropertiesDataProtection>
  - name: is_default_quota_enabled
    description: Specifies if default quota is enabled for the volume.
    isRequired: true
    types:
    - <xref:bool>
  - name: default_user_quota_in_ki_bs
    description: 'Default user quota for volume in KiBs. If

      isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .'
    isRequired: true
    types:
    - <xref:long>
  - name: default_group_quota_in_ki_bs
    description: 'Default group quota for volume in KiBs. If

      isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.'
    isRequired: true
    types:
    - <xref:long>
variables:
- description: Resource Id.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.netapp.models.VolumePatch.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.netapp.models.VolumePatch.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.netapp.models.VolumePatch.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.netapp.models.VolumePatch.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.netapp.models.VolumePatch.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.netapp.models.VolumePatch.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.netapp.models.VolumePatch.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
