### YamlMime:PythonClass
uid: azure.mgmt.netapp.models.CapacityPool
name: CapacityPool
fullName: azure.mgmt.netapp.models.CapacityPool
module: azure.mgmt.netapp.models
inheritances:
- msrest.serialization.Model
summary: 'Capacity pool resource.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'CapacityPool(*, location: str, size: int, service_level: str | ServiceLevel
    = ''Premium'', tags: Dict[str, str] | None = None, qos_type: str | QosType | None
    = None, cool_access: bool | None = False, encryption_type: str | EncryptionType
    | None = ''Single'', **kwargs)'
  parameters:
  - name: location
    description: Required. Resource location.
    isRequired: true
    types:
    - <xref:str>
  - name: tags
    description: A set of tags. Resource tags.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: size
    description: 'Required. Provisioned size of the pool (in bytes). Allowed values
      are in 4TiB

      chunks (value must be multiply of 4398046511104).'
    isRequired: true
    types:
    - <xref:long>
  - name: service_level
    description: 'Required. The service level of the file system. Possible values
      include:

      "Standard", "Premium", "Ultra", "StandardZRS". Default value: "Premium".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.netapp.models.ServiceLevel>
  - name: qos_type
    description: 'The qos type of the pool. Possible values include: "Auto", "Manual".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.netapp.models.QosType>
  - name: cool_access
    description: If enabled (true) the pool can contain cool Access enabled volumes.
    isRequired: true
    types:
    - <xref:bool>
  - name: encryption_type
    description: 'Encryption type of the capacity pool, set encryption type for data
      at

      rest for this pool and all volumes in it. This value can only be set when creating
      new pool.

      Possible values include: "Single", "Double". Default value: "Single".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.netapp.models.EncryptionType>
variables:
- description: Resource Id.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: A unique read-only string that changes whenever the resource is updated.
  name: etag
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: UUID v4 used to identify the Pool.
  name: pool_id
  types:
  - <xref:str>
- description: Azure lifecycle management.
  name: provisioning_state
  types:
  - <xref:str>
- description: Total throughput of pool in Mibps.
  name: total_throughput_mibps
  types:
  - <xref:float>
- description: Utilized throughput of pool in Mibps.
  name: utilized_throughput_mibps
  types:
  - <xref:float>
methods:
- uid: azure.mgmt.netapp.models.CapacityPool.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.netapp.models.CapacityPool.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.netapp.models.CapacityPool.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.netapp.models.CapacityPool.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.netapp.models.CapacityPool.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.netapp.models.CapacityPool.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.netapp.models.CapacityPool.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
