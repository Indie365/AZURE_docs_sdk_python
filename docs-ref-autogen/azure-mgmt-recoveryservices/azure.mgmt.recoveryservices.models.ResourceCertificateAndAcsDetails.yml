### YamlMime:PythonClass
uid: azure.mgmt.recoveryservices.models.ResourceCertificateAndAcsDetails
name: ResourceCertificateAndAcsDetails
fullName: azure.mgmt.recoveryservices.models.ResourceCertificateAndAcsDetails
module: azure.mgmt.recoveryservices.models
inheritances:
- azure.mgmt.recoveryservices.models._models_py3.ResourceCertificateDetails
summary: 'Certificate details representing the Vault credentials for ACS.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'ResourceCertificateAndAcsDetails(*, global_acs_namespace: str, global_acs_host_name:
    str, global_acs_rp_realm: str, certificate: bytes | None = None, friendly_name:
    str | None = None, issuer: str | None = None, resource_id: int | None = None,
    subject: str | None = None, thumbprint: str | None = None, valid_from: datetime
    | None = None, valid_to: datetime | None = None, **kwargs: Any)'
  parameters:
  - name: certificate
    description: The base64 encoded certificate raw data string.
    types:
    - <xref:bytes>
  - name: friendly_name
    description: Certificate friendly name.
    types:
    - <xref:str>
  - name: issuer
    description: Certificate issuer.
    types:
    - <xref:str>
  - name: resource_id
    description: Resource ID of the vault.
    types:
    - <xref:int>
  - name: subject
    description: Certificate Subject Name.
    types:
    - <xref:str>
  - name: thumbprint
    description: Certificate thumbprint.
    types:
    - <xref:str>
  - name: valid_from
    description: Certificate Validity start Date time.
    types:
    - <xref:datetime.datetime>
  - name: valid_to
    description: Certificate Validity End Date time.
    types:
    - <xref:datetime.datetime>
  - name: global_acs_namespace
    description: ACS namespace name - tenant for our service. Required.
    types:
    - <xref:str>
  - name: global_acs_host_name
    description: Acs mgmt host name to connect to. Required.
    types:
    - <xref:str>
  - name: global_acs_rp_realm
    description: Global ACS namespace RP realm. Required.
    types:
    - <xref:str>
variables:
- description: 'This property will be used as the discriminator for deciding the specific

    types in the polymorphic chain of types. Required.'
  name: auth_type
  types:
  - <xref:str>
- description: The base64 encoded certificate raw data string.
  name: certificate
  types:
  - <xref:bytes>
- description: Certificate friendly name.
  name: friendly_name
  types:
  - <xref:str>
- description: Certificate issuer.
  name: issuer
  types:
  - <xref:str>
- description: Resource ID of the vault.
  name: resource_id
  types:
  - <xref:int>
- description: Certificate Subject Name.
  name: subject
  types:
  - <xref:str>
- description: Certificate thumbprint.
  name: thumbprint
  types:
  - <xref:str>
- description: Certificate Validity start Date time.
  name: valid_from
  types:
  - <xref:datetime.datetime>
- description: Certificate Validity End Date time.
  name: valid_to
  types:
  - <xref:datetime.datetime>
- description: ACS namespace name - tenant for our service. Required.
  name: global_acs_namespace
  types:
  - <xref:str>
- description: Acs mgmt host name to connect to. Required.
  name: global_acs_host_name
  types:
  - <xref:str>
- description: Global ACS namespace RP realm. Required.
  name: global_acs_rp_realm
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.recoveryservices.models.ResourceCertificateAndAcsDetails.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.recoveryservices.models.ResourceCertificateAndAcsDetails.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.recoveryservices.models.ResourceCertificateAndAcsDetails.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.recoveryservices.models.ResourceCertificateAndAcsDetails.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.recoveryservices.models.ResourceCertificateAndAcsDetails.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.recoveryservices.models.ResourceCertificateAndAcsDetails.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
