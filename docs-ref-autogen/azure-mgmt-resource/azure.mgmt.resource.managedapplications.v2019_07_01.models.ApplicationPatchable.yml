### YamlMime:PythonClass
uid: azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationPatchable
name: ApplicationPatchable
fullName: azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationPatchable
module: azure.mgmt.resource.managedapplications.v2019_07_01.models
inheritances:
- azure.mgmt.resource.managedapplications.v2019_07_01.models._models_py3.GenericResource
summary: 'Information about managed application.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'ApplicationPatchable(*, location: str | None = None, tags: Dict[str, str]
    | None = None, managed_by: str | None = None, sku: _models.Sku | None = None,
    plan: _models.PlanPatchable | None = None, kind: str | None = None, identity:
    _models.Identity | None = None, managed_resource_group_id: str | None = None,
    application_definition_id: str | None = None, parameters: MutableMapping[str,
    Any] | None = None, jit_access_policy: _models.ApplicationJitAccessPolicy | None
    = None, **kwargs: Any)'
  parameters:
  - name: location
    description: Resource location.
    types:
    - <xref:str>
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: managed_by
    description: ID of the resource that manages this resource.
    types:
    - <xref:str>
  - name: sku
    description: The SKU of the resource.
    types:
    - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.Sku>
  - name: plan
    description: The plan information.
    types:
    - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.PlanPatchable>
  - name: kind
    description: 'The kind of the managed application. Allowed values are MarketPlace
      and

      ServiceCatalog.'
    types:
    - <xref:str>
  - name: identity
    description: The identity of the resource.
    types:
    - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.Identity>
  - name: managed_resource_group_id
    description: The managed resource group Id.
    types:
    - <xref:str>
  - name: application_definition_id
    description: 'The fully qualified path of managed application definition

      Id.'
    types:
    - <xref:str>
  - name: parameters
    description: 'Name and value pairs that define the managed application parameters.
      It

      can be a JObject or a well formed JSON string.'
    types:
    - <xref:JSON>
  - name: jit_access_policy
    description: The managed application Jit access policy.
    types:
    - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationJitAccessPolicy>
variables:
- description: Resource ID.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: Resource location.
  name: location
  types:
  - <xref:str>
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: ID of the resource that manages this resource.
  name: managed_by
  types:
  - <xref:str>
- description: The SKU of the resource.
  name: sku
  types:
  - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.Sku>
- description: The plan information.
  name: plan
  types:
  - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.PlanPatchable>
- description: 'The kind of the managed application. Allowed values are MarketPlace
    and

    ServiceCatalog.'
  name: kind
  types:
  - <xref:str>
- description: The identity of the resource.
  name: identity
  types:
  - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.Identity>
- description: The managed resource group Id.
  name: managed_resource_group_id
  types:
  - <xref:str>
- description: The fully qualified path of managed application definition Id.
  name: application_definition_id
  types:
  - <xref:str>
- description: 'Name and value pairs that define the managed application parameters.
    It can

    be a JObject or a well formed JSON string.'
  name: parameters
  types:
  - <xref:JSON>
- description: Name and value pairs that define the managed application outputs.
  name: outputs
  types:
  - <xref:JSON>
- description: 'The managed application provisioning state. Known values are:

    "NotSpecified", "Accepted", "Running", "Ready", "Creating", "Created", "Deleting",
    "Deleted",

    "Canceled", "Failed", "Succeeded", and "Updating".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.ProvisioningState>
- description: The managed application billing details.
  name: billing_details
  types:
  - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationBillingDetailsDefinition>
- description: The managed application Jit access policy.
  name: jit_access_policy
  types:
  - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationJitAccessPolicy>
- description: The publisher tenant Id.
  name: publisher_tenant_id
  types:
  - <xref:str>
- description: 'The  read-only authorizations property that is retrieved from the

    application package.'
  name: authorizations
  types:
  - <xref:list>[<xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationAuthorization>]
- description: 'The managed application management mode. Known values are:

    "NotSpecified", "Unmanaged", and "Managed".'
  name: management_mode
  types:
  - <xref:str>
  - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationManagementMode>
- description: 'The read-only customer support property that is retrieved from the

    application package.'
  name: customer_support
  types:
  - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationPackageContact>
- description: 'The read-only support URLs property that is retrieved from the application

    package.'
  name: support_urls
  types:
  - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationPackageSupportUrls>
- description: The collection of managed application artifacts.
  name: artifacts
  types:
  - <xref:list>[<xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationArtifact>]
- description: The client entity that created the JIT request.
  name: created_by
  types:
  - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationClientDetails>
- description: The client entity that last updated the JIT request.
  name: updated_by
  types:
  - <xref:azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationClientDetails>
methods:
- uid: azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationPatchable.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationPatchable.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationPatchable.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationPatchable.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationPatchable.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.resource.managedapplications.v2019_07_01.models.ApplicationPatchable.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
