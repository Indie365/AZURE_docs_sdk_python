### YamlMime:PythonClass
uid: azure.mgmt.keyvault.v2023_02_01.models.Key
name: Key
fullName: azure.mgmt.keyvault.v2023_02_01.models.Key
module: azure.mgmt.keyvault.v2023_02_01.models
inheritances:
- azure.mgmt.keyvault.v2023_02_01.models._models_py3.Resource
summary: 'The key resource.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'Key(*, attributes: _models.KeyAttributes | None = None, kty: str | _models.JsonWebKeyType
    | None = None, key_ops: List[str | _models.JsonWebKeyOperation] | None = None,
    key_size: int | None = None, curve_name: str | _models.JsonWebKeyCurveName | None
    = None, rotation_policy: _models.RotationPolicy | None = None, release_policy:
    _models.KeyReleasePolicy | None = None, **kwargs: Any)'
  parameters:
  - name: attributes
    description: The attributes of the key.
    types:
    - <xref:azure.mgmt.keyvault.v2023_02_01.models.KeyAttributes>
  - name: kty
    description: 'The type of the key. For valid values, see JsonWebKeyType. Known
      values are:

      "EC", "EC-HSM", "RSA", and "RSA-HSM".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.keyvault.v2023_02_01.models.JsonWebKeyType>
  - name: key_ops
    types:
    - <xref:azure.mgmt.keyvault.v2016_10_01.aio.operations.Operations.list>[<xref:str>
    - <xref:azure.mgmt.keyvault.v2023_02_01.models.JsonWebKeyOperation>]
  - name: key_size
    description: 'The key size in bits. For example: 2048, 3072, or 4096 for RSA.'
    types:
    - <xref:int>
  - name: curve_name
    description: 'The elliptic curve name. For valid values, see JsonWebKeyCurveName.
      Known

      values are: "P-256", "P-384", "P-521", and "P-256K".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.keyvault.v2023_02_01.models.JsonWebKeyCurveName>
  - name: rotation_policy
    description: 'Key rotation policy in response. It will be used for both output
      and

      input. Omitted if empty.'
    types:
    - <xref:azure.mgmt.keyvault.v2023_02_01.models.RotationPolicy>
  - name: release_policy
    description: 'Key release policy in response. It will be used for both output
      and

      input. Omitted if empty.'
    types:
    - <xref:azure.mgmt.keyvault.v2023_02_01.models.KeyReleasePolicy>
variables:
- description: Fully qualified identifier of the key vault resource.
  name: id
  types:
  - <xref:str>
- description: Name of the key vault resource.
  name: name
  types:
  - <xref:str>
- description: Resource type of the key vault resource.
  name: type
  types:
  - <xref:str>
- description: Azure location of the key vault resource.
  name: location
  types:
  - <xref:str>
- description: Tags assigned to the key vault resource.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The attributes of the key.
  name: attributes
  types:
  - <xref:azure.mgmt.keyvault.v2023_02_01.models.KeyAttributes>
- description: 'The type of the key. For valid values, see JsonWebKeyType. Known values
    are: "EC",

    "EC-HSM", "RSA", and "RSA-HSM".'
  name: kty
  types:
  - <xref:str>
  - <xref:azure.mgmt.keyvault.v2023_02_01.models.JsonWebKeyType>
- name: key_ops
  types:
  - <xref:list>[<xref:str>
  - <xref:azure.mgmt.keyvault.v2023_02_01.models.JsonWebKeyOperation>]
- description: 'The key size in bits. For example: 2048, 3072, or 4096 for RSA.'
  name: key_size
  types:
  - <xref:int>
- description: 'The elliptic curve name. For valid values, see JsonWebKeyCurveName.
    Known

    values are: "P-256", "P-384", "P-521", and "P-256K".'
  name: curve_name
  types:
  - <xref:str>
  - <xref:azure.mgmt.keyvault.v2023_02_01.models.JsonWebKeyCurveName>
- description: The URI to retrieve the current version of the key.
  name: key_uri
  types:
  - <xref:str>
- description: The URI to retrieve the specific version of the key.
  name: key_uri_with_version
  types:
  - <xref:str>
- description: 'Key rotation policy in response. It will be used for both output and

    input. Omitted if empty.'
  name: rotation_policy
  types:
  - <xref:azure.mgmt.keyvault.v2023_02_01.models.RotationPolicy>
- description: 'Key release policy in response. It will be used for both output and

    input. Omitted if empty.'
  name: release_policy
  types:
  - <xref:azure.mgmt.keyvault.v2023_02_01.models.KeyReleasePolicy>
methods:
- uid: azure.mgmt.keyvault.v2023_02_01.models.Key.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.keyvault.v2023_02_01.models.Key.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.keyvault.v2023_02_01.models.Key.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.keyvault.v2023_02_01.models.Key.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.keyvault.v2023_02_01.models.Key.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.keyvault.v2023_02_01.models.Key.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
