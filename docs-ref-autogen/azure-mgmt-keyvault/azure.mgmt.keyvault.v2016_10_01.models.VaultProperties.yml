### YamlMime:PythonClass
uid: azure.mgmt.keyvault.v2016_10_01.models.VaultProperties
name: VaultProperties
fullName: azure.mgmt.keyvault.v2016_10_01.models.VaultProperties
module: azure.mgmt.keyvault.v2016_10_01.models
inheritances:
- azure.mgmt.keyvault._serialization.Model
summary: 'Properties of the vault.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'VaultProperties(*, tenant_id: str, sku: _models.Sku, access_policies: List[_models.AccessPolicyEntry]
    | None = None, vault_uri: str | None = None, enabled_for_deployment: bool | None
    = None, enabled_for_disk_encryption: bool | None = None, enabled_for_template_deployment:
    bool | None = None, enable_soft_delete: bool | None = None, create_mode: str |
    _models.CreateMode | None = None, enable_purge_protection: bool | None = None,
    **kwargs: Any)'
  parameters:
  - name: tenant_id
    description: 'The Azure Active Directory tenant ID that should be used for authenticating

      requests to the key vault. Required.'
    types:
    - <xref:str>
  - name: sku
    description: SKU details. Required.
    types:
    - <xref:azure.mgmt.keyvault.v2016_10_01.models.Sku>
  - name: access_policies
    description: 'An array of 0 to 16 identities that have access to the key vault.
      All

      identities in the array must use the same tenant ID as the key vault''s tenant
      ID. When

      `createMode` is set to `recover`, access policies are not required. Otherwise,
      access

      policies are required.'
    types:
    - <xref:azure.mgmt.keyvault.v2016_10_01.aio.operations.Operations.list>[<xref:azure.mgmt.keyvault.v2016_10_01.models.AccessPolicyEntry>]
  - name: vault_uri
    description: The URI of the vault for performing operations on keys and secrets.
    types:
    - <xref:str>
  - name: enabled_for_deployment
    description: 'Property to specify whether Azure Virtual Machines are

      permitted to retrieve certificates stored as secrets from the key vault.'
    types:
    - <xref:bool>
  - name: enabled_for_disk_encryption
    description: 'Property to specify whether Azure Disk Encryption is

      permitted to retrieve secrets from the vault and unwrap keys.'
    types:
    - <xref:bool>
  - name: enabled_for_template_deployment
    description: 'Property to specify whether Azure Resource Manager is

      permitted to retrieve secrets from the key vault.'
    types:
    - <xref:bool>
  - name: enable_soft_delete
    description: 'Property specifying whether recoverable deletion is enabled for

      this key vault. Setting this property to true activates the soft delete feature,
      whereby vaults

      or vault entities can be recovered after deletion. Enabling this functionality
      is irreversible

      - that is, the property does not accept false as its value.'
    types:
    - <xref:bool>
  - name: create_mode
    description: 'The vault''s create mode to indicate whether the vault need to be

      recovered or not. Known values are: "recover" and "default".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.keyvault.v2016_10_01.models.CreateMode>
  - name: enable_purge_protection
    description: 'Property specifying whether protection against purge is

      enabled for this vault. Setting this property to true activates protection against
      purge for

      this vault and its content - only the Key Vault service may initiate a hard,
      irrecoverable

      deletion. The setting is effective only if soft delete is also enabled. Enabling
      this

      functionality is irreversible - that is, the property does not accept false
      as its value.'
    types:
    - <xref:bool>
variables:
- description: 'The Azure Active Directory tenant ID that should be used for authenticating

    requests to the key vault. Required.'
  name: tenant_id
  types:
  - <xref:str>
- description: SKU details. Required.
  name: sku
  types:
  - <xref:azure.mgmt.keyvault.v2016_10_01.models.Sku>
- description: 'An array of 0 to 16 identities that have access to the key vault.
    All

    identities in the array must use the same tenant ID as the key vault''s tenant
    ID. When

    `createMode` is set to `recover`, access policies are not required. Otherwise,
    access

    policies are required.'
  name: access_policies
  types:
  - <xref:list>[<xref:azure.mgmt.keyvault.v2016_10_01.models.AccessPolicyEntry>]
- description: The URI of the vault for performing operations on keys and secrets.
  name: vault_uri
  types:
  - <xref:str>
- description: 'Property to specify whether Azure Virtual Machines are permitted

    to retrieve certificates stored as secrets from the key vault.'
  name: enabled_for_deployment
  types:
  - <xref:bool>
- description: 'Property to specify whether Azure Disk Encryption is

    permitted to retrieve secrets from the vault and unwrap keys.'
  name: enabled_for_disk_encryption
  types:
  - <xref:bool>
- description: 'Property to specify whether Azure Resource Manager is

    permitted to retrieve secrets from the key vault.'
  name: enabled_for_template_deployment
  types:
  - <xref:bool>
- description: 'Property specifying whether recoverable deletion is enabled for this

    key vault. Setting this property to true activates the soft delete feature, whereby
    vaults or

    vault entities can be recovered after deletion. Enabling this functionality is
    irreversible -

    that is, the property does not accept false as its value.'
  name: enable_soft_delete
  types:
  - <xref:bool>
- description: 'The vault''s create mode to indicate whether the vault need to be
    recovered

    or not. Known values are: "recover" and "default".'
  name: create_mode
  types:
  - <xref:str>
  - <xref:azure.mgmt.keyvault.v2016_10_01.models.CreateMode>
- description: 'Property specifying whether protection against purge is enabled

    for this vault. Setting this property to true activates protection against purge
    for this vault

    and its content - only the Key Vault service may initiate a hard, irrecoverable
    deletion. The

    setting is effective only if soft delete is also enabled. Enabling this functionality
    is

    irreversible - that is, the property does not accept false as its value.'
  name: enable_purge_protection
  types:
  - <xref:bool>
methods:
- uid: azure.mgmt.keyvault.v2016_10_01.models.VaultProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.keyvault.v2016_10_01.models.VaultProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.keyvault.v2016_10_01.models.VaultProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.keyvault.v2016_10_01.models.VaultProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.keyvault.v2016_10_01.models.VaultProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.keyvault.v2016_10_01.models.VaultProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
