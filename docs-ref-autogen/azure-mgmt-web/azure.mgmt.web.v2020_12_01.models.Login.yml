### YamlMime:PythonClass
uid: azure.mgmt.web.v2020_12_01.models.Login
name: Login
fullName: azure.mgmt.web.v2020_12_01.models.Login
module: azure.mgmt.web.v2020_12_01.models
inheritances:
- msrest.serialization.Model
summary: The configuration settings of the login flow of users using App Service Authentication/Authorization.
constructor:
  syntax: 'Login(*, routes: LoginRoutes | None = None, token_store: TokenStore | None
    = None, preserve_url_fragments_for_logins: bool | None = None, allowed_external_redirect_urls:
    List[str] | None = None, cookie_expiration: CookieExpiration | None = None, nonce:
    Nonce | None = None, **kwargs)'
  parameters:
  - name: routes
    description: The routes that specify the endpoints used for login and logout requests.
    isRequired: true
    types:
    - <xref:azure.mgmt.web.v2020_12_01.models.LoginRoutes>
  - name: token_store
    description: The configuration settings of the token store.
    isRequired: true
    types:
    - <xref:azure.mgmt.web.v2020_12_01.models.TokenStore>
  - name: preserve_url_fragments_for_logins
    description: '`<code>true</code>` if the fragments from the

      request are preserved after the login request is made; otherwise, `<code>false</code>`.'
    isRequired: true
    types:
    - <xref:bool>
  - name: allowed_external_redirect_urls
    description: 'External URLs that can be redirected to as part of

      logging in or logging out of the app. Note that the query string part of the
      URL is ignored.

      This is an advanced setting typically only needed by Windows Store application
      backends.

      Note that URLs within the current domain are always implicitly allowed.'
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: cookie_expiration
    description: The configuration settings of the session cookie's expiration.
    isRequired: true
    types:
    - <xref:azure.mgmt.web.v2020_12_01.models.CookieExpiration>
  - name: nonce
    description: The configuration settings of the nonce used in the login flow.
    isRequired: true
    types:
    - <xref:azure.mgmt.web.v2020_12_01.models.Nonce>
methods:
- uid: azure.mgmt.web.v2020_12_01.models.Login.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.web.v2020_12_01.models.Login.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.web.v2020_12_01.models.Login.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.web.v2020_12_01.models.Login.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.web.v2020_12_01.models.Login.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.web.v2020_12_01.models.Login.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.web.v2020_12_01.models.Login.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
