### YamlMime:PythonClass
uid: azure.mgmt.web.v2020_09_01.models.RestoreRequest
name: RestoreRequest
fullName: azure.mgmt.web.v2020_09_01.models.RestoreRequest
module: azure.mgmt.web.v2020_09_01.models
inheritances:
- azure.mgmt.web.v2020_09_01.models._models_py3.ProxyOnlyResource
summary: 'Description of a restore request.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'RestoreRequest(*, kind: str | None = None, storage_account_url: str | None
    = None, blob_name: str | None = None, overwrite: bool | None = None, site_name:
    str | None = None, databases: List[DatabaseBackupSetting] | None = None, ignore_conflicting_host_names:
    bool | None = False, ignore_databases: bool | None = False, app_service_plan:
    str | None = None, operation_type: str | BackupRestoreOperationType | None = ''Default'',
    adjust_connection_strings: bool | None = None, hosting_environment: str | None
    = None, **kwargs)'
  parameters:
  - name: kind
    description: Kind of resource.
    isRequired: true
    types:
    - <xref:str>
  - name: storage_account_url
    description: SAS URL to the container.
    isRequired: true
    types:
    - <xref:str>
  - name: blob_name
    description: Name of a blob which contains the backup.
    isRequired: true
    types:
    - <xref:str>
  - name: overwrite
    description: '`<code>true</code>` if the restore operation can overwrite target
      app;

      otherwise, `<code>false</code>`. `<code>true</code>` is needed if trying to
      restore

      over an existing app.'
    isRequired: true
    types:
    - <xref:bool>
  - name: site_name
    description: Name of an app.
    isRequired: true
    types:
    - <xref:str>
  - name: databases
    description: 'Collection of databases which should be restored. This list has
      to match the

      list of databases included in the backup.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.mgmt.web.v2020_09_01.models.DatabaseBackupSetting>]
  - name: ignore_conflicting_host_names
    description: 'Changes a logic when restoring an app with custom

      domains. `<code>true</code>` to remove custom domains automatically. If

      `<code>false</code>`, custom domains are added to

      the app''s object when it is being restored, but that might fail due to conflicts
      during the

      operation.'
    isRequired: true
    types:
    - <xref:bool>
  - name: ignore_databases
    description: Ignore the databases and only restore the site content.
    isRequired: true
    types:
    - <xref:bool>
  - name: app_service_plan
    description: Specify app service plan that will own restored site.
    isRequired: true
    types:
    - <xref:str>
  - name: operation_type
    description: 'Operation type. Possible values include: "Default", "Clone",

      "Relocation", "Snapshot", "CloudFS". Default value: "Default".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.web.v2020_09_01.models.BackupRestoreOperationType>
  - name: adjust_connection_strings
    description: '`<code>true</code>` if SiteConfig.ConnectionStrings

      should be set in new app; otherwise, `<code>false</code>`.'
    isRequired: true
    types:
    - <xref:bool>
  - name: hosting_environment
    description: 'App Service Environment name, if needed (only when restoring an
      app

      to an App Service Environment).'
    isRequired: true
    types:
    - <xref:str>
variables:
- description: Resource Id.
  name: id
  types:
  - <xref:str>
- description: Resource Name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: The system metadata relating to this resource.
  name: system_data
  types:
  - <xref:azure.mgmt.web.v2020_09_01.models.SystemData>
methods:
- uid: azure.mgmt.web.v2020_09_01.models.RestoreRequest.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.web.v2020_09_01.models.RestoreRequest.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.web.v2020_09_01.models.RestoreRequest.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.web.v2020_09_01.models.RestoreRequest.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.web.v2020_09_01.models.RestoreRequest.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.web.v2020_09_01.models.RestoreRequest.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.web.v2020_09_01.models.RestoreRequest.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
