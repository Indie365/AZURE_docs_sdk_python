### YamlMime:PythonClass
uid: azure.mgmt.web.v2018_11_01.models.Certificate
name: Certificate
fullName: azure.mgmt.web.v2018_11_01.models.Certificate
module: azure.mgmt.web.v2018_11_01.models
inheritances:
- azure.mgmt.web.v2018_11_01.models._models_py3.Resource
summary: 'SSL certificate for an app.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'Certificate(*, location: str, kind: str | None = None, tags: Dict[str,
    str] | None = None, host_names: List[str] | None = None, pfx_blob: bytearray |
    None = None, password: str | None = None, key_vault_id: str | None = None, key_vault_secret_name:
    str | None = None, server_farm_id: str | None = None, **kwargs)'
  parameters:
  - name: kind
    description: Kind of resource.
    isRequired: true
    types:
    - <xref:str>
  - name: location
    description: Required. Resource Location.
    isRequired: true
    types:
    - <xref:str>
  - name: tags
    description: A set of tags. Resource tags.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: host_names
    description: Host names the certificate applies to.
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: pfx_blob
    description: Pfx blob.
    isRequired: true
    types:
    - <xref:bytearray>
  - name: password
    description: Certificate password.
    isRequired: true
    types:
    - <xref:str>
  - name: key_vault_id
    description: Key Vault Csm resource Id.
    isRequired: true
    types:
    - <xref:str>
  - name: key_vault_secret_name
    description: Key Vault secret name.
    isRequired: true
    types:
    - <xref:str>
  - name: server_farm_id
    description: 'Resource ID of the associated App Service plan, formatted as:

      "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".'
    isRequired: true
    types:
    - <xref:str>
variables:
- description: Resource Id.
  name: id
  types:
  - <xref:str>
- description: Resource Name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: Friendly name of the certificate.
  name: friendly_name
  types:
  - <xref:str>
- description: Subject name of the certificate.
  name: subject_name
  types:
  - <xref:str>
- description: App name.
  name: site_name
  types:
  - <xref:str>
- description: Self link.
  name: self_link
  types:
  - <xref:str>
- description: Certificate issuer.
  name: issuer
  types:
  - <xref:str>
- description: Certificate issue Date.
  name: issue_date
  types:
  - <xref:datetime.datetime>
- description: Certificate expiration date.
  name: expiration_date
  types:
  - <xref:datetime.datetime>
- description: Certificate thumbprint.
  name: thumbprint
  types:
  - <xref:str>
- description: Is the certificate valid?.
  name: valid
  types:
  - <xref:bool>
- description: Raw bytes of .cer file.
  name: cer_blob
  types:
  - <xref:bytearray>
- description: Public key hash.
  name: public_key_hash
  types:
  - <xref:str>
- description: 'Specification for the App Service Environment to use for the

    certificate.'
  name: hosting_environment_profile
  types:
  - <xref:azure.mgmt.web.v2018_11_01.models.HostingEnvironmentProfile>
- description: 'Status of the Key Vault secret. Possible values include:

    "Initialized", "WaitingOnCertificateOrder", "Succeeded", "CertificateOrderFailed",

    "OperationNotPermittedOnKeyVault", "AzureServiceUnauthorizedToAccessKeyVault",

    "KeyVaultDoesNotExist", "KeyVaultSecretDoesNotExist", "UnknownError", "ExternalPrivateKey",

    "Unknown".'
  name: key_vault_secret_status
  types:
  - <xref:str>
  - <xref:azure.mgmt.web.v2018_11_01.models.KeyVaultSecretStatus>
methods:
- uid: azure.mgmt.web.v2018_11_01.models.Certificate.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.web.v2018_11_01.models.Certificate.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.web.v2018_11_01.models.Certificate.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.web.v2018_11_01.models.Certificate.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.web.v2018_11_01.models.Certificate.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.web.v2018_11_01.models.Certificate.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.web.v2018_11_01.models.Certificate.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
