### YamlMime:PythonClass
uid: azure.mgmt.databox.v2019_09_01.models.DataBoxDiskJobDetails
name: DataBoxDiskJobDetails
fullName: azure.mgmt.databox.v2019_09_01.models.DataBoxDiskJobDetails
module: azure.mgmt.databox.v2019_09_01.models
inheritances:
- azure.mgmt.databox.v2019_09_01.models._models_py3.JobDetails
summary: 'DataBox Disk Job Details.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'DataBoxDiskJobDetails(*, contact_details: ContactDetails, shipping_address:
    ShippingAddress, destination_account_details: List[DestinationAccountDetails],
    expected_data_size_in_terabytes: int | None = None, preferences: Preferences |
    None = None, preferred_disks: Dict[str, int] | None = None, passkey: str | None
    = None, **kwargs)'
  parameters:
  - name: expected_data_size_in_terabytes
    description: 'The expected size of the data, which needs to be

      transferred in this job, in terabytes.'
    isRequired: true
    types:
    - <xref:int>
  - name: contact_details
    description: Required. Contact details for notification and shipping.
    isRequired: true
    types:
    - <xref:azure.mgmt.databox.models.ContactDetails>
  - name: shipping_address
    description: Required. Shipping address of the customer.
    isRequired: true
    types:
    - <xref:azure.mgmt.databox.models.ShippingAddress>
  - name: destination_account_details
    description: Required. Destination account details.
    isRequired: true
    types:
    - <xref:list>[<xref:azure.mgmt.databox.models.DestinationAccountDetails>]
  - name: job_details_type
    description: 'Required. Indicates the type of job details.Constant filled by server.

      Possible values include: "DataBox", "DataBoxDisk", "DataBoxHeavy".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.databox.models.ClassDiscriminator>
  - name: preferences
    description: Preferences for the order.
    isRequired: true
    types:
    - <xref:azure.mgmt.databox.models.Preferences>
  - name: preferred_disks
    description: 'User preference on what size disks are needed for the job. The map
      is

      from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size.
      Key is string but

      will be checked against an int.'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:int>]
  - name: passkey
    description: User entered passkey for DataBox Disk job.
    isRequired: true
    types:
    - <xref:str>
variables:
- description: List of stages that run in the job.
  name: job_stages
  types:
  - <xref:list>[<xref:azure.mgmt.databox.models.JobStages>]
- description: Delivery package shipping details.
  name: delivery_package
  types:
  - <xref:azure.mgmt.databox.models.PackageShippingDetails>
- description: Return package shipping details.
  name: return_package
  types:
  - <xref:azure.mgmt.databox.models.PackageShippingDetails>
- description: Error details for failure. This is optional.
  name: error_details
  types:
  - <xref:list>[<xref:azure.mgmt.databox.models.JobErrorDetails>]
- description: List of copy log details.
  name: copy_log_details
  types:
  - <xref:list>[<xref:azure.mgmt.databox.models.CopyLogDetails>]
- description: Shared access key to download the return shipment label.
  name: reverse_shipment_label_sas_key
  types:
  - <xref:str>
- description: Shared access key to download the chain of custody logs.
  name: chain_of_custody_sas_key
  types:
  - <xref:str>
- description: Copy progress per disk.
  name: copy_progress
  types:
  - <xref:list>[<xref:azure.mgmt.databox.models.DataBoxDiskCopyProgress>]
- description: 'Contains the map of disk serial number to the disk size being

    used for the job. Is returned only after the disks are shipped to the customer.'
  name: disks_and_size_details
  types:
  - <xref:dict>[<xref:str>, <xref:int>]
methods:
- uid: azure.mgmt.databox.v2019_09_01.models.DataBoxDiskJobDetails.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.databox.v2019_09_01.models.DataBoxDiskJobDetails.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.databox.v2019_09_01.models.DataBoxDiskJobDetails.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.databox.v2019_09_01.models.DataBoxDiskJobDetails.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.databox.v2019_09_01.models.DataBoxDiskJobDetails.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.databox.v2019_09_01.models.DataBoxDiskJobDetails.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.databox.v2019_09_01.models.DataBoxDiskJobDetails.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
