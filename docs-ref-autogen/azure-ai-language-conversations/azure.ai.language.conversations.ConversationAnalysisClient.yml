### YamlMime:PythonClass
uid: azure.ai.language.conversations.ConversationAnalysisClient
name: ConversationAnalysisClient
fullName: azure.ai.language.conversations.ConversationAnalysisClient
module: azure.ai.language.conversations
inheritances:
- azure.ai.language.conversations._client.ConversationAnalysisClient
summary: 'The language service conversations API is a suite of natural language processing
  (NLP) skills

  that can be used to analyze structured conversations (textual or spoken). The synchronous
  API

  in this suite accepts a request and mediates among multiple language projects, such
  as LUIS

  Generally Available, Question Answering, Conversational Language Understanding,
  and then calls

  the best candidate service to handle the request. At last, it returns a response
  with the

  candidate service''s response as a payload.


  See [https://docs.microsoft.com/rest/api/language/conversation-analysis-runtime/](https://docs.microsoft.com/rest/api/language/conversation-analysis-runtime/)
  for more information about

  requests and responses you can pass to this client.'
constructor:
  syntax: 'ConversationAnalysisClient(endpoint: str, credential: AzureKeyCredential
    | TokenCredential, **kwargs: Any)'
  parameters:
  - name: endpoint
    description: 'Supported Cognitive Services endpoint (e.g.,

      [https://](https://)`<resource-name>`.cognitiveservices.azure.com). Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'Credential needed for the client to connect to Azure.

      This can be the an instance of AzureKeyCredential if using a Language API key

      or a token credential from <xref:azure.identity>.'
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials.TokenCredential>
  - name: api_version
    description: 'Api Version. Default value is "2022-05-01". Note that overriding
      this

      default value may result in unsupported behavior.'
    types:
    - <xref:str>
methods:
- uid: azure.ai.language.conversations.ConversationAnalysisClient.analyze_conversation
  name: analyze_conversation
  summary: 'Analyzes the input conversation utterance.


    See [https://docs.microsoft.com/rest/api/language/conversation-analysis-runtime/analyze-conversation](https://docs.microsoft.com/rest/api/language/conversation-analysis-runtime/analyze-conversation)

    for more information.'
  signature: 'analyze_conversation(task: MutableMapping[str, Any] | IO, **kwargs:
    Any) -> MutableMapping[str, Any]'
  parameters:
  - name: task
    description: 'A single conversational task to execute. Is either a model type
      or a IO type.

      Required.'
    isRequired: true
    types:
    - <xref:JSON>
    - <xref:IO>
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # JSON input template you can fill out and use as your body input.\n   task\
    \ = {\n       \"kind\": \"str\", # Required. Enumeration of supported Conversation\
    \ tasks. Known values are: \"Conversation\".\n       \"analysisInput\": {\n  \
    \         \"conversationItem\": {\n               \"id\": \"str\", # Required.\
    \ The ID of a conversation item.\n               \"participantId\": \"str\", #\
    \ Required. The participant ID of a conversation item.\n               \"modality\"\
    : \"string\", # Required, Enumeration of supported conversational modalities.\
    \ Known values are: \"text\", and \"transcript\".\n               \"language\"\
    : \"str\", # Optional. The override language of a conversation item in BCP 47\
    \ language representation.\n               \"text\": \"str\", # Required. The\
    \ text input.\n           }\n       },\n       \"parameters\": {\n           \"\
    projectName\": \"str\", # Required. The name of the project to use.\n        \
    \   \"deploymentName\": \"str\", # Required. The name of the deployment to use.\n\
    \           \"stringIndexType\": \"str\",  # Optional. Default value is\n    \
    \         \"TextElements_v8\". Specifies the method used to interpret string offsets.\
    \ Set\n             to \"UnicodeCodePoint\" for Python strings. Known values are:\n\
    \             \"TextElements_v8\", \"UnicodeCodePoint\", and \"Utf16CodeUnit\"\
    .\n           \"verbose\": \"bool\", # Optional. If true, the service will return\
    \ more detailed information in the response.\n           \"isLoggingEnabled\"\
    : \"bool\", # Optional. If true, the service will keep the query for further review.\n\
    \           \"directTarget\": \"str\", # Optional. The name of a target project\
    \ to forward the request to.\n           \"targetProjectParameters\": \"dict\"\
    \ # Optional. A dictionary representing the parameters for each target project.\n\
    \       }\n   }\n\n   # The response is polymorphic. The following are possible\
    \ polymorphic responses based\n   off discriminator \"kind\":\n\n   # response\
    \ body for status code(s): 200\n   response.json() == {\n       \"kind\": \"str\"\
    , # Required. Enumeration of supported conversational task results. Known values\
    \ are: \"ConversationResult\".\n       \"result\": {\n           \"query\": \"\
    str\", # Required. The conversation utterance given by the caller.\n         \
    \  \"detectedLanguage\": \"str\", # Optional. The system detected language for\
    \ the query in BCP 47 language representation.\n           \"prediction\": {\n\
    \               \"topIntent\": \"str\", # Required. The intent with the highest\
    \ score.\n               \"projectKind\": \"str\", # Required. The type of the\
    \ project. Known values are: \"Conversation\" and \"Orchestration\".\n       \
    \    }\n       }\n   }\n   ````\n"
- uid: azure.ai.language.conversations.ConversationAnalysisClient.close
  name: close
  signature: close() -> None
- uid: azure.ai.language.conversations.ConversationAnalysisClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = client.send_request(request)

    <HttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, **kwargs: Any) -> HttpResponse'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.HttpResponse>
