### YamlMime:PythonClass
uid: azure.mgmt.redis.models.RedisProperties
name: RedisProperties
fullName: azure.mgmt.redis.models.RedisProperties
module: azure.mgmt.redis.models
inheritances:
- azure.mgmt.redis.models._models_py3.RedisCreateProperties
summary: 'Properties of the redis cache.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'RedisProperties(*, sku: _models.Sku, redis_configuration: _models.RedisCommonPropertiesRedisConfiguration
    | None = None, redis_version: str | None = None, enable_non_ssl_port: bool = False,
    replicas_per_master: int | None = None, replicas_per_primary: int | None = None,
    tenant_settings: Dict[str, str] | None = None, shard_count: int | None = None,
    minimum_tls_version: str | _models.TlsVersion | None = None, public_network_access:
    str | _models.PublicNetworkAccess = ''Enabled'', subnet_id: str | None = None,
    static_ip: str | None = None, **kwargs)'
  parameters:
  - name: redis_configuration
    description: 'All Redis Settings. Few possible keys:

      rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value

      etc.'
    types:
    - <xref:azure.mgmt.redis.models.RedisCommonPropertiesRedisConfiguration>
  - name: redis_version
    description: 'Redis version. This should be in the form ''major[.minor]'' (only
      ''major''

      is required) or the value ''latest'' which refers to the latest stable Redis
      version that is

      available. Supported versions: 4.0, 6.0 (latest). Default value is ''latest''.'
    types:
    - <xref:str>
  - name: enable_non_ssl_port
    description: 'Specifies whether the non-ssl Redis server port (6379) is

      enabled.'
    types:
    - <xref:bool>
  - name: replicas_per_master
    description: The number of replicas to be created per primary.
    types:
    - <xref:int>
  - name: replicas_per_primary
    description: The number of replicas to be created per primary.
    types:
    - <xref:int>
  - name: tenant_settings
    description: A dictionary of tenant settings.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: shard_count
    description: The number of shards to be created on a Premium Cluster Cache.
    types:
    - <xref:int>
  - name: minimum_tls_version
    description: 'Optional: requires clients to use a specified TLS version (or

      higher) to connect (e,g, ''1.0'', ''1.1'', ''1.2''). Known values are: "1.0",
      "1.1", and "1.2".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.redis.models.TlsVersion>
  - name: public_network_access
    description: 'Whether or not public endpoint access is allowed for this

      cache.  Value is optional but if passed in, must be ''Enabled'' or ''Disabled''.
      If ''Disabled'',

      private endpoints are the exclusive access method. Default value is ''Enabled''.
      Known values

      are: "Enabled" and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.redis.models.PublicNetworkAccess>
  - name: sku
    description: The SKU of the Redis cache to deploy. Required.
    types:
    - <xref:azure.mgmt.redis.models.Sku>
  - name: subnet_id
    description: 'The full resource ID of a subnet in a virtual network to deploy
      the Redis

      cache in. Example format:

      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1.'
    types:
    - <xref:str>
  - name: static_ip
    description: 'Static IP address. Optionally, may be specified when deploying a
      Redis

      cache inside an existing Azure Virtual Network; auto assigned by default.'
    types:
    - <xref:str>
variables:
- description: 'All Redis Settings. Few possible keys:

    rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value

    etc.'
  name: redis_configuration
  types:
  - <xref:azure.mgmt.redis.models.RedisCommonPropertiesRedisConfiguration>
- description: 'Redis version. This should be in the form ''major[.minor]'' (only
    ''major'' is

    required) or the value ''latest'' which refers to the latest stable Redis version
    that is

    available. Supported versions: 4.0, 6.0 (latest). Default value is ''latest''.'
  name: redis_version
  types:
  - <xref:str>
- description: Specifies whether the non-ssl Redis server port (6379) is enabled.
  name: enable_non_ssl_port
  types:
  - <xref:bool>
- description: The number of replicas to be created per primary.
  name: replicas_per_master
  types:
  - <xref:int>
- description: The number of replicas to be created per primary.
  name: replicas_per_primary
  types:
  - <xref:int>
- description: A dictionary of tenant settings.
  name: tenant_settings
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The number of shards to be created on a Premium Cluster Cache.
  name: shard_count
  types:
  - <xref:int>
- description: 'Optional: requires clients to use a specified TLS version (or

    higher) to connect (e,g, ''1.0'', ''1.1'', ''1.2''). Known values are: "1.0",
    "1.1", and "1.2".'
  name: minimum_tls_version
  types:
  - <xref:str>
  - <xref:azure.mgmt.redis.models.TlsVersion>
- description: 'Whether or not public endpoint access is allowed for this cache.

    Value is optional but if passed in, must be ''Enabled'' or ''Disabled''. If ''Disabled'',
    private

    endpoints are the exclusive access method. Default value is ''Enabled''. Known
    values are:

    "Enabled" and "Disabled".'
  name: public_network_access
  types:
  - <xref:str>
  - <xref:azure.mgmt.redis.models.PublicNetworkAccess>
- description: The SKU of the Redis cache to deploy. Required.
  name: sku
  types:
  - <xref:azure.mgmt.redis.models.Sku>
- description: 'The full resource ID of a subnet in a virtual network to deploy the
    Redis

    cache in. Example format:

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1.'
  name: subnet_id
  types:
  - <xref:str>
- description: 'Static IP address. Optionally, may be specified when deploying a Redis
    cache

    inside an existing Azure Virtual Network; auto assigned by default.'
  name: static_ip
  types:
  - <xref:str>
- description: 'Redis instance provisioning status. Known values are: "Creating",

    "Deleting", "Disabled", "Failed", "Linking", "Provisioning", "RecoveringScaleFailure",

    "Scaling", "Succeeded", "Unlinking", "Unprovisioning", and "Updating".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.redis.models.ProvisioningState>
- description: Redis host name.
  name: host_name
  types:
  - <xref:str>
- description: Redis non-SSL port.
  name: port
  types:
  - <xref:int>
- description: Redis SSL port.
  name: ssl_port
  types:
  - <xref:int>
- description: 'The keys of the Redis cache - not set if this object is not the response
    to

    Create or Update redis cache.'
  name: access_keys
  types:
  - <xref:azure.mgmt.redis.models.RedisAccessKeys>
- description: List of the linked servers associated with the cache.
  name: linked_servers
  types:
  - <xref:list>[<xref:azure.mgmt.redis.models.RedisLinkedServer>]
- description: List of the Redis instances associated with the cache.
  name: instances
  types:
  - <xref:list>[<xref:azure.mgmt.redis.models.RedisInstanceDetails>]
- description: 'List of private endpoint connection associated with the

    specified redis cache.'
  name: private_endpoint_connections
  types:
  - <xref:list>[<xref:azure.mgmt.redis.models.PrivateEndpointConnection>]
methods:
- uid: azure.mgmt.redis.models.RedisProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.redis.models.RedisProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.redis.models.RedisProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.redis.models.RedisProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.redis.models.RedisProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.redis.models.RedisProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
