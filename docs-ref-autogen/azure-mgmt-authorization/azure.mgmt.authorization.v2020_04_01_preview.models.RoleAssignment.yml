### YamlMime:PythonClass
uid: azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment
name: RoleAssignment
fullName: azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment
module: azure.mgmt.authorization.v2020_04_01_preview.models
inheritances:
- azure.mgmt.authorization._serialization.Model
summary: 'Role Assignments.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'RoleAssignment(*, scope: str | None = None, role_definition_id: str | None
    = None, principal_id: str | None = None, principal_type: str | _models.PrincipalType
    | None = None, can_delegate: bool | None = None, description: str | None = None,
    condition: str | None = None, condition_version: str | None = None, created_on:
    datetime | None = None, updated_on: datetime | None = None, created_by: str |
    None = None, updated_by: str | None = None, delegated_managed_identity_resource_id:
    str | None = None, **kwargs)'
  parameters:
  - name: scope
    description: The role assignment scope.
    types:
    - <xref:str>
  - name: role_definition_id
    description: The role definition ID.
    types:
    - <xref:str>
  - name: principal_id
    description: The principal ID.
    types:
    - <xref:str>
  - name: principal_type
    description: 'The principal type of the assigned principal ID. Known values are:

      "User", "Group", "ServicePrincipal", and "ForeignGroup".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.authorization.v2020_04_01_preview.models.PrincipalType>
  - name: can_delegate
    description: The Delegation flag for the role assignment.
    types:
    - <xref:bool>
  - name: description
    description: Description of role assignment.
    types:
    - <xref:str>
  - name: condition
    description: 'The conditions on the role assignment. This limits the resources
      it can be

      assigned to. e.g.:

      @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName]

      StringEqualsIgnoreCase ''foo_storage_container''.'
    types:
    - <xref:str>
  - name: condition_version
    description: Version of the condition. Currently accepted value is '2.0'.
    types:
    - <xref:str>
  - name: created_on
    description: Time it was created.
    types:
    - <xref:datetime.datetime>
  - name: updated_on
    description: Time it was updated.
    types:
    - <xref:datetime.datetime>
  - name: created_by
    description: Id of the user who created the assignment.
    types:
    - <xref:str>
  - name: updated_by
    description: Id of the user who updated the assignment.
    types:
    - <xref:str>
  - name: delegated_managed_identity_resource_id
    description: Id of the delegated managed identity resource.
    types:
    - <xref:str>
variables:
- description: The role assignment ID.
  name: id
  types:
  - <xref:str>
- description: The role assignment name.
  name: name
  types:
  - <xref:str>
- description: The role assignment type.
  name: type
  types:
  - <xref:str>
- description: The role assignment scope.
  name: scope
  types:
  - <xref:str>
- description: The role definition ID.
  name: role_definition_id
  types:
  - <xref:str>
- description: The principal ID.
  name: principal_id
  types:
  - <xref:str>
- description: 'The principal type of the assigned principal ID. Known values are:

    "User", "Group", "ServicePrincipal", and "ForeignGroup".'
  name: principal_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.authorization.v2020_04_01_preview.models.PrincipalType>
- description: The Delegation flag for the role assignment.
  name: can_delegate
  types:
  - <xref:bool>
- description: Description of role assignment.
  name: description
  types:
  - <xref:str>
- description: 'The conditions on the role assignment. This limits the resources it
    can be

    assigned to. e.g.:

    @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName]

    StringEqualsIgnoreCase ''foo_storage_container''.'
  name: condition
  types:
  - <xref:str>
- description: Version of the condition. Currently accepted value is '2.0'.
  name: condition_version
  types:
  - <xref:str>
- description: Time it was created.
  name: created_on
  types:
  - <xref:datetime.datetime>
- description: Time it was updated.
  name: updated_on
  types:
  - <xref:datetime.datetime>
- description: Id of the user who created the assignment.
  name: created_by
  types:
  - <xref:str>
- description: Id of the user who updated the assignment.
  name: updated_by
  types:
  - <xref:str>
- description: Id of the delegated managed identity resource.
  name: delegated_managed_identity_resource_id
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.authorization.v2020_04_01_preview.models.RoleAssignment.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
