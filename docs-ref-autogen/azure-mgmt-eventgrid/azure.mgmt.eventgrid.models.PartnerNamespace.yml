### YamlMime:PythonClass
uid: azure.mgmt.eventgrid.models.PartnerNamespace
name: PartnerNamespace
fullName: azure.mgmt.eventgrid.models.PartnerNamespace
module: azure.mgmt.eventgrid.models
inheritances:
- azure.mgmt.eventgrid.models._models_py3.TrackedResource
summary: "EventGrid Partner Namespace.\n\nVariables are only populated by the server,\
  \ and will be ignored when sending a request.\n\nAll required parameters must be\
  \ populated in order to send to Azure.\n\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.\n\
  :vartype partner_registration_fully_qualified_id: str\n:ivar endpoint: Endpoint\
  \ for the partner namespace.\n:vartype endpoint: str\n:ivar public_network_access:\
  \ This determines if traffic is allowed over public network. By\n\n   default it\
  \ is enabled.\n   You can further restrict to specific IPs by configuring `<seealso\n\
  \   cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\"\
  \n   />`. Possible values include: \"Enabled\", \"Disabled\".\n\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.\n\
  :paramtype partner_registration_fully_qualified_id: str\n:keyword public_network_access:\
  \ This determines if traffic is allowed over public network. By\n\n   default it\
  \ is enabled.\n   You can further restrict to specific IPs by configuring `<seealso\n\
  \   cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\"\
  \n   />`. Possible values include: \"Enabled\", \"Disabled\"."
constructor:
  syntax: 'PartnerNamespace(*, location: str, tags: Dict[str, str] | None = None,
    partner_registration_fully_qualified_id: str | None = None, public_network_access:
    str | PublicNetworkAccess | None = None, inbound_ip_rules: List[InboundIpRule]
    | None = None, disable_local_auth: bool | None = False, partner_topic_routing_mode:
    str | PartnerTopicRoutingMode | None = ''SourceEventAttribute'', **kwargs)'
  parameters:
  - name: location
    description: Required. Location of the resource.
    types:
    - <xref:str>
  - name: tags
    description: A set of tags. Tags of the resource.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: partner_registration_fully_qualified_id
    description: 'The fully qualified ARM Id of the partner

      registration that should be associated with this partner namespace. This takes
      the following

      format:'
  - name: inbound_ip_rules
    description: 'This can be used to restrict traffic from specific IPs instead of

      all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
    types:
    - <xref:azure.mgmt.eventgrid.aio.operations.DomainEventSubscriptionsOperations.list>[<xref:azure.mgmt.eventgrid.models.InboundIpRule>]
  - name: disable_local_auth
    description: 'This boolean is used to enable or disable local auth. Default

      value is false. When the property is set to true, only AAD token will be used
      to authenticate

      if user is allowed to publish to the partner namespace.'
    types:
    - <xref:bool>
  - name: partner_topic_routing_mode
    description: 'This determines if events published to this partner

      namespace should use the source attribute in the event payload

      or use the channel name in the header when matching to the partner topic. If
      none is

      specified, source attribute routing will be used to match the partner topic.
      Possible values

      include: "SourceEventAttribute", "ChannelNameHeader". Default value: "SourceEventAttribute".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.eventgrid.models.PartnerTopicRoutingMode>
variables:
- description: Fully qualified identifier of the resource.
  name: id
  types:
  - <xref:str>
- description: Name of the resource.
  name: name
  types:
  - <xref:str>
- description: Type of the resource.
  name: type
  types:
  - <xref:str>
- description: Required. Location of the resource.
  name: location
  types:
  - <xref:str>
- description: A set of tags. Tags of the resource.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The system metadata relating to Partner Namespace resource.
  name: system_data
  types:
  - <xref:azure.mgmt.eventgrid.models.SystemData>
- name: private_endpoint_connections
  types:
  - <xref:list>[<xref:azure.mgmt.eventgrid.models.PrivateEndpointConnection>]
- description: 'Provisioning state of the partner namespace. Possible values include:

    "Creating", "Updating", "Deleting", "Succeeded", "Canceled", "Failed".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.eventgrid.models.PartnerNamespaceProvisioningState>
- description: 'The fully qualified ARM Id of the partner

    registration that should be associated with this partner namespace. This takes
    the following

    format:'
  name: partner_registration_fully_qualified_id
- description: 'This can be used to restrict traffic from specific IPs instead of
    all

    IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
  name: inbound_ip_rules
  types:
  - <xref:list>[<xref:azure.mgmt.eventgrid.models.InboundIpRule>]
- description: 'This boolean is used to enable or disable local auth. Default value

    is false. When the property is set to true, only AAD token will be used to authenticate
    if user

    is allowed to publish to the partner namespace.'
  name: disable_local_auth
  types:
  - <xref:bool>
- description: 'This determines if events published to this partner namespace

    should use the source attribute in the event payload

    or use the channel name in the header when matching to the partner topic. If none
    is

    specified, source attribute routing will be used to match the partner topic. Possible
    values

    include: "SourceEventAttribute", "ChannelNameHeader". Default value: "SourceEventAttribute".'
  name: partner_topic_routing_mode
  types:
  - <xref:str>
  - <xref:azure.mgmt.eventgrid.models.PartnerTopicRoutingMode>
methods:
- uid: azure.mgmt.eventgrid.models.PartnerNamespace.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.eventgrid.models.PartnerNamespace.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.eventgrid.models.PartnerNamespace.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.eventgrid.models.PartnerNamespace.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.eventgrid.models.PartnerNamespace.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.eventgrid.models.PartnerNamespace.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.eventgrid.models.PartnerNamespace.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
