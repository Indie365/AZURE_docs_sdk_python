### YamlMime:PythonClass
uid: azure.mgmt.eventgrid.models.PartnerTopicInfo
name: PartnerTopicInfo
fullName: azure.mgmt.eventgrid.models.PartnerTopicInfo
module: azure.mgmt.eventgrid.models
inheritances:
- msrest.serialization.Model
summary: Properties of the corresponding partner topic of a Channel.
constructor:
  syntax: 'PartnerTopicInfo(*, azure_subscription_id: str | None = None, resource_group_name:
    str | None = None, name: str | None = None, event_type_info: EventTypeInfo | None
    = None, source: str | None = None, **kwargs)'
  parameters:
  - name: azure_subscription_id
    description: 'Azure subscription ID of the subscriber. The partner topic

      associated with the channel will be

      created under this Azure subscription.'
    types:
    - <xref:str>
  - name: resource_group_name
    description: 'Azure Resource Group of the subscriber. The partner topic

      associated with the channel will be

      created under this resource group.'
    types:
    - <xref:str>
  - name: name
    description: Name of the partner topic associated with the channel.
    types:
    - <xref:str>
  - name: event_type_info
    description: 'Event Type Information for the partner topic. This information is

      provided by the publisher and can be used by the

      subscriber to view different types of events that are published.'
    types:
    - <xref:azure.mgmt.eventgrid.models.EventTypeInfo>
  - name: source
    description: 'The source information is provided by the publisher to determine
      the scope or

      context from which the events

      are originating. This information can be used by the subscriber during the approval
      process of

      the

      created partner topic.'
    types:
    - <xref:str>
variables:
- description: 'Azure subscription ID of the subscriber. The partner topic

    associated with the channel will be

    created under this Azure subscription.'
  name: azure_subscription_id
  types:
  - <xref:str>
- description: 'Azure Resource Group of the subscriber. The partner topic associated

    with the channel will be

    created under this resource group.'
  name: resource_group_name
  types:
  - <xref:str>
- description: Name of the partner topic associated with the channel.
  name: name
  types:
  - <xref:str>
- description: 'Event Type Information for the partner topic. This information is

    provided by the publisher and can be used by the

    subscriber to view different types of events that are published.'
  name: event_type_info
  types:
  - <xref:azure.mgmt.eventgrid.models.EventTypeInfo>
- description: 'The source information is provided by the publisher to determine the
    scope or

    context from which the events

    are originating. This information can be used by the subscriber during the approval
    process of

    the

    created partner topic.'
  name: source
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.eventgrid.models.PartnerTopicInfo.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.eventgrid.models.PartnerTopicInfo.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.eventgrid.models.PartnerTopicInfo.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.eventgrid.models.PartnerTopicInfo.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.eventgrid.models.PartnerTopicInfo.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.eventgrid.models.PartnerTopicInfo.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.eventgrid.models.PartnerTopicInfo.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
