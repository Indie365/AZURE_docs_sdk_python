### YamlMime:PythonClass
uid: azure.mgmt.sql.models.ManagedServerSecurityAlertPolicy
name: ManagedServerSecurityAlertPolicy
fullName: azure.mgmt.sql.models.ManagedServerSecurityAlertPolicy
module: azure.mgmt.sql.models
inheritances:
- azure.mgmt.sql.models._models_py3.ProxyResource
summary: 'A managed server security alert policy.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'ManagedServerSecurityAlertPolicy(*, state: str | SecurityAlertsPolicyState
    | None = None, disabled_alerts: List[str] | None = None, email_addresses: List[str]
    | None = None, email_account_admins: bool | None = None, storage_endpoint: str
    | None = None, storage_account_access_key: str | None = None, retention_days:
    int | None = None, **kwargs)'
  parameters:
  - name: state
    description: 'Specifies the state of the policy, whether it is enabled or disabled
      or a policy

      has not been applied yet on the specific database. Possible values include:
      "Enabled",

      "Disabled".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.SecurityAlertsPolicyState>
  - name: disabled_alerts
    description: 'Specifies an array of alerts that are disabled. Allowed values are:

      Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration,
      Unsafe_Action,

      Brute_Force.'
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: email_addresses
    description: Specifies an array of e-mail addresses to which the alert is sent.
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: email_account_admins
    description: Specifies that the alert is sent to the account administrators.
    isRequired: true
    types:
    - <xref:bool>
  - name: storage_endpoint
    description: 'Specifies the blob storage endpoint (e.g.

      [https://MyAccount.blob.core.windows.net](https://MyAccount.blob.core.windows.net)).
      This blob storage will hold all Threat Detection

      audit logs.'
    isRequired: true
    types:
    - <xref:str>
  - name: storage_account_access_key
    description: 'Specifies the identifier key of the Threat Detection audit

      storage account.'
    isRequired: true
    types:
    - <xref:str>
  - name: retention_days
    description: Specifies the number of days to keep in the Threat Detection audit
      logs.
    isRequired: true
    types:
    - <xref:int>
variables:
- description: Resource ID.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: SystemData of SecurityAlertPolicyResource.
  name: system_data
  types:
  - <xref:azure.mgmt.sql.models.SystemData>
- description: Specifies the UTC creation time of the policy.
  name: creation_time
  types:
  - <xref:datetime.datetime>
methods:
- uid: azure.mgmt.sql.models.ManagedServerSecurityAlertPolicy.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.sql.models.ManagedServerSecurityAlertPolicy.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.sql.models.ManagedServerSecurityAlertPolicy.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.sql.models.ManagedServerSecurityAlertPolicy.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.sql.models.ManagedServerSecurityAlertPolicy.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.sql.models.ManagedServerSecurityAlertPolicy.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.sql.models.ManagedServerSecurityAlertPolicy.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
