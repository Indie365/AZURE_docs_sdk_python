### YamlMime:PythonClass
uid: azure.mgmt.sql.models.ServerUpdate
name: ServerUpdate
fullName: azure.mgmt.sql.models.ServerUpdate
module: azure.mgmt.sql.models
inheritances:
- msrest.serialization.Model
summary: 'An update request for an Azure SQL Database server.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'ServerUpdate(*, identity: ResourceIdentity | None = None, tags: Dict[str,
    str] | None = None, administrator_login: str | None = None, administrator_login_password:
    str | None = None, version: str | None = None, minimal_tls_version: str | None
    = None, public_network_access: str | ServerNetworkAccessFlag | None = None, primary_user_assigned_identity_id:
    str | None = None, federated_client_id: str | None = None, key_id: str | None
    = None, administrators: ServerExternalAdministrator | None = None, restrict_outbound_network_access:
    str | ServerNetworkAccessFlag | None = None, **kwargs)'
  parameters:
  - name: identity
    description: Server identity.
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.ResourceIdentity>
  - name: tags
    description: A set of tags. Resource tags.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: administrator_login
    description: 'Administrator username for the server. Once created it cannot be

      changed.'
    isRequired: true
    types:
    - <xref:str>
  - name: administrator_login_password
    description: 'The administrator login password (required for server

      creation).'
    isRequired: true
    types:
    - <xref:str>
  - name: version
    description: The version of the server.
    isRequired: true
    types:
    - <xref:str>
  - name: minimal_tls_version
    description: 'Minimal TLS version. Allowed values: ''1.0'', ''1.1'', ''1.2''.'
    isRequired: true
    types:
    - <xref:str>
  - name: public_network_access
    description: 'Whether or not public endpoint access is allowed for this server.

      Value is optional but if passed in, must be ''Enabled'' or ''Disabled''. Possible
      values include:

      "Enabled", "Disabled".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.ServerNetworkAccessFlag>
  - name: primary_user_assigned_identity_id
    description: 'The resource id of a user assigned identity to be

      used by default.'
    isRequired: true
    types:
    - <xref:str>
  - name: federated_client_id
    description: The Client id used for cross tenant CMK scenario.
    isRequired: true
    types:
    - <xref:str>
  - name: key_id
    description: A CMK URI of the key to use for encryption.
    isRequired: true
    types:
    - <xref:str>
  - name: administrators
    description: The Azure Active Directory identity of the server.
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.ServerExternalAdministrator>
  - name: restrict_outbound_network_access
    description: 'Whether or not to restrict outbound network access for

      this server.  Value is optional but if passed in, must be ''Enabled'' or ''Disabled''.
      Possible

      values include: "Enabled", "Disabled".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.ServerNetworkAccessFlag>
variables:
- description: The state of the server.
  name: state
  types:
  - <xref:str>
- description: The fully qualified domain name of the server.
  name: fully_qualified_domain_name
  types:
  - <xref:str>
- description: List of private endpoint connections on a server.
  name: private_endpoint_connections
  types:
  - <xref:list>[<xref:azure.mgmt.sql.models.ServerPrivateEndpointConnection>]
- description: 'Whether or not existing server has a workspace created and if it

    allows connection from workspace. Possible values include: "Connected", "Disconnected".'
  name: workspace_feature
  types:
  - <xref:str>
  - <xref:azure.mgmt.sql.models.ServerWorkspaceFeature>
methods:
- uid: azure.mgmt.sql.models.ServerUpdate.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.sql.models.ServerUpdate.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.sql.models.ServerUpdate.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.sql.models.ServerUpdate.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.sql.models.ServerUpdate.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.sql.models.ServerUpdate.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.sql.models.ServerUpdate.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
