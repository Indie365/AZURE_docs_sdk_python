### YamlMime:PythonClass
uid: azure.mgmt.datalake.analytics.account.models.data_lake_analytics_account_py3.DataLakeAnalyticsAccount
name: DataLakeAnalyticsAccount
fullName: azure.mgmt.datalake.analytics.account.models.data_lake_analytics_account_py3.DataLakeAnalyticsAccount
module: azure.mgmt.datalake.analytics.account.models.data_lake_analytics_account_py3
inheritances:
- azure.mgmt.datalake.analytics.account.models.resource_py3.Resource
summary: 'A Data Lake Analytics account object, containing all information associated

  with the named Data Lake Analytics account.


  Variables are only populated by the server, and will be ignored when

  sending a request.'
constructor:
  syntax: DataLakeAnalyticsAccount(**kwargs)
variables:
- description: The resource identifer.
  name: id
  types:
  - <xref:str>
- description: The resource name.
  name: name
  types:
  - <xref:str>
- description: The resource type.
  name: type
  types:
  - <xref:str>
- description: The resource location.
  name: location
  types:
  - <xref:str>
- description: The resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: 'The unique identifier associated with this Data Lake

    Analytics account.'
  name: account_id
  types:
  - <xref:str>
- description: 'The provisioning status of the Data Lake

    Analytics account. Possible values include: ''Failed'', ''Creating'',

    ''Running'', ''Succeeded'', ''Patching'', ''Suspending'', ''Resuming'', ''Deleting'',

    ''Deleted'', ''Undeleting'', ''Canceled'''
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.analytics.account.models.DataLakeAnalyticsAccountStatus>
- description: 'The state of the Data Lake Analytics account. Possible values

    include: ''Active'', ''Suspended'''
  name: state
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.analytics.account.models.DataLakeAnalyticsAccountState>
- description: The account creation time.
  name: creation_time
  types:
  - <xref:datetime>
- description: The account last modified time.
  name: last_modified_time
  types:
  - <xref:datetime>
- description: The full CName endpoint for this account.
  name: endpoint
  types:
  - <xref:str>
- description: 'The default Data Lake Store account

    associated with this account.'
  name: default_data_lake_store_account
  types:
  - <xref:str>
- description: 'The list of Data Lake Store accounts

    associated with this account.'
  name: data_lake_store_accounts
  types:
  - <xref:list>[<xref:azure.mgmt.datalake.analytics.account.models.DataLakeStoreAccountInformation>]
- description: 'The list of Azure Blob Storage accounts associated

    with this account.'
  name: storage_accounts
  types:
  - <xref:list>[<xref:azure.mgmt.datalake.analytics.account.models.StorageAccountInformation>]
- description: 'The list of compute policies associated with this

    account.'
  name: compute_policies
  types:
  - <xref:list>[<xref:azure.mgmt.datalake.analytics.account.models.ComputePolicy>]
- description: 'The list of firewall rules associated with this

    account.'
  name: firewall_rules
  types:
  - <xref:list>[<xref:azure.mgmt.datalake.analytics.account.models.FirewallRule>]
- description: 'The current state of the IP address firewall for

    this account. Possible values include: ''Enabled'', ''Disabled'''
  name: firewall_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.analytics.account.models.FirewallState>
- description: 'The current state of allowing or

    disallowing IPs originating within Azure through the firewall. If the

    firewall is disabled, this is not enforced. Possible values include:

    ''Enabled'', ''Disabled'''
  name: firewall_allow_azure_ips
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.analytics.account.models.FirewallAllowAzureIpsState>
- description: 'The commitment tier for the next month. Possible values

    include: ''Consumption'', ''Commitment_100AUHours'', ''Commitment_500AUHours'',

    ''Commitment_1000AUHours'', ''Commitment_5000AUHours'',

    ''Commitment_10000AUHours'', ''Commitment_50000AUHours'',

    ''Commitment_100000AUHours'', ''Commitment_500000AUHours'''
  name: new_tier
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.analytics.account.models.TierType>
- description: 'The commitment tier in use for the current month.

    Possible values include: ''Consumption'', ''Commitment_100AUHours'',

    ''Commitment_500AUHours'', ''Commitment_1000AUHours'',

    ''Commitment_5000AUHours'', ''Commitment_10000AUHours'',

    ''Commitment_50000AUHours'', ''Commitment_100000AUHours'',

    ''Commitment_500000AUHours'''
  name: current_tier
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.analytics.account.models.TierType>
- description: 'The maximum supported jobs running under the account

    at the same time. Default value: 3 .'
  name: max_job_count
  types:
  - <xref:int>
- description: 'The system defined maximum supported jobs

    running under the account at the same time, which restricts the maximum

    number of running jobs the user can set for the account.'
  name: system_max_job_count
  types:
  - <xref:int>
- description: 'The maximum supported degree of

    parallelism for this account. Default value: 30 .'
  name: max_degree_of_parallelism
  types:
  - <xref:int>
- description: 'The system defined maximum

    supported degree of parallelism for this account, which restricts the

    maximum value of parallelism the user can set for the account.'
  name: system_max_degree_of_parallelism
  types:
  - <xref:int>
- description: 'The maximum supported degree of

    parallelism per job for this account.'
  name: max_degree_of_parallelism_per_job
  types:
  - <xref:int>
- description: 'The minimum supported priority per job for

    this account.'
  name: min_priority_per_job
  types:
  - <xref:int>
- description: 'The number of days that job metadata is

    retained. Default value: 30 .'
  name: query_store_retention
  types:
  - <xref:int>
methods:
- uid: azure.mgmt.datalake.analytics.account.models.data_lake_analytics_account_py3.DataLakeAnalyticsAccount.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.datalake.analytics.account.models.data_lake_analytics_account_py3.DataLakeAnalyticsAccount.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.datalake.analytics.account.models.data_lake_analytics_account_py3.DataLakeAnalyticsAccount.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.datalake.analytics.account.models.data_lake_analytics_account_py3.DataLakeAnalyticsAccount.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.datalake.analytics.account.models.data_lake_analytics_account_py3.DataLakeAnalyticsAccount.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.datalake.analytics.account.models.data_lake_analytics_account_py3.DataLakeAnalyticsAccount.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.datalake.analytics.account.models.data_lake_analytics_account_py3.DataLakeAnalyticsAccount.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
