### YamlMime:PythonClass
uid: azure.mgmt.datalake.analytics.job.models.job_statistics_vertex_stage_py3.JobStatisticsVertexStage
name: JobStatisticsVertexStage
fullName: azure.mgmt.datalake.analytics.job.models.job_statistics_vertex_stage_py3.JobStatisticsVertexStage
module: azure.mgmt.datalake.analytics.job.models.job_statistics_vertex_stage_py3
inheritances:
- msrest.serialization.Model
summary: 'The Data Lake Analytics job statistics vertex stage information.


  Variables are only populated by the server, and will be ignored when

  sending a request.'
constructor:
  syntax: JobStatisticsVertexStage(*, max_data_read_vertex=None, max_execution_time_vertex=None,
    max_peak_mem_usage_vertex=None, allocated_container_cpu_core_count=None, allocated_container_mem_size=None,
    used_vertex_cpu_core_count=None, used_vertex_peak_mem_size=None, **kwargs)
  parameters:
  - name: max_data_read_vertex
    description: 'the vertex with the maximum amount of data

      read.'
    isRequired: true
    types:
    - <xref:azure.mgmt.datalake.analytics.job.models.JobStatisticsVertex>
  - name: max_execution_time_vertex
    description: 'the vertex with the maximum execution

      time.'
    isRequired: true
    types:
    - <xref:azure.mgmt.datalake.analytics.job.models.JobStatisticsVertex>
  - name: max_peak_mem_usage_vertex
    description: 'the vertex with the maximum peak memory

      usage.'
    isRequired: true
    types:
    - <xref:azure.mgmt.datalake.analytics.job.models.JobStatisticsVertex>
  - name: allocated_container_cpu_core_count
    description: 'The statistics information for

      the allocated container CPU core count.'
    isRequired: true
    types:
    - <xref:azure.mgmt.datalake.analytics.job.models.ResourceUsageStatistics>
  - name: allocated_container_mem_size
    description: 'The statistics information for the

      allocated container memory size.'
    isRequired: true
    types:
    - <xref:azure.mgmt.datalake.analytics.job.models.ResourceUsageStatistics>
  - name: used_vertex_cpu_core_count
    description: 'The statistics information for the used

      vertex CPU core count.'
    isRequired: true
    types:
    - <xref:azure.mgmt.datalake.analytics.job.models.ResourceUsageStatistics>
  - name: used_vertex_peak_mem_size
    description: 'The statistics information for the used

      vertex peak memory size.'
    isRequired: true
    types:
    - <xref:azure.mgmt.datalake.analytics.job.models.ResourceUsageStatistics>
variables:
- description: The amount of data read, in bytes.
  name: data_read
  types:
  - <xref:long>
- description: 'The amount of data read across multiple pods,

    in bytes.'
  name: data_read_cross_pod
  types:
  - <xref:long>
- description: The amount of data read in one pod, in bytes.
  name: data_read_intra_pod
  types:
  - <xref:long>
- description: The amount of data remaining to be read, in bytes.
  name: data_to_read
  types:
  - <xref:long>
- description: The amount of data written, in bytes.
  name: data_written
  types:
  - <xref:long>
- description: 'The number of duplicates that were

    discarded.'
  name: duplicate_discard_count
  types:
  - <xref:int>
- description: The number of failures that occured in this stage.
  name: failed_count
  types:
  - <xref:int>
- description: 'The maximum amount of data read in a single

    vertex, in bytes.'
  name: max_vertex_data_read
  types:
  - <xref:long>
- description: 'The minimum amount of data read in a single

    vertex, in bytes.'
  name: min_vertex_data_read
  types:
  - <xref:long>
- description: The number of read failures in this stage.
  name: read_failure_count
  types:
  - <xref:int>
- description: 'The number of vertices that were revoked during

    this stage.'
  name: revocation_count
  types:
  - <xref:int>
- description: 'The number of currently running vertices in this

    stage.'
  name: running_count
  types:
  - <xref:int>
- description: 'The number of currently scheduled vertices in this

    stage.'
  name: scheduled_count
  types:
  - <xref:int>
- description: The name of this stage in job execution.
  name: stage_name
  types:
  - <xref:str>
- description: 'The number of vertices that succeeded in this

    stage.'
  name: succeeded_count
  types:
  - <xref:int>
- description: The amount of temporary data written, in bytes.
  name: temp_data_written
  types:
  - <xref:long>
- description: The total vertex count for this stage.
  name: total_count
  types:
  - <xref:int>
- description: 'The amount of time that failed vertices took up

    in this stage.'
  name: total_failed_time
  types:
  - <xref:timedelta>
- description: The current progress of this stage, as a percentage.
  name: total_progress
  types:
  - <xref:int>
- description: 'The amount of time all successful vertices

    took in this stage.'
  name: total_succeeded_time
  types:
  - <xref:timedelta>
- description: 'The sum of the peak memory usage of all the

    vertices in the stage, in bytes.'
  name: total_peak_mem_usage
  types:
  - <xref:long>
- description: 'The sum of the total execution time of all the

    vertices in the stage.'
  name: total_execution_time
  types:
  - <xref:timedelta>
- description: 'The estimated vertex CPU core

    count.'
  name: estimated_vertex_cpu_core_count
  types:
  - <xref:int>
- description: 'The estimated vertex peak CPU

    core count.'
  name: estimated_vertex_peak_cpu_core_count
  types:
  - <xref:int>
- description: 'The estimated vertex memory size, in

    bytes.'
  name: estimated_vertex_mem_size
  types:
  - <xref:long>
methods:
- uid: azure.mgmt.datalake.analytics.job.models.job_statistics_vertex_stage_py3.JobStatisticsVertexStage.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.datalake.analytics.job.models.job_statistics_vertex_stage_py3.JobStatisticsVertexStage.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.datalake.analytics.job.models.job_statistics_vertex_stage_py3.JobStatisticsVertexStage.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.datalake.analytics.job.models.job_statistics_vertex_stage_py3.JobStatisticsVertexStage.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.datalake.analytics.job.models.job_statistics_vertex_stage_py3.JobStatisticsVertexStage.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.datalake.analytics.job.models.job_statistics_vertex_stage_py3.JobStatisticsVertexStage.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.datalake.analytics.job.models.job_statistics_vertex_stage_py3.JobStatisticsVertexStage.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
