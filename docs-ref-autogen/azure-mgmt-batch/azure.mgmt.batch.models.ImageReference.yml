### YamlMime:PythonClass
uid: azure.mgmt.batch.models.ImageReference
name: ImageReference
fullName: azure.mgmt.batch.models.ImageReference
module: azure.mgmt.batch.models
inheritances:
- azure.mgmt.batch._serialization.Model
summary: A reference to an Azure Virtual Machines Marketplace image or the Azure Image
  resource of a custom Virtual Machine. To get the list of all imageReferences verified
  by Azure Batch, see the 'List supported node agent SKUs' operation.
constructor:
  syntax: 'ImageReference(*, publisher: str | None = None, offer: str | None = None,
    sku: str | None = None, version: str | None = None, id: str | None = None, **kwargs)'
  parameters:
  - name: publisher
    description: For example, Canonical or MicrosoftWindowsServer.
    types:
    - <xref:str>
  - name: offer
    description: For example, UbuntuServer or WindowsServer.
    types:
    - <xref:str>
  - name: sku
    description: For example, 18.04-LTS or 2022-datacenter.
    types:
    - <xref:str>
  - name: version
    description: 'A value of ''latest'' can be specified to select the latest version
      of an

      image. If omitted, the default is ''latest''.'
    types:
    - <xref:str>
  - name: id
    description: 'This property is mutually exclusive with other properties. The Shared
      Image

      Gallery image must have replicas in the same region as the Azure Batch account.
      For information

      about the firewall settings for the Batch node agent to communicate with the
      Batch service see

      [https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration](https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration).'
    types:
    - <xref:str>
variables:
- description: For example, Canonical or MicrosoftWindowsServer.
  name: publisher
  types:
  - <xref:str>
- description: For example, UbuntuServer or WindowsServer.
  name: offer
  types:
  - <xref:str>
- description: For example, 18.04-LTS or 2022-datacenter.
  name: sku
  types:
  - <xref:str>
- description: 'A value of ''latest'' can be specified to select the latest version
    of an image.

    If omitted, the default is ''latest''.'
  name: version
  types:
  - <xref:str>
- description: 'This property is mutually exclusive with other properties. The Shared
    Image Gallery

    image must have replicas in the same region as the Azure Batch account. For information
    about

    the firewall settings for the Batch node agent to communicate with the Batch service
    see

    [https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration](https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration).'
  name: id
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.batch.models.ImageReference.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.batch.models.ImageReference.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.batch.models.ImageReference.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.batch.models.ImageReference.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.batch.models.ImageReference.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.batch.models.ImageReference.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
