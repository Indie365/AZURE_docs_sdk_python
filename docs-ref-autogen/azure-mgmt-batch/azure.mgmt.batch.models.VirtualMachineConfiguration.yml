### YamlMime:PythonClass
uid: azure.mgmt.batch.models.VirtualMachineConfiguration
name: VirtualMachineConfiguration
fullName: azure.mgmt.batch.models.VirtualMachineConfiguration
module: azure.mgmt.batch.models
inheritances:
- azure.mgmt.batch._serialization.Model
summary: 'The configuration for compute nodes in a pool based on the Azure Virtual
  Machines infrastructure.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'VirtualMachineConfiguration(*, image_reference: _models.ImageReference,
    node_agent_sku_id: str, windows_configuration: _models.WindowsConfiguration |
    None = None, data_disks: List[_models.DataDisk] | None = None, license_type: str
    | None = None, container_configuration: _models.ContainerConfiguration | None
    = None, disk_encryption_configuration: _models.DiskEncryptionConfiguration | None
    = None, node_placement_configuration: _models.NodePlacementConfiguration | None
    = None, extensions: List[_models.VMExtension] | None = None, os_disk: _models.OSDisk
    | None = None, **kwargs)'
  parameters:
  - name: image_reference
    description: 'A reference to an Azure Virtual Machines Marketplace image or the

      Azure Image resource of a custom Virtual Machine. To get the list of all imageReferences

      verified by Azure Batch, see the ''List supported node agent SKUs'' operation.
      Required.'
    types:
    - <xref:azure.mgmt.batch.models.ImageReference>
  - name: node_agent_sku_id
    description: 'The Batch node agent is a program that runs on each node in the

      pool, and provides the command-and-control interface between the node and the
      Batch service.

      There are different implementations of the node agent, known as SKUs, for different
      operating

      systems. You must specify a node agent SKU which matches the selected image
      reference. To get

      the list of supported node agent SKUs along with their list of verified image
      references, see

      the ''List supported node agent SKUs'' operation. Required.'
    types:
    - <xref:str>
  - name: windows_configuration
    description: 'This property must not be specified if the imageReference

      specifies a Linux OS image.'
    types:
    - <xref:azure.mgmt.batch.models.WindowsConfiguration>
  - name: data_disks
    description: 'This property must be specified if the compute nodes in the pool
      need to

      have empty data disks attached to them.'
    types:
    - <xref:azure.mgmt.batch.aio.operations.ApplicationOperations.list>[<xref:azure.mgmt.batch.models.DataDisk>]
  - name: license_type
    description: "This only applies to images that contain the Windows operating system,\n\
      and should only be used when you hold valid on-premises licenses for the nodes\
      \ which will be\ndeployed. If omitted, no on-premises licensing discount is\
      \ applied. Values are:\n\n   Windows_Server - The on-premises license is for\
      \ Windows Server.\n   Windows_Client - The on-premises license is for Windows\
      \ Client."
    types:
    - <xref:str>
  - name: container_configuration
    description: 'If specified, setup is performed on each node in the pool to

      allow tasks to run in containers. All regular tasks and job manager tasks run
      on this pool must

      specify the containerSettings property, and all other tasks may specify it.'
    types:
    - <xref:azure.mgmt.batch.models.ContainerConfiguration>
  - name: disk_encryption_configuration
    description: 'If specified, encryption is performed on each node in

      the pool during node provisioning.'
    types:
    - <xref:azure.mgmt.batch.models.DiskEncryptionConfiguration>
  - name: node_placement_configuration
    description: 'This configuration will specify rules on how nodes in

      the pool will be physically allocated.'
    types:
    - <xref:azure.mgmt.batch.models.NodePlacementConfiguration>
  - name: extensions
    description: 'If specified, the extensions mentioned in this configuration will
      be

      installed on each node.'
    types:
    - <xref:azure.mgmt.batch.aio.operations.ApplicationOperations.list>[<xref:azure.mgmt.batch.models.VMExtension>]
  - name: os_disk
    description: Contains configuration for ephemeral OSDisk settings.
    types:
    - <xref:azure.mgmt.batch.models.OSDisk>
variables:
- description: 'A reference to an Azure Virtual Machines Marketplace image or the
    Azure

    Image resource of a custom Virtual Machine. To get the list of all imageReferences
    verified by

    Azure Batch, see the ''List supported node agent SKUs'' operation. Required.'
  name: image_reference
  types:
  - <xref:azure.mgmt.batch.models.ImageReference>
- description: 'The Batch node agent is a program that runs on each node in the pool,

    and provides the command-and-control interface between the node and the Batch
    service. There

    are different implementations of the node agent, known as SKUs, for different
    operating

    systems. You must specify a node agent SKU which matches the selected image reference.
    To get

    the list of supported node agent SKUs along with their list of verified image
    references, see

    the ''List supported node agent SKUs'' operation. Required.'
  name: node_agent_sku_id
  types:
  - <xref:str>
- description: 'This property must not be specified if the imageReference

    specifies a Linux OS image.'
  name: windows_configuration
  types:
  - <xref:azure.mgmt.batch.models.WindowsConfiguration>
- description: 'This property must be specified if the compute nodes in the pool need
    to have

    empty data disks attached to them.'
  name: data_disks
  types:
  - <xref:list>[<xref:azure.mgmt.batch.models.DataDisk>]
- description: "This only applies to images that contain the Windows operating system,\
    \ and\nshould only be used when you hold valid on-premises licenses for the nodes\
    \ which will be\ndeployed. If omitted, no on-premises licensing discount is applied.\
    \ Values are:\n\n   Windows_Server - The on-premises license is for Windows Server.\n\
    \   Windows_Client - The on-premises license is for Windows Client."
  name: license_type
  types:
  - <xref:str>
- description: 'If specified, setup is performed on each node in the pool to

    allow tasks to run in containers. All regular tasks and job manager tasks run
    on this pool must

    specify the containerSettings property, and all other tasks may specify it.'
  name: container_configuration
  types:
  - <xref:azure.mgmt.batch.models.ContainerConfiguration>
- description: 'If specified, encryption is performed on each node in the

    pool during node provisioning.'
  name: disk_encryption_configuration
  types:
  - <xref:azure.mgmt.batch.models.DiskEncryptionConfiguration>
- description: 'This configuration will specify rules on how nodes in the

    pool will be physically allocated.'
  name: node_placement_configuration
  types:
  - <xref:azure.mgmt.batch.models.NodePlacementConfiguration>
- description: 'If specified, the extensions mentioned in this configuration will
    be

    installed on each node.'
  name: extensions
  types:
  - <xref:list>[<xref:azure.mgmt.batch.models.VMExtension>]
- description: Contains configuration for ephemeral OSDisk settings.
  name: os_disk
  types:
  - <xref:azure.mgmt.batch.models.OSDisk>
methods:
- uid: azure.mgmt.batch.models.VirtualMachineConfiguration.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.batch.models.VirtualMachineConfiguration.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.batch.models.VirtualMachineConfiguration.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.batch.models.VirtualMachineConfiguration.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.batch.models.VirtualMachineConfiguration.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.batch.models.VirtualMachineConfiguration.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
