### YamlMime:PythonClass
uid: azure.mgmt.servicefabric.models.NodeTypeDescription
name: NodeTypeDescription
fullName: azure.mgmt.servicefabric.models.NodeTypeDescription
module: azure.mgmt.servicefabric.models
inheritances:
- msrest.serialization.Model
summary: 'Describes a node type in the cluster, each node type represents sub set
  of nodes in the cluster.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'NodeTypeDescription(*, name: str, client_connection_endpoint_port: int,
    http_gateway_endpoint_port: int, is_primary: bool, vm_instance_count: int, placement_properties:
    Dict[str, str] | None = None, capacities: Dict[str, str] | None = None, durability_level:
    str | DurabilityLevel | None = None, application_ports: EndpointRangeDescription
    | None = None, ephemeral_ports: EndpointRangeDescription | None = None, reverse_proxy_endpoint_port:
    int | None = None, is_stateless: bool | None = None, multiple_availability_zones:
    bool | None = None, **kwargs)'
  parameters:
  - name: name
    description: Required. The name of the node type.
    isRequired: true
    types:
    - <xref:str>
  - name: placement_properties
    description: 'The placement tags applied to nodes in the node type, which can
      be

      used to indicate where certain services (workload) should run.'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: capacities
    description: 'The capacity tags applied to the nodes in the node type, the cluster

      resource manager uses these tags to understand how much resource a node has.'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: client_connection_endpoint_port
    description: Required. The TCP cluster management endpoint port.
    isRequired: true
    types:
    - <xref:int>
  - name: http_gateway_endpoint_port
    description: Required. The HTTP cluster management endpoint port.
    isRequired: true
    types:
    - <xref:int>
  - name: durability_level
    description: "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\
      \n* Bronze - No privileges. This is the default. \n\n* Silver - The infrastructure\
      \ jobs can be paused for a duration of 10 minutes per UD. \n\n* Gold - The infrastructure\
      \ jobs can be paused for a duration of 2 hours per UD. Gold \n\ndurability can\
      \ be enabled only on full node VM skus like D15_V2, G5 etc. Possible values\n\
      include: \"Bronze\", \"Silver\", \"Gold\"."
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.servicefabric.models.DurabilityLevel>
  - name: application_ports
    description: 'The range of ports from which cluster assigned port to Service Fabric

      applications.'
    isRequired: true
    types:
    - <xref:azure.mgmt.servicefabric.models.EndpointRangeDescription>
  - name: ephemeral_ports
    description: 'The range of ephemeral ports that nodes in this node type should
      be

      configured with.'
    isRequired: true
    types:
    - <xref:azure.mgmt.servicefabric.models.EndpointRangeDescription>
  - name: is_primary
    description: 'Required. The node type on which system services will run. Only
      one node

      type should be marked as primary. Primary node type cannot be deleted or changed
      for existing

      clusters.'
    isRequired: true
    types:
    - <xref:bool>
  - name: vm_instance_count
    description: 'Required. VMInstanceCount should be 1 to n, where n indicates the

      number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can
      be done only in

      these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability
      >= Bronze

      and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the
      VMs for this

      nodeType will not be used for the initial cluster size computation.'
    isRequired: true
    types:
    - <xref:int>
  - name: reverse_proxy_endpoint_port
    description: The endpoint used by reverse proxy.
    isRequired: true
    types:
    - <xref:int>
  - name: is_stateless
    description: Indicates if the node type can only host Stateless workloads.
    isRequired: true
    types:
    - <xref:bool>
  - name: multiple_availability_zones
    description: 'Indicates if the node type is enabled to support multiple

      zones.'
    isRequired: true
    types:
    - <xref:bool>
methods:
- uid: azure.mgmt.servicefabric.models.NodeTypeDescription.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.servicefabric.models.NodeTypeDescription.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.servicefabric.models.NodeTypeDescription.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.servicefabric.models.NodeTypeDescription.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.servicefabric.models.NodeTypeDescription.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.servicefabric.models.NodeTypeDescription.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.servicefabric.models.NodeTypeDescription.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
