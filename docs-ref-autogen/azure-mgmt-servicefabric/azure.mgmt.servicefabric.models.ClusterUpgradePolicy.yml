### YamlMime:PythonClass
uid: azure.mgmt.servicefabric.models.ClusterUpgradePolicy
name: ClusterUpgradePolicy
fullName: azure.mgmt.servicefabric.models.ClusterUpgradePolicy
module: azure.mgmt.servicefabric.models
inheritances:
- msrest.serialization.Model
summary: 'Describes the policy used when upgrading the cluster.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'ClusterUpgradePolicy(*, upgrade_replica_set_check_timeout: str, health_check_wait_duration:
    str, health_check_stable_duration: str, health_check_retry_timeout: str, upgrade_timeout:
    str, upgrade_domain_timeout: str, health_policy: ClusterHealthPolicy, force_restart:
    bool | None = None, delta_health_policy: ClusterUpgradeDeltaHealthPolicy | None
    = None, **kwargs)'
  parameters:
  - name: force_restart
    description: 'If true, then processes are forcefully restarted during upgrade
      even when

      the code version has not changed (the upgrade only changes configuration or
      data).'
    isRequired: true
    types:
    - <xref:bool>
  - name: upgrade_replica_set_check_timeout
    description: 'Required. The maximum amount of time to block

      processing of an upgrade domain and prevent loss of availability when there
      are unexpected

      issues. When this timeout expires, processing of the upgrade domain will proceed
      regardless of

      availability loss issues. The timeout is reset at the start of each upgrade
      domain. The timeout

      can be in either hh:mm:ss or in d.hh:mm:ss.ms format.'
    isRequired: true
    types:
    - <xref:str>
  - name: health_check_wait_duration
    description: 'Required. The length of time to wait after completing an

      upgrade domain before performing health checks. The duration can be in either
      hh:mm:ss or in

      d.hh:mm:ss.ms format.'
    isRequired: true
    types:
    - <xref:str>
  - name: health_check_stable_duration
    description: 'Required. The amount of time that the application or

      cluster must remain healthy before the upgrade proceeds to the next upgrade
      domain. The

      duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.'
    isRequired: true
    types:
    - <xref:str>
  - name: health_check_retry_timeout
    description: 'Required. The amount of time to retry health evaluation when

      the application or cluster is unhealthy before the upgrade rolls back. The timeout
      can be in

      either hh:mm:ss or in d.hh:mm:ss.ms format.'
    isRequired: true
    types:
    - <xref:str>
  - name: upgrade_timeout
    description: 'Required. The amount of time the overall upgrade has to complete
      before

      the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms
      format.'
    isRequired: true
    types:
    - <xref:str>
  - name: upgrade_domain_timeout
    description: 'Required. The amount of time each upgrade domain has to complete

      before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms

      format.'
    isRequired: true
    types:
    - <xref:str>
  - name: health_policy
    description: Required. The cluster health policy used when upgrading the cluster.
    isRequired: true
    types:
    - <xref:azure.mgmt.servicefabric.models.ClusterHealthPolicy>
  - name: delta_health_policy
    description: The cluster delta health policy used when upgrading the cluster.
    isRequired: true
    types:
    - <xref:azure.mgmt.servicefabric.models.ClusterUpgradeDeltaHealthPolicy>
methods:
- uid: azure.mgmt.servicefabric.models.ClusterUpgradePolicy.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.servicefabric.models.ClusterUpgradePolicy.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.servicefabric.models.ClusterUpgradePolicy.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.servicefabric.models.ClusterUpgradePolicy.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.servicefabric.models.ClusterUpgradePolicy.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.servicefabric.models.ClusterUpgradePolicy.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.servicefabric.models.ClusterUpgradePolicy.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
