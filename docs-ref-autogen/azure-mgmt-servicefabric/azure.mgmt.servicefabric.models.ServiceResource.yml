### YamlMime:PythonClass
uid: azure.mgmt.servicefabric.models.ServiceResource
name: ServiceResource
fullName: azure.mgmt.servicefabric.models.ServiceResource
module: azure.mgmt.servicefabric.models
inheritances:
- azure.mgmt.servicefabric.models._models_py3.ProxyResource
summary: 'The service resource.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'ServiceResource(*, location: str | None = None, tags: Dict[str, str] |
    None = None, placement_constraints: str | None = None, correlation_scheme: List[ServiceCorrelationDescription]
    | None = None, service_load_metrics: List[ServiceLoadMetricDescription] | None
    = None, service_placement_policies: List[ServicePlacementPolicyDescription] |
    None = None, default_move_cost: str | MoveCost | None = None, service_type_name:
    str | None = None, partition_description: PartitionSchemeDescription | None =
    None, service_package_activation_mode: str | ArmServicePackageActivationMode |
    None = None, service_dns_name: str | None = None, **kwargs)'
  parameters:
  - name: location
    description: 'It will be deprecated in New API, resource location depends on the
      parent

      resource.'
    isRequired: true
    types:
    - <xref:str>
  - name: tags
    description: A set of tags. Azure resource tags.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: placement_constraints
    description: 'The placement constraints as a string. Placement constraints are

      boolean expressions on node properties and allow for restricting a service to
      particular nodes

      based on the service requirements. For example, to place a service on nodes
      where NodeType is

      blue specify the following: "NodeColor == blue)".'
    isRequired: true
    types:
    - <xref:str>
  - name: correlation_scheme
    description: 'A list that describes the correlation of the service with other

      services.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.mgmt.servicefabric.models.ServiceCorrelationDescription>]
  - name: service_load_metrics
    description: 'The service load metrics is given as an array of

      ServiceLoadMetricDescription objects.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.mgmt.servicefabric.models.ServiceLoadMetricDescription>]
  - name: service_placement_policies
    description: 'A list that describes the correlation of the service with

      other services.'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.mgmt.servicefabric.models.ServicePlacementPolicyDescription>]
  - name: default_move_cost
    description: 'Specifies the move cost for the service. Possible values include:

      "Zero", "Low", "Medium", "High".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.servicefabric.models.MoveCost>
  - name: service_kind
    description: 'The kind of service (Stateless or Stateful).Constant filled by server.

      Possible values include: "Invalid", "Stateless", "Stateful".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.servicefabric.models.ServiceKind>
  - name: service_type_name
    description: The name of the service type.
    isRequired: true
    types:
    - <xref:str>
  - name: partition_description
    description: Describes how the service is partitioned.
    isRequired: true
    types:
    - <xref:azure.mgmt.servicefabric.models.PartitionSchemeDescription>
  - name: service_package_activation_mode
    description: 'The activation Mode of the service package. Possible

      values include: "SharedProcess", "ExclusiveProcess".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.servicefabric.models.ArmServicePackageActivationMode>
  - name: service_dns_name
    description: 'Dns name used for the service. If this is specified, then the service

      can be accessed via its DNS name instead of service name.'
    isRequired: true
    types:
    - <xref:str>
variables:
- description: Azure resource identifier.
  name: id
  types:
  - <xref:str>
- description: Azure resource name.
  name: name
  types:
  - <xref:str>
- description: Azure resource type.
  name: type
  types:
  - <xref:str>
- description: Azure resource etag.
  name: etag
  types:
  - <xref:str>
- description: Metadata pertaining to creation and last modification of the resource.
  name: system_data
  types:
  - <xref:azure.mgmt.servicefabric.models.SystemData>
- description: 'The current deployment or provisioning state, which only appears in

    the response.'
  name: provisioning_state
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.servicefabric.models.ServiceResource.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.servicefabric.models.ServiceResource.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.servicefabric.models.ServiceResource.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.servicefabric.models.ServiceResource.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.servicefabric.models.ServiceResource.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.servicefabric.models.ServiceResource.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.servicefabric.models.ServiceResource.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
