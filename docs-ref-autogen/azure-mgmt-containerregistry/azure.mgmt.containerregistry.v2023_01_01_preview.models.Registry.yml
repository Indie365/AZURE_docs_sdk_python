### YamlMime:PythonClass
uid: azure.mgmt.containerregistry.v2023_01_01_preview.models.Registry
name: Registry
fullName: azure.mgmt.containerregistry.v2023_01_01_preview.models.Registry
module: azure.mgmt.containerregistry.v2023_01_01_preview.models
inheritances:
- azure.mgmt.containerregistry.v2023_01_01_preview.models._models_py3.Resource
summary: 'An object that represents a container registry.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'Registry(*, location: str, sku: _models.Sku, tags: Dict[str, str] | None
    = None, identity: _models.IdentityProperties | None = None, admin_user_enabled:
    bool = False, network_rule_set: _models.NetworkRuleSet | None = None, policies:
    _models.Policies | None = None, encryption: _models.EncryptionProperty | None
    = None, data_endpoint_enabled: bool | None = None, public_network_access: str
    | _models.PublicNetworkAccess | None = None, network_rule_bypass_options: str
    | _models.NetworkRuleBypassOptions | None = None, zone_redundancy: str | _models.ZoneRedundancy
    | None = None, anonymous_pull_enabled: bool = False, **kwargs: Any)'
  parameters:
  - name: location
    description: 'The location of the resource. This cannot be changed after the resource
      is

      created. Required.'
    types:
    - <xref:str>
  - name: tags
    description: The tags of the resource.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: sku
    description: The SKU of the container registry. Required.
    types:
    - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.Sku>
  - name: identity
    description: The identity of the container registry.
    types:
    - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.IdentityProperties>
  - name: admin_user_enabled
    description: The value that indicates whether the admin user is enabled.
    types:
    - <xref:bool>
  - name: network_rule_set
    description: The network rule set for a container registry.
    types:
    - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.NetworkRuleSet>
  - name: policies
    description: The policies for a container registry.
    types:
    - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.Policies>
  - name: encryption
    description: The encryption settings of container registry.
    types:
    - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.EncryptionProperty>
  - name: data_endpoint_enabled
    description: Enable a single data endpoint per region for serving data.
    types:
    - <xref:bool>
  - name: public_network_access
    description: 'Whether or not public network access is allowed for the

      container registry. Known values are: "Enabled" and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.PublicNetworkAccess>
  - name: network_rule_bypass_options
    description: 'Whether to allow trusted Azure services to access a

      network restricted registry. Known values are: "AzureServices" and "None".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.NetworkRuleBypassOptions>
  - name: zone_redundancy
    description: 'Whether or not zone redundancy is enabled for this container

      registry. Known values are: "Enabled" and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.ZoneRedundancy>
  - name: anonymous_pull_enabled
    description: Enables registry-wide pull from unauthenticated clients.
    types:
    - <xref:bool>
variables:
- description: The resource ID.
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: The type of the resource.
  name: type
  types:
  - <xref:str>
- description: 'The location of the resource. This cannot be changed after the resource
    is

    created. Required.'
  name: location
  types:
  - <xref:str>
- description: The tags of the resource.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: Metadata pertaining to creation and last modification of the resource.
  name: system_data
  types:
  - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.SystemData>
- description: The SKU of the container registry. Required.
  name: sku
  types:
  - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.Sku>
- description: The identity of the container registry.
  name: identity
  types:
  - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.IdentityProperties>
- description: The URL that can be used to log into the container registry.
  name: login_server
  types:
  - <xref:str>
- description: The creation date of the container registry in ISO8601 format.
  name: creation_date
  types:
  - <xref:datetime.datetime>
- description: 'The provisioning state of the container registry at the time the

    operation was called. Known values are: "Creating", "Updating", "Deleting", "Succeeded",

    "Failed", and "Canceled".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.ProvisioningState>
- description: The status of the container registry at the time the operation was
    called.
  name: status
  types:
  - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.Status>
- description: The value that indicates whether the admin user is enabled.
  name: admin_user_enabled
  types:
  - <xref:bool>
- description: The network rule set for a container registry.
  name: network_rule_set
  types:
  - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.NetworkRuleSet>
- description: The policies for a container registry.
  name: policies
  types:
  - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.Policies>
- description: The encryption settings of container registry.
  name: encryption
  types:
  - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.EncryptionProperty>
- description: Enable a single data endpoint per region for serving data.
  name: data_endpoint_enabled
  types:
  - <xref:bool>
- description: 'List of host names that will serve data when

    dataEndpointEnabled is true.'
  name: data_endpoint_host_names
  types:
  - <xref:list>[<xref:str>]
- description: 'List of private endpoint connections for a container

    registry.'
  name: private_endpoint_connections
  types:
  - <xref:list>[<xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.PrivateEndpointConnection>]
- description: 'Whether or not public network access is allowed for the container

    registry. Known values are: "Enabled" and "Disabled".'
  name: public_network_access
  types:
  - <xref:str>
  - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.PublicNetworkAccess>
- description: 'Whether to allow trusted Azure services to access a network

    restricted registry. Known values are: "AzureServices" and "None".'
  name: network_rule_bypass_options
  types:
  - <xref:str>
  - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.NetworkRuleBypassOptions>
- description: 'Whether or not zone redundancy is enabled for this container registry.

    Known values are: "Enabled" and "Disabled".'
  name: zone_redundancy
  types:
  - <xref:str>
  - <xref:azure.mgmt.containerregistry.v2023_01_01_preview.models.ZoneRedundancy>
- description: Enables registry-wide pull from unauthenticated clients.
  name: anonymous_pull_enabled
  types:
  - <xref:bool>
methods:
- uid: azure.mgmt.containerregistry.v2023_01_01_preview.models.Registry.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.containerregistry.v2023_01_01_preview.models.Registry.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.containerregistry.v2023_01_01_preview.models.Registry.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.containerregistry.v2023_01_01_preview.models.Registry.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.containerregistry.v2023_01_01_preview.models.Registry.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.containerregistry.v2023_01_01_preview.models.Registry.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
