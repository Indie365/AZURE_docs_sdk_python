### YamlMime:PythonClass
uid: azure.mgmt.appconfiguration.v2022_05_01.models.ConfigurationStore
name: ConfigurationStore
fullName: azure.mgmt.appconfiguration.v2022_05_01.models.ConfigurationStore
module: azure.mgmt.appconfiguration.v2022_05_01.models
inheritances:
- azure.mgmt.appconfiguration.v2022_05_01.models._models_py3.TrackedResource
summary: 'The configuration store along with all resource properties. The Configuration
  Store will have

  all information to begin utilizing it.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'ConfigurationStore(*, location: str, sku: _models.Sku, tags: Dict[str,
    str] | None = None, identity: _models.ResourceIdentity | None = None, encryption:
    _models.EncryptionProperties | None = None, public_network_access: str | _models.PublicNetworkAccess
    | None = None, disable_local_auth: bool = False, soft_delete_retention_in_days:
    int = 7, enable_purge_protection: bool = False, create_mode: str | _models.CreateMode
    | None = None, **kwargs: Any)'
  parameters:
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: location
    description: The geo-location where the resource lives. Required.
    types:
    - <xref:str>
  - name: identity
    description: The managed identity information, if configured.
    types:
    - <xref:azure.mgmt.appconfiguration.v2022_05_01.models.ResourceIdentity>
  - name: sku
    description: The sku of the configuration store. Required.
    types:
    - <xref:azure.mgmt.appconfiguration.v2022_05_01.models.Sku>
  - name: encryption
    description: The encryption settings of the configuration store.
    types:
    - <xref:azure.mgmt.appconfiguration.v2022_05_01.models.EncryptionProperties>
  - name: public_network_access
    description: 'Control permission for data plane traffic coming from public

      networks while private endpoint is enabled. Known values are: "Enabled" and
      "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.appconfiguration.v2022_05_01.models.PublicNetworkAccess>
  - name: disable_local_auth
    description: Disables all authentication methods other than AAD authentication.
    types:
    - <xref:bool>
  - name: soft_delete_retention_in_days
    description: 'The amount of time in days that the configuration store

      will be retained when it is soft deleted.'
    types:
    - <xref:int>
  - name: enable_purge_protection
    description: 'Property specifying whether protection against purge is

      enabled for this configuration store.'
    types:
    - <xref:bool>
  - name: create_mode
    description: 'Indicates whether the configuration store need to be recovered.
      Known

      values are: "Recover" and "Default".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.appconfiguration.v2022_05_01.models.CreateMode>
variables:
- description: 'Fully qualified resource ID for the resource. Ex -

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: 'The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
    or

    "Microsoft.Storage/storageAccounts".'
  name: type
  types:
  - <xref:str>
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The geo-location where the resource lives. Required.
  name: location
  types:
  - <xref:str>
- description: The managed identity information, if configured.
  name: identity
  types:
  - <xref:azure.mgmt.appconfiguration.v2022_05_01.models.ResourceIdentity>
- description: The sku of the configuration store. Required.
  name: sku
  types:
  - <xref:azure.mgmt.appconfiguration.v2022_05_01.models.Sku>
- description: Resource system metadata.
  name: system_data
  types:
  - <xref:azure.mgmt.appconfiguration.v2022_05_01.models.SystemData>
- description: 'The provisioning state of the configuration store. Known values are:

    "Creating", "Updating", "Deleting", "Succeeded", "Failed", and "Canceled".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.appconfiguration.v2022_05_01.models.ProvisioningState>
- description: The creation date of configuration store.
  name: creation_date
  types:
  - <xref:datetime.datetime>
- description: The DNS endpoint where the configuration store API will be available.
  name: endpoint
  types:
  - <xref:str>
- description: The encryption settings of the configuration store.
  name: encryption
  types:
  - <xref:azure.mgmt.appconfiguration.v2022_05_01.models.EncryptionProperties>
- description: 'The list of private endpoint connections that are set up

    for this resource.'
  name: private_endpoint_connections
  types:
  - <xref:list>[<xref:azure.mgmt.appconfiguration.v2022_05_01.models.PrivateEndpointConnectionReference>]
- description: 'Control permission for data plane traffic coming from public

    networks while private endpoint is enabled. Known values are: "Enabled" and "Disabled".'
  name: public_network_access
  types:
  - <xref:str>
  - <xref:azure.mgmt.appconfiguration.v2022_05_01.models.PublicNetworkAccess>
- description: Disables all authentication methods other than AAD authentication.
  name: disable_local_auth
  types:
  - <xref:bool>
- description: 'The amount of time in days that the configuration store

    will be retained when it is soft deleted.'
  name: soft_delete_retention_in_days
  types:
  - <xref:int>
- description: 'Property specifying whether protection against purge is enabled

    for this configuration store.'
  name: enable_purge_protection
  types:
  - <xref:bool>
- description: 'Indicates whether the configuration store need to be recovered. Known
    values

    are: "Recover" and "Default".'
  name: create_mode
  types:
  - <xref:str>
  - <xref:azure.mgmt.appconfiguration.v2022_05_01.models.CreateMode>
methods:
- uid: azure.mgmt.appconfiguration.v2022_05_01.models.ConfigurationStore.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.appconfiguration.v2022_05_01.models.ConfigurationStore.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.appconfiguration.v2022_05_01.models.ConfigurationStore.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.appconfiguration.v2022_05_01.models.ConfigurationStore.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.appconfiguration.v2022_05_01.models.ConfigurationStore.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.appconfiguration.v2022_05_01.models.ConfigurationStore.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
