### YamlMime:PythonClass
uid: azure.mgmt.peering.models.PeeringService
name: PeeringService
fullName: azure.mgmt.peering.models.PeeringService
module: azure.mgmt.peering.models
inheritances:
- azure.mgmt.peering.models._models_py3.Resource
summary: 'Peering Service.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'PeeringService(*, location: str, sku: _models.PeeringServiceSku | None
    = None, tags: Dict[str, str] | None = None, peering_service_location: str | None
    = None, peering_service_provider: str | None = None, provider_primary_peering_location:
    str | None = None, provider_backup_peering_location: str | None = None, log_analytics_workspace_properties:
    _models.LogAnalyticsWorkspaceProperties | None = None, **kwargs)'
  parameters:
  - name: sku
    description: The SKU that defines the type of the peering service.
    types:
    - <xref:azure.mgmt.peering.models.PeeringServiceSku>
  - name: location
    description: The location of the resource. Required.
    types:
    - <xref:str>
  - name: tags
    description: The resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: peering_service_location
    description: The location (state/province) of the customer.
    types:
    - <xref:str>
  - name: peering_service_provider
    description: The name of the service provider.
    types:
    - <xref:str>
  - name: provider_primary_peering_location
    description: 'The primary peering (Microsoft/service provider)

      location to be used for customer traffic.'
    types:
    - <xref:str>
  - name: provider_backup_peering_location
    description: 'The backup peering (Microsoft/service provider)

      location to be used for customer traffic.'
    types:
    - <xref:str>
  - name: log_analytics_workspace_properties
    description: The Log Analytics Workspace Properties.
    types:
    - <xref:azure.mgmt.peering.models.LogAnalyticsWorkspaceProperties>
variables:
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: The ID of the resource.
  name: id
  types:
  - <xref:str>
- description: The type of the resource.
  name: type
  types:
  - <xref:str>
- description: The SKU that defines the type of the peering service.
  name: sku
  types:
  - <xref:azure.mgmt.peering.models.PeeringServiceSku>
- description: The location of the resource. Required.
  name: location
  types:
  - <xref:str>
- description: The resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The location (state/province) of the customer.
  name: peering_service_location
  types:
  - <xref:str>
- description: The name of the service provider.
  name: peering_service_provider
  types:
  - <xref:str>
- description: 'The provisioning state of the resource. Known values are:

    "Succeeded", "Updating", "Deleting", and "Failed".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.peering.models.ProvisioningState>
- description: 'The primary peering (Microsoft/service provider)

    location to be used for customer traffic.'
  name: provider_primary_peering_location
  types:
  - <xref:str>
- description: 'The backup peering (Microsoft/service provider)

    location to be used for customer traffic.'
  name: provider_backup_peering_location
  types:
  - <xref:str>
- description: The Log Analytics Workspace Properties.
  name: log_analytics_workspace_properties
  types:
  - <xref:azure.mgmt.peering.models.LogAnalyticsWorkspaceProperties>
methods:
- uid: azure.mgmt.peering.models.PeeringService.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.peering.models.PeeringService.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.peering.models.PeeringService.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.peering.models.PeeringService.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.peering.models.PeeringService.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.peering.models.PeeringService.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
