### YamlMime:PythonClass
uid: azure.mgmt.rdbms.mysql.models.PerformanceTierProperties
name: PerformanceTierProperties
fullName: azure.mgmt.rdbms.mysql.models.PerformanceTierProperties
module: azure.mgmt.rdbms.mysql.models
inheritances:
- azure.mgmt.rdbms.mysql._serialization.Model
summary: Performance tier properties.
constructor:
  syntax: 'PerformanceTierProperties(*, id: str | None = None, max_backup_retention_days:
    int | None = None, min_backup_retention_days: int | None = None, max_storage_mb:
    int | None = None, min_large_storage_mb: int | None = None, max_large_storage_mb:
    int | None = None, min_storage_mb: int | None = None, service_level_objectives:
    List[_models.PerformanceTierServiceLevelObjectives] | None = None, **kwargs: Any)'
  parameters:
  - name: id
    description: ID of the performance tier.
    types:
    - <xref:str>
  - name: max_backup_retention_days
    description: 'Maximum Backup retention in days for the performance tier

      edition.'
    types:
    - <xref:int>
  - name: min_backup_retention_days
    description: 'Minimum Backup retention in days for the performance tier

      edition.'
    types:
    - <xref:int>
  - name: max_storage_mb
    description: Max storage allowed for a server.
    types:
    - <xref:int>
  - name: min_large_storage_mb
    description: Max storage allowed for a server.
    types:
    - <xref:int>
  - name: max_large_storage_mb
    description: Max storage allowed for a server.
    types:
    - <xref:int>
  - name: min_storage_mb
    description: Max storage allowed for a server.
    types:
    - <xref:int>
  - name: service_level_objectives
    description: 'Service level objectives associated with the performance

      tier.'
    types:
    - <xref:azure.mgmt.rdbms.mariadb.aio.operations.LocationBasedPerformanceTierOperations.list>[<xref:azure.mgmt.rdbms.mysql.models.PerformanceTierServiceLevelObjectives>]
variables:
- description: ID of the performance tier.
  name: id
  types:
  - <xref:str>
- description: 'Maximum Backup retention in days for the performance tier

    edition.'
  name: max_backup_retention_days
  types:
  - <xref:int>
- description: 'Minimum Backup retention in days for the performance tier

    edition.'
  name: min_backup_retention_days
  types:
  - <xref:int>
- description: Max storage allowed for a server.
  name: max_storage_mb
  types:
  - <xref:int>
- description: Max storage allowed for a server.
  name: min_large_storage_mb
  types:
  - <xref:int>
- description: Max storage allowed for a server.
  name: max_large_storage_mb
  types:
  - <xref:int>
- description: Max storage allowed for a server.
  name: min_storage_mb
  types:
  - <xref:int>
- description: Service level objectives associated with the performance tier.
  name: service_level_objectives
  types:
  - <xref:list>[<xref:azure.mgmt.rdbms.mysql.models.PerformanceTierServiceLevelObjectives>]
methods:
- uid: azure.mgmt.rdbms.mysql.models.PerformanceTierProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.rdbms.mysql.models.PerformanceTierProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.rdbms.mysql.models.PerformanceTierProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.rdbms.mysql.models.PerformanceTierProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.rdbms.mysql.models.PerformanceTierProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.rdbms.mysql.models.PerformanceTierProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
