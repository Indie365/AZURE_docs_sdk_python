### YamlMime:PythonClass
uid: azure.mgmt.securityinsight.models.MetadataDependencies
name: MetadataDependencies
fullName: azure.mgmt.securityinsight.models.MetadataDependencies
module: azure.mgmt.securityinsight.models
inheritances:
- azure.mgmt.securityinsight._serialization.Model
summary: Dependencies for the content item, what other content items it requires to
  work.  Can describe more complex dependencies using a recursive/nested structure.
  For a single dependency an id/kind/version can be supplied or operator/criteria
  for complex dependencies.
constructor:
  syntax: 'MetadataDependencies(*, content_id: str | None = None, kind: str | _models.Kind
    | None = None, version: str | None = None, name: str | None = None, operator:
    str | _models.Operator | None = None, criteria: List[_models.MetadataDependencies]
    | None = None, **kwargs)'
  parameters:
  - name: content_id
    description: Id of the content item we depend on.
    types:
    - <xref:str>
  - name: kind
    description: 'Type of the content item we depend on. Known values are: "DataConnector",

      "DataType", "Workbook", "WorkbookTemplate", "Playbook", "PlaybookTemplate",

      "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery", "InvestigationQuery",
      "Parser",

      "Watchlist", "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector",
      and

      "AutomationRule".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.securityinsight.models.Kind>
  - name: version
    description: 'Version of the the content item we depend on.  Can be blank, * or
      missing to

      indicate any version fulfills the dependency.  If version does not match our
      defined numeric

      format then an exact match is required.'
    types:
    - <xref:str>
  - name: name
    description: Name of the content item.
    types:
    - <xref:str>
  - name: operator
    description: 'Operator used for list of dependencies in criteria array. Known
      values are:

      "AND" and "OR".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.securityinsight.models.Operator>
  - name: criteria
    description: 'This is the list of dependencies we must fulfill, according to the
      AND/OR

      operator.'
    types:
    - <xref:azure.mgmt.securityinsight.aio.operations.AlertRuleTemplatesOperations.list>[<xref:azure.mgmt.securityinsight.models.MetadataDependencies>]
variables:
- description: Id of the content item we depend on.
  name: content_id
  types:
  - <xref:str>
- description: 'Type of the content item we depend on. Known values are: "DataConnector",

    "DataType", "Workbook", "WorkbookTemplate", "Playbook", "PlaybookTemplate",

    "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery", "InvestigationQuery",
    "Parser",

    "Watchlist", "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector",
    and

    "AutomationRule".'
  name: kind
  types:
  - <xref:str>
  - <xref:azure.mgmt.securityinsight.models.Kind>
- description: 'Version of the the content item we depend on.  Can be blank, * or
    missing to

    indicate any version fulfills the dependency.  If version does not match our defined
    numeric

    format then an exact match is required.'
  name: version
  types:
  - <xref:str>
- description: Name of the content item.
  name: name
  types:
  - <xref:str>
- description: 'Operator used for list of dependencies in criteria array. Known values
    are:

    "AND" and "OR".'
  name: operator
  types:
  - <xref:str>
  - <xref:azure.mgmt.securityinsight.models.Operator>
- description: 'This is the list of dependencies we must fulfill, according to the
    AND/OR

    operator.'
  name: criteria
  types:
  - <xref:list>[<xref:azure.mgmt.securityinsight.models.MetadataDependencies>]
methods:
- uid: azure.mgmt.securityinsight.models.MetadataDependencies.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.securityinsight.models.MetadataDependencies.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.securityinsight.models.MetadataDependencies.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.securityinsight.models.MetadataDependencies.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.securityinsight.models.MetadataDependencies.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.securityinsight.models.MetadataDependencies.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
