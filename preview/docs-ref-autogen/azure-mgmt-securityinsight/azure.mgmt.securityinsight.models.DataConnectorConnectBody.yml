### YamlMime:PythonClass
uid: azure.mgmt.securityinsight.models.DataConnectorConnectBody
name: DataConnectorConnectBody
fullName: azure.mgmt.securityinsight.models.DataConnectorConnectBody
module: azure.mgmt.securityinsight.models
inheritances:
- azure.mgmt.securityinsight._serialization.Model
summary: Represents Codeless API Polling data connector.
constructor:
  syntax: 'DataConnectorConnectBody(*, kind: str | _models.ConnectAuthKind | None
    = None, api_key: str | None = None, data_collection_endpoint: str | None = None,
    data_collection_rule_immutable_id: str | None = None, output_stream: str | None
    = None, client_secret: str | None = None, client_id: str | None = None, authorization_code:
    str | None = None, user_name: str | None = None, password: str | None = None,
    request_config_user_input_values: List[MutableMapping[str, Any]] | None = None,
    **kwargs)'
  parameters:
  - name: kind
    description: 'The authentication kind used to poll the data. Known values are:
      "Basic",

      "OAuth2", and "APIKey".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.securityinsight.models.ConnectAuthKind>
  - name: api_key
    description: The API key of the audit server.
    types:
    - <xref:str>
  - name: data_collection_endpoint
    description: 'Used in v2 logs connector. Represents the data collection

      ingestion endpoint in log analytics.'
    types:
    - <xref:str>
  - name: data_collection_rule_immutable_id
    description: 'Used in v2 logs connector. The data collection rule

      immutable id, the rule defines the transformation and data destination.'
    types:
    - <xref:str>
  - name: output_stream
    description: 'Used in v2 logs connector. The stream we are sending the data to,
      this

      is the name of the streamDeclarations defined in the DCR.'
    types:
    - <xref:str>
  - name: client_secret
    description: The client secret of the OAuth 2.0 application.
    types:
    - <xref:str>
  - name: client_id
    description: The client id of the OAuth 2.0 application.
    types:
    - <xref:str>
  - name: authorization_code
    description: 'The authorization code used in OAuth 2.0 code flow to issue a

      token.'
    types:
    - <xref:str>
  - name: user_name
    description: The user name in the audit log server.
    types:
    - <xref:str>
  - name: password
    description: The user password in the audit log server.
    types:
    - <xref:str>
  - name: request_config_user_input_values
    types:
    - <xref:azure.mgmt.securityinsight.aio.operations.AlertRuleTemplatesOperations.list>[<xref:azure.mgmt.securityinsight.models.FileFormat.JSON>]
variables:
- description: 'The authentication kind used to poll the data. Known values are: "Basic",
    "OAuth2",

    and "APIKey".'
  name: kind
  types:
  - <xref:str>
  - <xref:azure.mgmt.securityinsight.models.ConnectAuthKind>
- description: The API key of the audit server.
  name: api_key
  types:
  - <xref:str>
- description: 'Used in v2 logs connector. Represents the data collection

    ingestion endpoint in log analytics.'
  name: data_collection_endpoint
  types:
  - <xref:str>
- description: 'Used in v2 logs connector. The data collection rule

    immutable id, the rule defines the transformation and data destination.'
  name: data_collection_rule_immutable_id
  types:
  - <xref:str>
- description: 'Used in v2 logs connector. The stream we are sending the data to,
    this is

    the name of the streamDeclarations defined in the DCR.'
  name: output_stream
  types:
  - <xref:str>
- description: The client secret of the OAuth 2.0 application.
  name: client_secret
  types:
  - <xref:str>
- description: The client id of the OAuth 2.0 application.
  name: client_id
  types:
  - <xref:str>
- description: The authorization code used in OAuth 2.0 code flow to issue a token.
  name: authorization_code
  types:
  - <xref:str>
- description: The user name in the audit log server.
  name: user_name
  types:
  - <xref:str>
- description: The user password in the audit log server.
  name: password
  types:
  - <xref:str>
- name: request_config_user_input_values
  types:
  - <xref:list>[<xref:JSON>]
methods:
- uid: azure.mgmt.securityinsight.models.DataConnectorConnectBody.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.securityinsight.models.DataConnectorConnectBody.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.securityinsight.models.DataConnectorConnectBody.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.securityinsight.models.DataConnectorConnectBody.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.securityinsight.models.DataConnectorConnectBody.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.securityinsight.models.DataConnectorConnectBody.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
