### YamlMime:PythonClass
uid: azure.mgmt.securityinsight.models.ThreatIntelligenceAlertRuleTemplateProperties
name: ThreatIntelligenceAlertRuleTemplateProperties
fullName: azure.mgmt.securityinsight.models.ThreatIntelligenceAlertRuleTemplateProperties
module: azure.mgmt.securityinsight.models
inheritances:
- azure.mgmt.securityinsight.models._models_py3.AlertRuleTemplateWithMitreProperties
summary: 'Threat Intelligence alert rule template properties.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'ThreatIntelligenceAlertRuleTemplateProperties(*, severity: str | _models.AlertSeverity,
    alert_rules_created_by_template_count: int | None = None, description: str | None
    = None, display_name: str | None = None, required_data_connectors: List[_models.AlertRuleTemplateDataSource]
    | None = None, status: str | _models.TemplateStatus | None = None, tactics: List[str
    | _models.AttackTactic] | None = None, techniques: List[str] | None = None, **kwargs)'
  parameters:
  - name: alert_rules_created_by_template_count
    description: 'the number of alert rules that were created by

      this template.'
    types:
    - <xref:int>
  - name: description
    description: The description of the alert rule template.
    types:
    - <xref:str>
  - name: display_name
    description: The display name for alert rule template.
    types:
    - <xref:str>
  - name: required_data_connectors
    description: The required data sources for this template.
    types:
    - <xref:azure.mgmt.securityinsight.aio.operations.AlertRuleTemplatesOperations.list>[<xref:azure.mgmt.securityinsight.models.AlertRuleTemplateDataSource>]
  - name: status
    description: 'The alert rule template status. Known values are: "Installed", "Available",

      and "NotAvailable".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.securityinsight.models.TemplateStatus>
  - name: tactics
    description: The tactics of the alert rule.
    types:
    - <xref:azure.mgmt.securityinsight.aio.operations.AlertRuleTemplatesOperations.list>[<xref:str>
    - <xref:azure.mgmt.securityinsight.models.AttackTactic>]
  - name: techniques
    description: The techniques of the alert rule.
    types:
    - <xref:azure.mgmt.securityinsight.aio.operations.AlertRuleTemplatesOperations.list>[<xref:str>]
  - name: severity
    description: 'The severity for alerts created by this alert rule. Required. Known
      values

      are: "High", "Medium", "Low", and "Informational".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.securityinsight.models.AlertSeverity>
variables:
- description: 'the number of alert rules that were created by

    this template.'
  name: alert_rules_created_by_template_count
  types:
  - <xref:int>
- description: The last time that this alert rule template has been updated.
  name: last_updated_date_utc
  types:
  - <xref:datetime.datetime>
- description: The time that this alert rule template has been added.
  name: created_date_utc
  types:
  - <xref:datetime.datetime>
- description: The description of the alert rule template.
  name: description
  types:
  - <xref:str>
- description: The display name for alert rule template.
  name: display_name
  types:
  - <xref:str>
- description: The required data sources for this template.
  name: required_data_connectors
  types:
  - <xref:list>[<xref:azure.mgmt.securityinsight.models.AlertRuleTemplateDataSource>]
- description: 'The alert rule template status. Known values are: "Installed", "Available",
    and

    "NotAvailable".'
  name: status
  types:
  - <xref:str>
  - <xref:azure.mgmt.securityinsight.models.TemplateStatus>
- description: The tactics of the alert rule.
  name: tactics
  types:
  - <xref:list>[<xref:str>
  - <xref:azure.mgmt.securityinsight.models.AttackTactic>]
- description: The techniques of the alert rule.
  name: techniques
  types:
  - <xref:list>[<xref:str>]
- description: 'The severity for alerts created by this alert rule. Required. Known
    values are:

    "High", "Medium", "Low", and "Informational".'
  name: severity
  types:
  - <xref:str>
  - <xref:azure.mgmt.securityinsight.models.AlertSeverity>
methods:
- uid: azure.mgmt.securityinsight.models.ThreatIntelligenceAlertRuleTemplateProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.securityinsight.models.ThreatIntelligenceAlertRuleTemplateProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.securityinsight.models.ThreatIntelligenceAlertRuleTemplateProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.securityinsight.models.ThreatIntelligenceAlertRuleTemplateProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.securityinsight.models.ThreatIntelligenceAlertRuleTemplateProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.securityinsight.models.ThreatIntelligenceAlertRuleTemplateProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
