### YamlMime:PythonClass
uid: azure.mgmt.cdn.models.Sku
name: Sku
fullName: azure.mgmt.cdn.models.Sku
module: azure.mgmt.cdn.models
inheritances:
- azure.mgmt.cdn._serialization.Model
summary: "Standard_Verizon = The SKU name for a Standard Verizon CDN profile.\nPremium_Verizon\
  \ = The SKU name for a Premium Verizon CDN profile.\nCustom_Verizon = The SKU name\
  \ for a Custom Verizon CDN profile.\nStandard_Akamai = The SKU name for an Akamai\
  \ CDN profile.\nStandard_ChinaCdn = The SKU name for a China CDN profile for VOD,\
  \ Web and download scenarios using GB based billing model.\nStandard_Microsoft =\
  \ The SKU name for a Standard Microsoft CDN profile.\nStandard_AzureFrontDoor =\
  \  The SKU name for an Azure Front Door Standard profile.\nPremium_AzureFrontDoor\
  \ = The SKU name for an Azure Front Door Premium profile.\nStandard_955BandWidth_ChinaCdn\
  \ = The SKU name for a China CDN profile for VOD, Web and download scenarios using\
  \ 95-5 peak bandwidth billing model.\nStandard_AvgBandWidth_ChinaCdn = The SKU name\
  \ for a China CDN profile for VOD, Web and download scenarios using monthly average\
  \ peak bandwidth billing model.\nStandardPlus_ChinaCdn = The SKU name for a China\
  \ CDN profile for live-streaming using GB based billing model.\nStandardPlus_955BandWidth_ChinaCdn\
  \ = The SKU name for a China CDN live-streaming profile using 95-5 peak bandwidth\
  \ billing model.\nStandardPlus_AvgBandWidth_ChinaCdn = The SKU name for a China\
  \ CDN live-streaming profile using monthly average peak bandwidth billing model.\n\
  \n   ivar name:\n      Name of the pricing tier. Known values are: \"Standard_Verizon\"\
  , \"Premium_Verizon\",\n      \"Custom_Verizon\", \"Standard_Akamai\", \"Standard_ChinaCdn\"\
  , \"Standard_Microsoft\",\n      \"Standard_AzureFrontDoor\", \"Premium_AzureFrontDoor\"\
  , \"Standard_955BandWidth_ChinaCdn\",\n      \"Standard_AvgBandWidth_ChinaCdn\"\
  , \"StandardPlus_ChinaCdn\",\n      \"StandardPlus_955BandWidth_ChinaCdn\", and\
  \ \"StandardPlus_AvgBandWidth_ChinaCdn\".\n\n   vartype name:\n      str or ~azure.mgmt.cdn.models.SkuName"
constructor:
  syntax: 'Sku(*, name: str | _models.SkuName | None = None, **kwargs)'
  parameters:
  - name: name
    description: 'Name of the pricing tier. Known values are: "Standard_Verizon",

      "Premium_Verizon", "Custom_Verizon", "Standard_Akamai", "Standard_ChinaCdn",

      "Standard_Microsoft", "Standard_AzureFrontDoor", "Premium_AzureFrontDoor",

      "Standard_955BandWidth_ChinaCdn", "Standard_AvgBandWidth_ChinaCdn", "StandardPlus_ChinaCdn",

      "StandardPlus_955BandWidth_ChinaCdn", and "StandardPlus_AvgBandWidth_ChinaCdn".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.cdn.models.SkuName>
methods:
- uid: azure.mgmt.cdn.models.Sku.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.cdn.models.Sku.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.cdn.models.Sku.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.cdn.models.Sku.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.cdn.models.Sku.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.cdn.models.Sku.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
