### YamlMime:PythonClass
uid: azure.mgmt.connectedvmware.models.VCenter
name: VCenter
fullName: azure.mgmt.connectedvmware.models.VCenter
module: azure.mgmt.connectedvmware.models
inheritances:
- azure.mgmt.connectedvmware._serialization.Model
summary: 'Defines the vCenter.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'VCenter(*, location: str, fqdn: str, extended_location: _models.ExtendedLocation
    | None = None, tags: Dict[str, str] | None = None, kind: str | None = None, port:
    int | None = None, credentials: _models.VICredential | None = None, **kwargs)'
  parameters:
  - name: location
    description: Gets or sets the location. Required.
    types:
    - <xref:str>
  - name: extended_location
    description: Gets or sets the extended location.
    types:
    - <xref:azure.mgmt.connectedvmware.models.ExtendedLocation>
  - name: tags
    description: Gets or sets the Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: kind
    description: 'Metadata used by portal/tooling/etc to render different UX experiences
      for

      resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If
      supported,

      the resource provider must validate and persist this value.'
    types:
    - <xref:str>
  - name: fqdn
    description: Gets or sets the FQDN/IPAddress of the vCenter. Required.
    types:
    - <xref:str>
  - name: port
    description: Gets or sets the port of the vCenter.
    types:
    - <xref:int>
  - name: credentials
    description: Username / Password Credentials to connect to vcenter.
    types:
    - <xref:azure.mgmt.connectedvmware.models.VICredential>
variables:
- description: Gets or sets the location. Required.
  name: location
  types:
  - <xref:str>
- description: Gets or sets the extended location.
  name: extended_location
  types:
  - <xref:azure.mgmt.connectedvmware.models.ExtendedLocation>
- description: The system data.
  name: system_data
  types:
  - <xref:azure.mgmt.connectedvmware.models.SystemData>
- description: Gets or sets the Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: Gets or sets the name.
  name: name
  types:
  - <xref:str>
- description: Gets or sets the Id.
  name: id
  types:
  - <xref:str>
- description: Gets or sets the type of the resource.
  name: type
  types:
  - <xref:str>
- description: 'Metadata used by portal/tooling/etc to render different UX experiences
    for

    resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If
    supported,

    the resource provider must validate and persist this value.'
  name: kind
  types:
  - <xref:str>
- description: Gets or sets a unique identifier for this resource.
  name: uuid
  types:
  - <xref:str>
- description: Gets or sets the FQDN/IPAddress of the vCenter. Required.
  name: fqdn
  types:
  - <xref:str>
- description: Gets or sets the port of the vCenter.
  name: port
  types:
  - <xref:int>
- description: Gets or sets the version of the vCenter.
  name: version
  types:
  - <xref:str>
- description: Gets or sets the instance UUID of the vCenter.
  name: instance_uuid
  types:
  - <xref:str>
- description: Gets or sets the connection status to the vCenter.
  name: connection_status
  types:
  - <xref:str>
- description: Gets the name of the corresponding resource in Kubernetes.
  name: custom_resource_name
  types:
  - <xref:str>
- description: Username / Password Credentials to connect to vcenter.
  name: credentials
  types:
  - <xref:azure.mgmt.connectedvmware.models.VICredential>
- description: The resource status information.
  name: statuses
  types:
  - <xref:list>[<xref:azure.mgmt.connectedvmware.models.ResourceStatus>]
- description: Gets or sets the provisioning state.
  name: provisioning_state
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.connectedvmware.models.VCenter.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.connectedvmware.models.VCenter.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.connectedvmware.models.VCenter.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.connectedvmware.models.VCenter.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.connectedvmware.models.VCenter.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.connectedvmware.models.VCenter.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
