### YamlMime:PythonClass
uid: azure.mgmt.connectedvmware.models.VirtualMachineInventoryItem
name: VirtualMachineInventoryItem
fullName: azure.mgmt.connectedvmware.models.VirtualMachineInventoryItem
module: azure.mgmt.connectedvmware.models
inheritances:
- azure.mgmt.connectedvmware.models._models_py3.InventoryItemProperties
summary: 'The VM inventory item.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'VirtualMachineInventoryItem(*, managed_resource_id: str | None = None,
    mo_ref_id: str | None = None, mo_name: str | None = None, os_type: str | _models.OsType
    | None = None, os_name: str | None = None, ip_addresses: List[str] | None = None,
    folder_path: str | None = None, host: _models.InventoryItemDetails | None = None,
    resource_pool: _models.InventoryItemDetails | None = None, cluster: _models.InventoryItemDetails
    | None = None, instance_uuid: str | None = None, smbios_uuid: str | None = None,
    **kwargs)'
  parameters:
  - name: managed_resource_id
    description: 'Gets or sets the tracked resource id corresponding to the

      inventory resource.'
    types:
    - <xref:str>
  - name: mo_ref_id
    description: 'Gets or sets the MoRef (Managed Object Reference) ID for the inventory

      item.'
    types:
    - <xref:str>
  - name: mo_name
    description: Gets or sets the vCenter Managed Object name for the inventory item.
    types:
    - <xref:str>
  - name: os_type
    description: 'Gets or sets the type of the os. Known values are: "Windows", "Linux",
      and

      "Other".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.connectedvmware.models.OsType>
  - name: os_name
    description: Gets or sets os name.
    types:
    - <xref:str>
  - name: ip_addresses
    description: Gets or sets the nic ip addresses.
    types:
    - <xref:azure.mgmt.connectedvmware.aio.operations.ClustersOperations.list>[<xref:str>]
  - name: folder_path
    description: Gets or sets the folder path of the vm.
    types:
    - <xref:str>
  - name: host
    description: Host inventory resource details.
    types:
    - <xref:azure.mgmt.connectedvmware.models.InventoryItemDetails>
  - name: resource_pool
    description: ResourcePool inventory resource details.
    types:
    - <xref:azure.mgmt.connectedvmware.models.InventoryItemDetails>
  - name: cluster
    description: Cluster inventory resource details.
    types:
    - <xref:azure.mgmt.connectedvmware.models.InventoryItemDetails>
  - name: instance_uuid
    description: Gets or sets the instance uuid of the vm.
    types:
    - <xref:str>
  - name: smbios_uuid
    description: Gets or sets the SMBIOS UUID of the vm.
    types:
    - <xref:str>
variables:
- description: 'They inventory type. Required. Known values are: "ResourcePool",

    "VirtualMachine", "VirtualMachineTemplate", "VirtualNetwork", "Cluster", "Datastore",
    and

    "Host".'
  name: inventory_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.connectedvmware.models.InventoryType>
- description: 'Gets or sets the tracked resource id corresponding to the inventory

    resource.'
  name: managed_resource_id
  types:
  - <xref:str>
- description: Gets or sets the MoRef (Managed Object Reference) ID for the inventory
    item.
  name: mo_ref_id
  types:
  - <xref:str>
- description: Gets or sets the vCenter Managed Object name for the inventory item.
  name: mo_name
  types:
  - <xref:str>
- description: Gets or sets the provisioning state.
  name: provisioning_state
  types:
  - <xref:str>
- description: 'Gets or sets the type of the os. Known values are: "Windows", "Linux",
    and

    "Other".'
  name: os_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.connectedvmware.models.OsType>
- description: Gets or sets os name.
  name: os_name
  types:
  - <xref:str>
- description: Gets or sets the nic ip addresses.
  name: ip_addresses
  types:
  - <xref:list>[<xref:str>]
- description: Gets or sets the folder path of the vm.
  name: folder_path
  types:
  - <xref:str>
- description: Host inventory resource details.
  name: host
  types:
  - <xref:azure.mgmt.connectedvmware.models.InventoryItemDetails>
- description: ResourcePool inventory resource details.
  name: resource_pool
  types:
  - <xref:azure.mgmt.connectedvmware.models.InventoryItemDetails>
- description: Cluster inventory resource details.
  name: cluster
  types:
  - <xref:azure.mgmt.connectedvmware.models.InventoryItemDetails>
- description: Gets or sets the instance uuid of the vm.
  name: instance_uuid
  types:
  - <xref:str>
- description: Gets or sets the SMBIOS UUID of the vm.
  name: smbios_uuid
  types:
  - <xref:str>
- description: Gets the power state of the virtual machine.
  name: power_state
  types:
  - <xref:str>
- description: 'Gets or sets the current running status of VMware Tools running in

    the guest operating system.'
  name: tools_running_status
  types:
  - <xref:str>
- description: 'Gets or sets the current version status of VMware Tools installed

    in the guest operating system.'
  name: tools_version_status
  types:
  - <xref:str>
- description: Gets or sets the current version of VMware Tools.
  name: tools_version
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.connectedvmware.models.VirtualMachineInventoryItem.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.connectedvmware.models.VirtualMachineInventoryItem.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.connectedvmware.models.VirtualMachineInventoryItem.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.connectedvmware.models.VirtualMachineInventoryItem.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.connectedvmware.models.VirtualMachineInventoryItem.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.connectedvmware.models.VirtualMachineInventoryItem.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
