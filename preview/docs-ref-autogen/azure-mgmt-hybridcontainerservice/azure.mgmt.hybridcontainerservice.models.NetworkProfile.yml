### YamlMime:PythonClass
uid: azure.mgmt.hybridcontainerservice.models.NetworkProfile
name: NetworkProfile
fullName: azure.mgmt.hybridcontainerservice.models.NetworkProfile
module: azure.mgmt.hybridcontainerservice.models
inheritances:
- azure.mgmt.hybridcontainerservice._serialization.Model
summary: NetworkProfile - Profile of network configuration.
constructor:
  syntax: 'NetworkProfile(*, load_balancer_profile: _models.LoadBalancerProfile |
    None = None, load_balancer_sku: str | _models.LoadBalancerSku = ''unmanaged'',
    dns_service_ip: str | None = None, network_policy: str | _models.NetworkPolicy
    = ''calico'', pod_cidr: str | None = None, pod_cidrs: List[str] | None = None,
    service_cidr: str | None = None, service_cidrs: List[str] | None = None, **kwargs:
    Any)'
  parameters:
  - name: load_balancer_profile
    description: LoadBalancerProfile - Profile of the cluster load balancer.
    types:
    - <xref:azure.mgmt.hybridcontainerservice.models.LoadBalancerProfile>
  - name: load_balancer_sku
    description: 'LoadBalancerSku - The load balancer sku for the provisioned

      cluster. Possible values: ''unstacked-haproxy'', ''stacked-kube-vip'', ''stacked-metallb'',

      ''unmanaged''. The default is ''unmanaged''. Known values are: "unstacked-haproxy",

      "stacked-kube-vip", "stacked-metallb", and "unmanaged".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.hybridcontainerservice.models.LoadBalancerSku>
  - name: dns_service_ip
    description: 'DNSServiceIP - An IP address assigned to the Kubernetes DNS service.

      It must be within the Kubernetes service address range specified in serviceCidr.'
    types:
    - <xref:str>
  - name: network_policy
    description: 'NetworkPolicy - Network policy used for building Kubernetes network.

      Possible values include: ''calico'', ''flannel''. Default is ''calico''. Known
      values are: "calico"

      and "flannel".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.hybridcontainerservice.models.NetworkPolicy>
  - name: pod_cidr
    description: 'PodCidr - A CIDR notation IP range from which to assign pod IPs
      when kubenet

      is used.'
    types:
    - <xref:str>
  - name: pod_cidrs
    description: 'The CIDR notation IP ranges from which to assign pod IPs. One IPv4
      CIDR is

      expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6),
      is

      expected for dual-stack networking.'
    types:
    - <xref:azure.mgmt.hybridcontainerservice.aio.operations.Operations.list>[<xref:str>]
  - name: service_cidr
    description: 'ServiceCidr - A CIDR notation IP range from which to assign service

      cluster IPs. It must not overlap with any Subnet IP ranges.'
    types:
    - <xref:str>
  - name: service_cidrs
    description: 'The CIDR notation IP ranges from which to assign service cluster
      IPs.

      One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each
      IP family

      (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with
      any Subnet IP

      ranges.'
    types:
    - <xref:azure.mgmt.hybridcontainerservice.aio.operations.Operations.list>[<xref:str>]
variables:
- description: LoadBalancerProfile - Profile of the cluster load balancer.
  name: load_balancer_profile
  types:
  - <xref:azure.mgmt.hybridcontainerservice.models.LoadBalancerProfile>
- description: 'LoadBalancerSku - The load balancer sku for the provisioned cluster.

    Possible values: ''unstacked-haproxy'', ''stacked-kube-vip'', ''stacked-metallb'',
    ''unmanaged''. The

    default is ''unmanaged''. Known values are: "unstacked-haproxy", "stacked-kube-vip",

    "stacked-metallb", and "unmanaged".'
  name: load_balancer_sku
  types:
  - <xref:str>
  - <xref:azure.mgmt.hybridcontainerservice.models.LoadBalancerSku>
- description: 'DNSServiceIP - An IP address assigned to the Kubernetes DNS service.
    It

    must be within the Kubernetes service address range specified in serviceCidr.'
  name: dns_service_ip
  types:
  - <xref:str>
- description: 'NetworkPolicy - Network policy used for building Kubernetes network.

    Possible values include: ''calico'', ''flannel''. Default is ''calico''. Known
    values are: "calico"

    and "flannel".'
  name: network_policy
  types:
  - <xref:str>
  - <xref:azure.mgmt.hybridcontainerservice.models.NetworkPolicy>
- description: 'PodCidr - A CIDR notation IP range from which to assign pod IPs when
    kubenet is

    used.'
  name: pod_cidr
  types:
  - <xref:str>
- description: 'The CIDR notation IP ranges from which to assign pod IPs. One IPv4
    CIDR is

    expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6),
    is

    expected for dual-stack networking.'
  name: pod_cidrs
  types:
  - <xref:list>[<xref:str>]
- description: 'ServiceCidr - A CIDR notation IP range from which to assign service
    cluster

    IPs. It must not overlap with any Subnet IP ranges.'
  name: service_cidr
  types:
  - <xref:str>
- description: 'The CIDR notation IP ranges from which to assign service cluster IPs.
    One

    IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP
    family

    (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with
    any Subnet IP

    ranges.'
  name: service_cidrs
  types:
  - <xref:list>[<xref:str>]
methods:
- uid: azure.mgmt.hybridcontainerservice.models.NetworkProfile.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.hybridcontainerservice.models.NetworkProfile.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.hybridcontainerservice.models.NetworkProfile.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.hybridcontainerservice.models.NetworkProfile.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.hybridcontainerservice.models.NetworkProfile.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.hybridcontainerservice.models.NetworkProfile.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
