### YamlMime:PythonClass
uid: azure.mgmt.streamanalytics.models.JsonSerialization
name: JsonSerialization
fullName: azure.mgmt.streamanalytics.models.JsonSerialization
module: azure.mgmt.streamanalytics.models
inheritances:
- azure.mgmt.streamanalytics.models._models_py3.Serialization
summary: 'Describes how data from an input is serialized or how data is serialized
  when written to an output in JSON format.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'JsonSerialization(*, encoding: str | Encoding | None = None, format: str
    | JsonOutputSerializationFormat | None = None, **kwargs)'
  parameters:
  - name: type
    description: 'Required. Indicates the type of serialization that the input or
      output uses.

      Required on PUT (CreateOrReplace) requests.Constant filled by server.  Possible
      values include:

      "Csv", "Avro", "Json", "CustomClr", "Parquet".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:stream_analytics_management_client.models.EventSerializationType>
  - name: encoding
    description: 'Specifies the encoding of the incoming data in the case of input
      and the

      encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace)
      requests.

      Possible values include: "UTF8".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:stream_analytics_management_client.models.Encoding>
  - name: format
    description: 'This property only applies to JSON serialization of outputs only.
      It is not

      applicable to inputs. This property specifies the format of the JSON the output
      will be written

      in. The currently supported values are ''lineSeparated'' indicating the output
      will be formatted

      by having each JSON object separated by a new line and ''array'' indicating
      the output will be

      formatted as an array of JSON objects. Default value is ''lineSeparated'' if
      left null. Possible

      values include: "LineSeparated", "Array".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:stream_analytics_management_client.models.JsonOutputSerializationFormat>
methods:
- uid: azure.mgmt.streamanalytics.models.JsonSerialization.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.streamanalytics.models.JsonSerialization.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.streamanalytics.models.JsonSerialization.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.streamanalytics.models.JsonSerialization.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.streamanalytics.models.JsonSerialization.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.streamanalytics.models.JsonSerialization.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.streamanalytics.models.JsonSerialization.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
