### YamlMime:PythonClass
uid: azure.mgmt.maps.models.MapsAccountProperties
name: MapsAccountProperties
fullName: azure.mgmt.maps.models.MapsAccountProperties
module: azure.mgmt.maps.models
inheritances:
- azure.mgmt.maps._serialization.Model
summary: 'Additional Map account properties.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'MapsAccountProperties(*, disable_local_auth: bool = False, linked_resources:
    List[_models.LinkedResource] | None = None, cors: _models.CorsRules | None = None,
    **kwargs)'
  parameters:
  - name: disable_local_auth
    description: 'Allows toggle functionality on Azure Policy to disable Azure Maps

      local authentication support. This will disable Shared Keys authentication from
      any usage.'
    types:
    - <xref:bool>
  - name: linked_resources
    description: 'Sets the resources to be used for Managed Identities based

      operations for the Map account resource.'
    types:
    - <xref:list>[<xref:azure.mgmt.maps.models.LinkedResource>]
  - name: cors
    description: 'Specifies CORS rules for the Blob service. You can include up to
      five CorsRule

      elements in the request. If no CorsRule elements are included in the request
      body, all CORS

      rules will be deleted, and CORS will be disabled for the Blob service.'
    types:
    - <xref:azure.mgmt.maps.models.CorsRules>
variables:
- description: A unique identifier for the maps account.
  name: unique_id
  types:
  - <xref:str>
- description: 'Allows toggle functionality on Azure Policy to disable Azure Maps

    local authentication support. This will disable Shared Keys authentication from
    any usage.'
  name: disable_local_auth
  types:
  - <xref:bool>
- description: The provisioning state of the Map account resource.
  name: provisioning_state
  types:
  - <xref:str>
- description: 'Sets the resources to be used for Managed Identities based operations

    for the Map account resource.'
  name: linked_resources
  types:
  - <xref:list>[<xref:azure.mgmt.maps.models.LinkedResource>]
- description: 'Specifies CORS rules for the Blob service. You can include up to five
    CorsRule

    elements in the request. If no CorsRule elements are included in the request body,
    all CORS

    rules will be deleted, and CORS will be disabled for the Blob service.'
  name: cors
  types:
  - <xref:azure.mgmt.maps.models.CorsRules>
methods:
- uid: azure.mgmt.maps.models.MapsAccountProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.maps.models.MapsAccountProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.maps.models.MapsAccountProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.maps.models.MapsAccountProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.maps.models.MapsAccountProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.maps.models.MapsAccountProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
