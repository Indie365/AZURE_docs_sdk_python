### YamlMime:PythonClass
uid: azure.mgmt.billingbenefits.models.SavingsPlanOrderAliasModel
name: SavingsPlanOrderAliasModel
fullName: azure.mgmt.billingbenefits.models.SavingsPlanOrderAliasModel
module: azure.mgmt.billingbenefits.models
inheritances:
- azure.mgmt.billingbenefits.models._models_py3.Resource
summary: 'Savings plan order alias.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'SavingsPlanOrderAliasModel(*, sku: _models.Sku, kind: str | None = None,
    display_name: str | None = None, billing_scope_id: str | None = None, term: str
    | _models.Term | None = None, billing_plan: str | _models.BillingPlan | None =
    None, applied_scope_type: str | _models.AppliedScopeType | None = None, applied_scope_properties:
    _models.AppliedScopeProperties | None = None, commitment: _models.Commitment |
    None = None, **kwargs)'
  parameters:
  - name: sku
    description: Savings plan SKU. Required.
    types:
    - <xref:azure.mgmt.billingbenefits.models.Sku>
  - name: kind
    description: Resource provider kind.
    types:
    - <xref:str>
  - name: display_name
    description: Display name.
    types:
    - <xref:str>
  - name: billing_scope_id
    description: Subscription that will be charged for purchasing the benefit.
    types:
    - <xref:str>
  - name: term
    description: 'Represent benefit term in ISO 8601 format. Known values are: "P1Y",
      "P3Y", and

      "P5Y".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.billingbenefits.models.Term>
  - name: billing_plan
    description: 'Represents the billing plan in ISO 8601 format. Required only for

      monthly billing plans. "P1M"'
    types:
    - <xref:str>
    - <xref:azure.mgmt.billingbenefits.models.BillingPlan>
  - name: applied_scope_type
    description: 'Type of the Applied Scope. Known values are: "Single", "Shared",

      and "ManagementGroup".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.billingbenefits.models.AppliedScopeType>
  - name: applied_scope_properties
    description: 'Properties specific to applied scope type. Not required if

      not applicable.'
    types:
    - <xref:azure.mgmt.billingbenefits.models.AppliedScopeProperties>
  - name: commitment
    description: Commitment towards the benefit.
    types:
    - <xref:azure.mgmt.billingbenefits.models.Commitment>
variables:
- description: 'Fully qualified resource ID for the resource. Ex -

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: 'The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
    or

    "Microsoft.Storage/storageAccounts".'
  name: type
  types:
  - <xref:str>
- description: 'Azure Resource Manager metadata containing createdBy and modifiedBy

    information.'
  name: system_data
  types:
  - <xref:azure.mgmt.billingbenefits.models.SystemData>
- description: Savings plan SKU. Required.
  name: sku
  types:
  - <xref:azure.mgmt.billingbenefits.models.Sku>
- description: Resource provider kind.
  name: kind
  types:
  - <xref:str>
- description: Display name.
  name: display_name
  types:
  - <xref:str>
- description: Identifier of the savings plan created.
  name: savings_plan_order_id
  types:
  - <xref:str>
- description: 'Provisioning state. Known values are: "Creating", "PendingBilling",

    "ConfirmedBilling", "Created", "Succeeded", "Cancelled", "Expired", and "Failed".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.billingbenefits.models.ProvisioningState>
- description: Subscription that will be charged for purchasing the benefit.
  name: billing_scope_id
  types:
  - <xref:str>
- description: 'Represent benefit term in ISO 8601 format. Known values are: "P1Y",
    "P3Y", and

    "P5Y".'
  name: term
  types:
  - <xref:str>
  - <xref:azure.mgmt.billingbenefits.models.Term>
- description: 'Represents the billing plan in ISO 8601 format. Required only for
    monthly

    billing plans. "P1M"'
  name: billing_plan
  types:
  - <xref:str>
  - <xref:azure.mgmt.billingbenefits.models.BillingPlan>
- description: 'Type of the Applied Scope. Known values are: "Single", "Shared", and

    "ManagementGroup".'
  name: applied_scope_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.billingbenefits.models.AppliedScopeType>
- description: 'Properties specific to applied scope type. Not required if not

    applicable.'
  name: applied_scope_properties
  types:
  - <xref:azure.mgmt.billingbenefits.models.AppliedScopeProperties>
- description: Commitment towards the benefit.
  name: commitment
  types:
  - <xref:azure.mgmt.billingbenefits.models.Commitment>
methods:
- uid: azure.mgmt.billingbenefits.models.SavingsPlanOrderAliasModel.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.billingbenefits.models.SavingsPlanOrderAliasModel.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.billingbenefits.models.SavingsPlanOrderAliasModel.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.billingbenefits.models.SavingsPlanOrderAliasModel.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.billingbenefits.models.SavingsPlanOrderAliasModel.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.billingbenefits.models.SavingsPlanOrderAliasModel.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
