### YamlMime:PythonClass
uid: azure.mgmt.storage.v2021_01_01.models.BlobContainer
name: BlobContainer
fullName: azure.mgmt.storage.v2021_01_01.models.BlobContainer
module: azure.mgmt.storage.v2021_01_01.models
inheritances:
- azure.mgmt.storage.v2021_01_01.models._models_py3.AzureEntityResource
summary: 'Properties of the blob container, including Id, resource name, resource
  type, Etag.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'BlobContainer(*, default_encryption_scope: str | None = None, deny_encryption_scope_override:
    bool | None = None, public_access: str | _models.PublicAccess | None = None, metadata:
    Dict[str, str] | None = None, **kwargs: Any)'
  parameters:
  - name: default_encryption_scope
    description: 'Default the container to use specified encryption scope for

      all writes.'
    types:
    - <xref:str>
  - name: deny_encryption_scope_override
    description: 'Block override of encryption scope from the container

      default.'
    types:
    - <xref:bool>
  - name: public_access
    description: 'Specifies whether data in the container may be accessed publicly
      and

      the level of access. Known values are: "Container", "Blob", and "None".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.storage.v2021_01_01.models.PublicAccess>
  - name: metadata
    description: A name-value pair to associate with the container as metadata.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
variables:
- description: 'Fully qualified resource ID for the resource. Ex -

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: 'The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
    or

    "Microsoft.Storage/storageAccounts".'
  name: type
  types:
  - <xref:str>
- description: Resource Etag.
  name: etag
  types:
  - <xref:str>
- description: The version of the deleted blob container.
  name: version
  types:
  - <xref:str>
- description: Indicates whether the blob container was deleted.
  name: deleted
  types:
  - <xref:bool>
- description: Blob container deletion time.
  name: deleted_time
  types:
  - <xref:datetime.datetime>
- description: Remaining retention days for soft deleted blob container.
  name: remaining_retention_days
  types:
  - <xref:int>
- description: 'Default the container to use specified encryption scope for all

    writes.'
  name: default_encryption_scope
  types:
  - <xref:str>
- description: 'Block override of encryption scope from the container

    default.'
  name: deny_encryption_scope_override
  types:
  - <xref:bool>
- description: 'Specifies whether data in the container may be accessed publicly and
    the

    level of access. Known values are: "Container", "Blob", and "None".'
  name: public_access
  types:
  - <xref:str>
  - <xref:azure.mgmt.storage.v2021_01_01.models.PublicAccess>
- description: Returns the date and time the container was last modified.
  name: last_modified_time
  types:
  - <xref:datetime.datetime>
- description: 'The lease status of the container. Known values are: "Locked" and

    "Unlocked".'
  name: lease_status
  types:
  - <xref:str>
  - <xref:azure.mgmt.storage.v2021_01_01.models.LeaseStatus>
- description: 'Lease state of the container. Known values are: "Available", "Leased",

    "Expired", "Breaking", and "Broken".'
  name: lease_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.storage.v2021_01_01.models.LeaseState>
- description: 'Specifies whether the lease on a container is of infinite or fixed

    duration, only when the container is leased. Known values are: "Infinite" and
    "Fixed".'
  name: lease_duration
  types:
  - <xref:str>
  - <xref:azure.mgmt.storage.v2021_01_01.models.LeaseDuration>
- description: A name-value pair to associate with the container as metadata.
  name: metadata
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The ImmutabilityPolicy property of the container.
  name: immutability_policy
  types:
  - <xref:azure.mgmt.storage.v2021_01_01.models.ImmutabilityPolicyProperties>
- description: The LegalHold property of the container.
  name: legal_hold
  types:
  - <xref:azure.mgmt.storage.v2021_01_01.models.LegalHoldProperties>
- description: 'The hasLegalHold public property is set to true by SRP if there are
    at

    least one existing tag. The hasLegalHold public property is set to false by SRP
    if all existing

    legal hold tags are cleared out. There can be a maximum of 1000 blob containers
    with

    hasLegalHold=true for a given account.'
  name: has_legal_hold
  types:
  - <xref:bool>
- description: 'The hasImmutabilityPolicy public property is set to true by SRP

    if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy
    public

    property is set to false by SRP if ImmutabilityPolicy has not been created for
    this container.'
  name: has_immutability_policy
  types:
  - <xref:bool>
methods:
- uid: azure.mgmt.storage.v2021_01_01.models.BlobContainer.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.storage.v2021_01_01.models.BlobContainer.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.storage.v2021_01_01.models.BlobContainer.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.storage.v2021_01_01.models.BlobContainer.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.storage.v2021_01_01.models.BlobContainer.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.storage.v2021_01_01.models.BlobContainer.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
