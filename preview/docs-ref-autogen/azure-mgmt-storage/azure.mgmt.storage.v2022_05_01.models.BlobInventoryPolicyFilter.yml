### YamlMime:PythonClass
uid: azure.mgmt.storage.v2022_05_01.models.BlobInventoryPolicyFilter
name: BlobInventoryPolicyFilter
fullName: azure.mgmt.storage.v2022_05_01.models.BlobInventoryPolicyFilter
module: azure.mgmt.storage.v2022_05_01.models
inheritances:
- azure.mgmt.storage._serialization.Model
summary: 'An object that defines the blob inventory rule filter conditions. For ''Blob''

  definition.objectType all filter properties are applicable, ''blobTypes'' is required
  and others

  are optional. For ''Container'' definition.objectType only prefixMatch is applicable
  and is

  optional.'
constructor:
  syntax: 'BlobInventoryPolicyFilter(*, prefix_match: List[str] | None = None, exclude_prefix:
    List[str] | None = None, blob_types: List[str] | None = None, include_blob_versions:
    bool | None = None, include_snapshots: bool | None = None, include_deleted: bool
    | None = None, **kwargs: Any)'
  parameters:
  - name: prefix_match
    description: 'An array of strings with maximum 10 blob prefixes to be included
      in the

      inventory.'
    types:
    - <xref:azure.mgmt.storage.v2015_06_15.aio.operations.StorageAccountsOperations.list>[<xref:str>]
  - name: exclude_prefix
    description: 'An array of strings with maximum 10 blob prefixes to be excluded
      from

      the inventory.'
    types:
    - <xref:azure.mgmt.storage.v2015_06_15.aio.operations.StorageAccountsOperations.list>[<xref:str>]
  - name: blob_types
    description: 'An array of predefined enum values. Valid values include blockBlob,

      appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is
      required when

      definition.objectType property is set to ''Blob''.'
    types:
    - <xref:azure.mgmt.storage.v2015_06_15.aio.operations.StorageAccountsOperations.list>[<xref:str>]
  - name: include_blob_versions
    description: 'Includes blob versions in blob inventory when value is set to

      true. The definition.schemaFields values ''VersionId and IsCurrentVersion''
      are required if this

      property is set to true, else they must be excluded.'
    types:
    - <xref:bool>
  - name: include_snapshots
    description: 'Includes blob snapshots in blob inventory when value is set to

      true. The definition.schemaFields value ''Snapshot'' is required if this property
      is set to true,

      else it must be excluded.'
    types:
    - <xref:bool>
  - name: include_deleted
    description: 'For ''Container'' definition.objectType the definition.schemaFields

      must include ''Deleted, Version, DeletedTime and RemainingRetentionDays''. For
      ''Blob''

      definition.objectType and HNS enabled storage accounts the definition.schemaFields
      must include

      ''DeletionId, Deleted, DeletedTime and RemainingRetentionDays'' and for Hns
      disabled accounts the

      definition.schemaFields must include ''Deleted and RemainingRetentionDays'',
      else it must be

      excluded.'
    types:
    - <xref:bool>
variables:
- description: 'An array of strings with maximum 10 blob prefixes to be included in
    the

    inventory.'
  name: prefix_match
  types:
  - <xref:list>[<xref:str>]
- description: 'An array of strings with maximum 10 blob prefixes to be excluded from
    the

    inventory.'
  name: exclude_prefix
  types:
  - <xref:list>[<xref:str>]
- description: 'An array of predefined enum values. Valid values include blockBlob,

    appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required
    when

    definition.objectType property is set to ''Blob''.'
  name: blob_types
  types:
  - <xref:list>[<xref:str>]
- description: 'Includes blob versions in blob inventory when value is set to

    true. The definition.schemaFields values ''VersionId and IsCurrentVersion'' are
    required if this

    property is set to true, else they must be excluded.'
  name: include_blob_versions
  types:
  - <xref:bool>
- description: 'Includes blob snapshots in blob inventory when value is set to true.

    The definition.schemaFields value ''Snapshot'' is required if this property is
    set to true, else

    it must be excluded.'
  name: include_snapshots
  types:
  - <xref:bool>
- description: 'For ''Container'' definition.objectType the definition.schemaFields
    must

    include ''Deleted, Version, DeletedTime and RemainingRetentionDays''. For ''Blob''

    definition.objectType and HNS enabled storage accounts the definition.schemaFields
    must include

    ''DeletionId, Deleted, DeletedTime and RemainingRetentionDays'' and for Hns disabled
    accounts the

    definition.schemaFields must include ''Deleted and RemainingRetentionDays'', else
    it must be

    excluded.'
  name: include_deleted
  types:
  - <xref:bool>
methods:
- uid: azure.mgmt.storage.v2022_05_01.models.BlobInventoryPolicyFilter.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.storage.v2022_05_01.models.BlobInventoryPolicyFilter.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.storage.v2022_05_01.models.BlobInventoryPolicyFilter.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.storage.v2022_05_01.models.BlobInventoryPolicyFilter.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.storage.v2022_05_01.models.BlobInventoryPolicyFilter.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.storage.v2022_05_01.models.BlobInventoryPolicyFilter.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
