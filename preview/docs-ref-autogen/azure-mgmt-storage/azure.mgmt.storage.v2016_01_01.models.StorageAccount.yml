### YamlMime:PythonClass
uid: azure.mgmt.storage.v2016_01_01.models.StorageAccount
name: StorageAccount
fullName: azure.mgmt.storage.v2016_01_01.models.StorageAccount
module: azure.mgmt.storage.v2016_01_01.models
inheritances:
- azure.mgmt.storage.v2016_01_01.models._models_py3.Resource
summary: 'The storage account.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'StorageAccount(*, location: str | None = None, tags: Dict[str, str] | None
    = None, **kwargs: Any)'
  parameters:
  - name: location
    description: Resource location.
    types:
    - <xref:str>
  - name: tags
    description: 'Tags assigned to a resource; can be used for viewing and grouping
      a resource

      (across resource groups).'
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
variables:
- description: Resource Id.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: Resource location.
  name: location
  types:
  - <xref:str>
- description: 'Tags assigned to a resource; can be used for viewing and grouping
    a resource

    (across resource groups).'
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: Gets the SKU.
  name: sku
  types:
  - <xref:azure.mgmt.storage.v2016_01_01.models.Sku>
- description: 'Gets the Kind. Known values are: "Storage" and "BlobStorage".'
  name: kind
  types:
  - <xref:str>
  - <xref:azure.mgmt.storage.v2016_01_01.models.Kind>
- description: 'Gets the status of the storage account at the time the operation was

    called. Known values are: "Creating", "ResolvingDNS", and "Succeeded".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.storage.v2016_01_01.models.ProvisioningState>
- description: 'Gets the URLs that are used to perform a retrieval of a public blob,

    queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return
    the blob

    endpoint.'
  name: primary_endpoints
  types:
  - <xref:azure.mgmt.storage.v2016_01_01.models.Endpoints>
- description: Gets the location of the primary data center for the storage account.
  name: primary_location
  types:
  - <xref:str>
- description: 'Gets the status indicating whether the primary location of the storage

    account is available or unavailable. Known values are: "Available" and "Unavailable".'
  name: status_of_primary
  types:
  - <xref:str>
  - <xref:azure.mgmt.storage.v2016_01_01.models.AccountStatus>
- description: 'Gets the timestamp of the most recent instance of a failover to

    the secondary location. Only the most recent timestamp is retained. This element
    is not

    returned if there has never been a failover instance. Only available if the accountType
    is

    Standard_GRS or Standard_RAGRS.'
  name: last_geo_failover_time
  types:
  - <xref:datetime.datetime>
- description: 'Gets the location of the geo-replicated secondary for the storage

    account. Only available if the accountType is Standard_GRS or Standard_RAGRS.'
  name: secondary_location
  types:
  - <xref:str>
- description: 'Gets the status indicating whether the secondary location of the

    storage account is available or unavailable. Only available if the SKU name is
    Standard_GRS or

    Standard_RAGRS. Known values are: "Available" and "Unavailable".'
  name: status_of_secondary
  types:
  - <xref:str>
  - <xref:azure.mgmt.storage.v2016_01_01.models.AccountStatus>
- description: Gets the creation date and time of the storage account in UTC.
  name: creation_time
  types:
  - <xref:datetime.datetime>
- description: Gets the custom domain the user assigned to this storage account.
  name: custom_domain
  types:
  - <xref:azure.mgmt.storage.v2016_01_01.models.CustomDomain>
- description: 'Gets the URLs that are used to perform a retrieval of a public blob,

    queue, or table object from the secondary location of the storage account. Only
    available if

    the SKU name is Standard_RAGRS.'
  name: secondary_endpoints
  types:
  - <xref:azure.mgmt.storage.v2016_01_01.models.Endpoints>
- description: 'Gets the encryption settings on the account. If unspecified, the account
    is

    unencrypted.'
  name: encryption
  types:
  - <xref:azure.mgmt.storage.v2016_01_01.models.Encryption>
- description: 'Required for storage accounts where kind = BlobStorage. The access
    tier used

    for billing. Known values are: "Hot" and "Cool".'
  name: access_tier
  types:
  - <xref:str>
  - <xref:azure.mgmt.storage.v2016_01_01.models.AccessTier>
methods:
- uid: azure.mgmt.storage.v2016_01_01.models.StorageAccount.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.storage.v2016_01_01.models.StorageAccount.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.storage.v2016_01_01.models.StorageAccount.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.storage.v2016_01_01.models.StorageAccount.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.storage.v2016_01_01.models.StorageAccount.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.storage.v2016_01_01.models.StorageAccount.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
