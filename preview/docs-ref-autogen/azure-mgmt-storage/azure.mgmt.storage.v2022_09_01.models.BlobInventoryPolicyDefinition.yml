### YamlMime:PythonClass
uid: azure.mgmt.storage.v2022_09_01.models.BlobInventoryPolicyDefinition
name: BlobInventoryPolicyDefinition
fullName: azure.mgmt.storage.v2022_09_01.models.BlobInventoryPolicyDefinition
module: azure.mgmt.storage.v2022_09_01.models
inheritances:
- azure.mgmt.storage._serialization.Model
summary: 'An object that defines the blob inventory rule.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'BlobInventoryPolicyDefinition(*, format: str | _models.Format, schedule:
    str | _models.Schedule, object_type: str | _models.ObjectType, schema_fields:
    List[str], filters: _models.BlobInventoryPolicyFilter | None = None, **kwargs:
    Any)'
  parameters:
  - name: filters
    description: An object that defines the filter set.
    types:
    - <xref:azure.mgmt.storage.v2022_09_01.models.BlobInventoryPolicyFilter>
  - name: format
    description: 'This is a required field, it specifies the format for the inventory
      files.

      Required. Known values are: "Csv" and "Parquet".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.storage.v2022_09_01.models.Format>
  - name: schedule
    description: 'This is a required field. This field is used to schedule an inventory

      formation. Required. Known values are: "Daily" and "Weekly".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.storage.v2022_09_01.models.Schedule>
  - name: object_type
    description: 'This is a required field. This field specifies the scope of the
      inventory

      created either at the blob or container level. Required. Known values are: "Blob"
      and

      "Container".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.storage.v2022_09_01.models.ObjectType>
  - name: schema_fields
    description: 'This is a required field. This field specifies the fields and

      properties of the object to be included in the inventory. The Schema field value
      ''Name'' is

      always required. The valid values for this field for the ''Blob'' definition.objectType
      include

      ''Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType,
      AccessTier,

      AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner,
      Group,

      Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime,
      Tags, Etag,

      ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition,

      LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId,
      DeletedTime,

      RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode,
      LegalHold, CopyId,

      CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription,

      CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber,

      EncryptionScope, IncrementalCopy, TagCount''. For Blob object type schema field
      value

      ''DeletedTime'' is applicable only for Hns enabled accounts. The valid values
      for ''Container''

      definition.objectType include ''Name, Last-Modified, Metadata, LeaseStatus,
      LeaseState,

      LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope,

      DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted,
      Version,

      DeletedTime, RemainingRetentionDays''. Schema field values ''Expiry-Time, hdi_isfolder,
      Owner,

      Group, Permissions, Acl, DeletionId'' are valid only for Hns enabled accounts.Schema
      field

      values ''Tags, TagCount'' are only valid for Non-Hns accounts. Required.'
    types:
    - <xref:azure.mgmt.storage.v2015_06_15.aio.operations.StorageAccountsOperations.list>[<xref:str>]
variables:
- description: An object that defines the filter set.
  name: filters
  types:
  - <xref:azure.mgmt.storage.v2022_09_01.models.BlobInventoryPolicyFilter>
- description: 'This is a required field, it specifies the format for the inventory
    files.

    Required. Known values are: "Csv" and "Parquet".'
  name: format
  types:
  - <xref:str>
  - <xref:azure.mgmt.storage.v2022_09_01.models.Format>
- description: 'This is a required field. This field is used to schedule an inventory

    formation. Required. Known values are: "Daily" and "Weekly".'
  name: schedule
  types:
  - <xref:str>
  - <xref:azure.mgmt.storage.v2022_09_01.models.Schedule>
- description: 'This is a required field. This field specifies the scope of the inventory

    created either at the blob or container level. Required. Known values are: "Blob"
    and

    "Container".'
  name: object_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.storage.v2022_09_01.models.ObjectType>
- description: 'This is a required field. This field specifies the fields and properties

    of the object to be included in the inventory. The Schema field value ''Name''
    is always

    required. The valid values for this field for the ''Blob'' definition.objectType
    include ''Name,

    Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier,

    AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner,
    Group,

    Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime,
    Tags, Etag,

    ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition,

    LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId,
    DeletedTime,

    RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold,
    CopyId,

    CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription,

    CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber,

    EncryptionScope, IncrementalCopy, TagCount''. For Blob object type schema field
    value

    ''DeletedTime'' is applicable only for Hns enabled accounts. The valid values
    for ''Container''

    definition.objectType include ''Name, Last-Modified, Metadata, LeaseStatus, LeaseState,

    LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope,

    DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version,

    DeletedTime, RemainingRetentionDays''. Schema field values ''Expiry-Time, hdi_isfolder,
    Owner,

    Group, Permissions, Acl, DeletionId'' are valid only for Hns enabled accounts.Schema
    field

    values ''Tags, TagCount'' are only valid for Non-Hns accounts. Required.'
  name: schema_fields
  types:
  - <xref:list>[<xref:str>]
methods:
- uid: azure.mgmt.storage.v2022_09_01.models.BlobInventoryPolicyDefinition.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.storage.v2022_09_01.models.BlobInventoryPolicyDefinition.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.storage.v2022_09_01.models.BlobInventoryPolicyDefinition.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.storage.v2022_09_01.models.BlobInventoryPolicyDefinition.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.storage.v2022_09_01.models.BlobInventoryPolicyDefinition.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.storage.v2022_09_01.models.BlobInventoryPolicyDefinition.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
