### YamlMime:PythonClass
uid: azure.mgmt.keyvault.v2020_04_01_preview.models.ManagedHsmProperties
name: ManagedHsmProperties
fullName: azure.mgmt.keyvault.v2020_04_01_preview.models.ManagedHsmProperties
module: azure.mgmt.keyvault.v2020_04_01_preview.models
inheritances:
- azure.mgmt.keyvault._serialization.Model
summary: 'Properties of the managed HSM Pool.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'ManagedHsmProperties(*, tenant_id: str | None = None, initial_admin_object_ids:
    List[str] | None = None, enable_soft_delete: bool = True, soft_delete_retention_in_days:
    int = 90, enable_purge_protection: bool = True, create_mode: str | _models.CreateMode
    | None = None, **kwargs: Any)'
  parameters:
  - name: tenant_id
    description: 'The Azure Active Directory tenant ID that should be used for authenticating

      requests to the managed HSM pool.'
    types:
    - <xref:str>
  - name: initial_admin_object_ids
    description: 'Array of initial administrators object ids for this managed

      hsm pool.'
    types:
    - <xref:azure.mgmt.keyvault.v2016_10_01.aio.operations.Operations.list>[<xref:str>]
  - name: enable_soft_delete
    description: 'Property to specify whether the ''soft delete'' functionality is

      enabled for this managed HSM pool. If it''s not set to any value(true or false)
      when creating

      new managed HSM pool, it will be set to true by default. Once set to true, it
      cannot be

      reverted to false.'
    types:
    - <xref:bool>
  - name: soft_delete_retention_in_days
    description: 'softDelete data retention days. It accepts >=7 and

      <=90.'
    types:
    - <xref:int>
  - name: enable_purge_protection
    description: 'Property specifying whether protection against purge is

      enabled for this managed HSM pool. Setting this property to true activates protection
      against

      purge for this managed HSM pool and its content - only the Managed HSM service
      may initiate a

      hard, irrecoverable deletion. The setting is effective only if soft delete is
      also enabled.

      Enabling this functionality is irreversible.'
    types:
    - <xref:bool>
  - name: create_mode
    description: 'The create mode to indicate whether the resource is being created
      or is

      being recovered from a deleted resource. Known values are: "recover" and "default".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.keyvault.v2020_04_01_preview.models.CreateMode>
variables:
- description: 'The Azure Active Directory tenant ID that should be used for authenticating

    requests to the managed HSM pool.'
  name: tenant_id
  types:
  - <xref:str>
- description: 'Array of initial administrators object ids for this managed hsm

    pool.'
  name: initial_admin_object_ids
  types:
  - <xref:list>[<xref:str>]
- description: The URI of the managed hsm pool for performing operations on keys.
  name: hsm_uri
  types:
  - <xref:str>
- description: 'Property to specify whether the ''soft delete'' functionality is

    enabled for this managed HSM pool. If it''s not set to any value(true or false)
    when creating

    new managed HSM pool, it will be set to true by default. Once set to true, it
    cannot be

    reverted to false.'
  name: enable_soft_delete
  types:
  - <xref:bool>
- description: softDelete data retention days. It accepts >=7 and <=90.
  name: soft_delete_retention_in_days
  types:
  - <xref:int>
- description: 'Property specifying whether protection against purge is enabled

    for this managed HSM pool. Setting this property to true activates protection
    against purge for

    this managed HSM pool and its content - only the Managed HSM service may initiate
    a hard,

    irrecoverable deletion. The setting is effective only if soft delete is also enabled.
    Enabling

    this functionality is irreversible.'
  name: enable_purge_protection
  types:
  - <xref:bool>
- description: 'The create mode to indicate whether the resource is being created
    or is

    being recovered from a deleted resource. Known values are: "recover" and "default".'
  name: create_mode
  types:
  - <xref:str>
  - <xref:azure.mgmt.keyvault.v2020_04_01_preview.models.CreateMode>
- description: Resource Status Message.
  name: status_message
  types:
  - <xref:str>
- description: 'Provisioning state. Known values are: "Succeeded", "Provisioning",

    "Failed", "Updating", "Deleting", "Activated", "SecurityDomainRestore", and "Restoring".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.keyvault.v2020_04_01_preview.models.ProvisioningState>
methods:
- uid: azure.mgmt.keyvault.v2020_04_01_preview.models.ManagedHsmProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.keyvault.v2020_04_01_preview.models.ManagedHsmProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.keyvault.v2020_04_01_preview.models.ManagedHsmProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.keyvault.v2020_04_01_preview.models.ManagedHsmProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.keyvault.v2020_04_01_preview.models.ManagedHsmProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.keyvault.v2020_04_01_preview.models.ManagedHsmProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
