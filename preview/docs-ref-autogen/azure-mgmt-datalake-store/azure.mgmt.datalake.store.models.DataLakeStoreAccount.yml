### YamlMime:PythonClass
uid: azure.mgmt.datalake.store.models.DataLakeStoreAccount
name: DataLakeStoreAccount
fullName: azure.mgmt.datalake.store.models.DataLakeStoreAccount
module: azure.mgmt.datalake.store.models
inheritances:
- azure.mgmt.datalake.store.models._models_py3.Resource
summary: 'Data Lake Store account information.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'DataLakeStoreAccount(**kwargs: Any)'
variables:
- description: The resource identifier.
  name: id
  types:
  - <xref:str>
- description: The resource name.
  name: name
  types:
  - <xref:str>
- description: The resource type.
  name: type
  types:
  - <xref:str>
- description: The resource location.
  name: location
  types:
  - <xref:str>
- description: The resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The Key Vault encryption identity, if any.
  name: identity
  types:
  - <xref:azure.mgmt.datalake.store.models.EncryptionIdentity>
- description: The unique identifier associated with this Data Lake Store account.
  name: account_id
  types:
  - <xref:str>
- description: 'The provisioning status of the Data Lake Store account. Known values

    are: "Failed", "Creating", "Running", "Succeeded", "Patching", "Suspending", "Resuming",

    "Deleting", "Deleted", "Undeleting", and "Canceled".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.store.models.DataLakeStoreAccountStatus>
- description: 'The state of the Data Lake Store account. Known values are: "Active"
    and

    "Suspended".'
  name: state
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.store.models.DataLakeStoreAccountState>
- description: The account creation time.
  name: creation_time
  types:
  - <xref:datetime.datetime>
- description: The account last modified time.
  name: last_modified_time
  types:
  - <xref:datetime.datetime>
- description: The full CName endpoint for this account.
  name: endpoint
  types:
  - <xref:str>
- description: 'The default owner group for all new folders and files created in the
    Data

    Lake Store account.'
  name: default_group
  types:
  - <xref:str>
- description: The Key Vault encryption configuration.
  name: encryption_config
  types:
  - <xref:azure.mgmt.datalake.store.models.EncryptionConfig>
- description: 'The current state of encryption for this Data Lake Store account.
    Known

    values are: "Enabled" and "Disabled".'
  name: encryption_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.store.models.EncryptionState>
- description: 'The current state of encryption provisioning for this Data

    Lake Store account. Known values are: "Creating" and "Succeeded".'
  name: encryption_provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.store.models.EncryptionProvisioningState>
- description: The list of firewall rules associated with this Data Lake Store account.
  name: firewall_rules
  types:
  - <xref:list>[<xref:azure.mgmt.datalake.store.models.FirewallRule>]
- description: 'The list of virtual network rules associated with this Data Lake

    Store account.'
  name: virtual_network_rules
  types:
  - <xref:list>[<xref:azure.mgmt.datalake.store.models.VirtualNetworkRule>]
- description: 'The current state of the IP address firewall for this Data Lake Store

    account. Known values are: "Enabled" and "Disabled".'
  name: firewall_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.store.models.FirewallState>
- description: 'The current state of allowing or disallowing IPs originating

    within Azure through the firewall. If the firewall is disabled, this is not enforced.
    Known

    values are: "Enabled" and "Disabled".'
  name: firewall_allow_azure_ips
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.store.models.FirewallAllowAzureIpsState>
- description: 'The list of trusted identity providers associated with this Data

    Lake Store account.'
  name: trusted_id_providers
  types:
  - <xref:list>[<xref:azure.mgmt.datalake.store.models.TrustedIdProvider>]
- description: 'The current state of the trusted identity provider feature for

    this Data Lake Store account. Known values are: "Enabled" and "Disabled".'
  name: trusted_id_provider_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.store.models.TrustedIdProviderState>
- description: 'The commitment tier to use for next month. Known values are: "Consumption",

    "Commitment_1TB", "Commitment_10TB", "Commitment_100TB", "Commitment_500TB", "Commitment_1PB",

    and "Commitment_5PB".'
  name: new_tier
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.store.models.TierType>
- description: 'The commitment tier in use for the current month. Known values are:

    "Consumption", "Commitment_1TB", "Commitment_10TB", "Commitment_100TB", "Commitment_500TB",

    "Commitment_1PB", and "Commitment_5PB".'
  name: current_tier
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.store.models.TierType>
methods:
- uid: azure.mgmt.datalake.store.models.DataLakeStoreAccount.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.datalake.store.models.DataLakeStoreAccount.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.datalake.store.models.DataLakeStoreAccount.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.datalake.store.models.DataLakeStoreAccount.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.datalake.store.models.DataLakeStoreAccount.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.datalake.store.models.DataLakeStoreAccount.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
