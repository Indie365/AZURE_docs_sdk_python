### YamlMime:PythonClass
uid: azure.mgmt.datalake.store.models.UpdateDataLakeStoreAccountParameters
name: UpdateDataLakeStoreAccountParameters
fullName: azure.mgmt.datalake.store.models.UpdateDataLakeStoreAccountParameters
module: azure.mgmt.datalake.store.models
inheritances:
- azure.mgmt.datalake.store._serialization.Model
summary: Data Lake Store account information to update.
constructor:
  syntax: 'UpdateDataLakeStoreAccountParameters(*, tags: Dict[str, str] | None = None,
    default_group: str | None = None, encryption_config: _models.UpdateEncryptionConfig
    | None = None, firewall_rules: List[_models.UpdateFirewallRuleWithAccountParameters]
    | None = None, virtual_network_rules: List[_models.UpdateVirtualNetworkRuleWithAccountParameters]
    | None = None, firewall_state: str | _models.FirewallState | None = None, firewall_allow_azure_ips:
    str | _models.FirewallAllowAzureIpsState | None = None, trusted_id_providers:
    List[_models.UpdateTrustedIdProviderWithAccountParameters] | None = None, trusted_id_provider_state:
    str | _models.TrustedIdProviderState | None = None, new_tier: str | _models.TierType
    | None = None, **kwargs: Any)'
  parameters:
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: default_group
    description: 'The default owner group for all new folders and files created in
      the

      Data Lake Store account.'
    types:
    - <xref:str>
  - name: encryption_config
    description: 'Used for rotation of user managed Key Vault keys. Can only be used

      to rotate a user managed encryption Key Vault key.'
    types:
    - <xref:azure.mgmt.datalake.store.models.UpdateEncryptionConfig>
  - name: firewall_rules
    description: 'The list of firewall rules associated with this Data Lake Store

      account.'
    types:
    - <xref:azure.mgmt.datalake.store.aio.operations.AccountsOperations.list>[<xref:azure.mgmt.datalake.store.models.UpdateFirewallRuleWithAccountParameters>]
  - name: virtual_network_rules
    description: 'The list of virtual network rules associated with this Data

      Lake Store account.'
    types:
    - <xref:azure.mgmt.datalake.store.aio.operations.AccountsOperations.list>[<xref:azure.mgmt.datalake.store.models.UpdateVirtualNetworkRuleWithAccountParameters>]
  - name: firewall_state
    description: 'The current state of the IP address firewall for this Data Lake
      Store

      account. Disabling the firewall does not remove existing rules, they will just
      be ignored until

      the firewall is re-enabled. Known values are: "Enabled" and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.datalake.store.models.FirewallState>
  - name: firewall_allow_azure_ips
    description: 'The current state of allowing or disallowing IPs originating

      within Azure through the firewall. If the firewall is disabled, this is not
      enforced. Known

      values are: "Enabled" and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.datalake.store.models.FirewallAllowAzureIpsState>
  - name: trusted_id_providers
    description: 'The list of trusted identity providers associated with this Data

      Lake Store account.'
    types:
    - <xref:azure.mgmt.datalake.store.aio.operations.AccountsOperations.list>[<xref:azure.mgmt.datalake.store.models.UpdateTrustedIdProviderWithAccountParameters>]
  - name: trusted_id_provider_state
    description: 'The current state of the trusted identity provider feature

      for this Data Lake Store account. Disabling trusted identity provider functionality
      does not

      remove the providers, they will just be ignored until this feature is re-enabled.
      Known values

      are: "Enabled" and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.datalake.store.models.TrustedIdProviderState>
  - name: new_tier
    description: 'The commitment tier to use for next month. Known values are: "Consumption",

      "Commitment_1TB", "Commitment_10TB", "Commitment_100TB", "Commitment_500TB",
      "Commitment_1PB",

      and "Commitment_5PB".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.datalake.store.models.TierType>
variables:
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: 'The default owner group for all new folders and files created in the
    Data

    Lake Store account.'
  name: default_group
  types:
  - <xref:str>
- description: 'Used for rotation of user managed Key Vault keys. Can only be used
    to

    rotate a user managed encryption Key Vault key.'
  name: encryption_config
  types:
  - <xref:azure.mgmt.datalake.store.models.UpdateEncryptionConfig>
- description: The list of firewall rules associated with this Data Lake Store account.
  name: firewall_rules
  types:
  - <xref:list>[<xref:azure.mgmt.datalake.store.models.UpdateFirewallRuleWithAccountParameters>]
- description: 'The list of virtual network rules associated with this Data Lake

    Store account.'
  name: virtual_network_rules
  types:
  - <xref:list>[<xref:azure.mgmt.datalake.store.models.UpdateVirtualNetworkRuleWithAccountParameters>]
- description: 'The current state of the IP address firewall for this Data Lake Store

    account. Disabling the firewall does not remove existing rules, they will just
    be ignored until

    the firewall is re-enabled. Known values are: "Enabled" and "Disabled".'
  name: firewall_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.store.models.FirewallState>
- description: 'The current state of allowing or disallowing IPs originating

    within Azure through the firewall. If the firewall is disabled, this is not enforced.
    Known

    values are: "Enabled" and "Disabled".'
  name: firewall_allow_azure_ips
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.store.models.FirewallAllowAzureIpsState>
- description: 'The list of trusted identity providers associated with this Data

    Lake Store account.'
  name: trusted_id_providers
  types:
  - <xref:list>[<xref:azure.mgmt.datalake.store.models.UpdateTrustedIdProviderWithAccountParameters>]
- description: 'The current state of the trusted identity provider feature for

    this Data Lake Store account. Disabling trusted identity provider functionality
    does not remove

    the providers, they will just be ignored until this feature is re-enabled. Known
    values are:

    "Enabled" and "Disabled".'
  name: trusted_id_provider_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.store.models.TrustedIdProviderState>
- description: 'The commitment tier to use for next month. Known values are: "Consumption",

    "Commitment_1TB", "Commitment_10TB", "Commitment_100TB", "Commitment_500TB", "Commitment_1PB",

    and "Commitment_5PB".'
  name: new_tier
  types:
  - <xref:str>
  - <xref:azure.mgmt.datalake.store.models.TierType>
methods:
- uid: azure.mgmt.datalake.store.models.UpdateDataLakeStoreAccountParameters.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.datalake.store.models.UpdateDataLakeStoreAccountParameters.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.datalake.store.models.UpdateDataLakeStoreAccountParameters.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.datalake.store.models.UpdateDataLakeStoreAccountParameters.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.datalake.store.models.UpdateDataLakeStoreAccountParameters.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.datalake.store.models.UpdateDataLakeStoreAccountParameters.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
