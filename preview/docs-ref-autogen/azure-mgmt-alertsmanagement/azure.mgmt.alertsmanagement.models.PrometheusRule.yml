### YamlMime:PythonClass
uid: azure.mgmt.alertsmanagement.models.PrometheusRule
name: PrometheusRule
fullName: azure.mgmt.alertsmanagement.models.PrometheusRule
module: azure.mgmt.alertsmanagement.models
inheritances:
- azure.mgmt.alertsmanagement._serialization.Model
summary: 'PrometheusRule.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'PrometheusRule(*, expression: str, record: str | None = None, alert: str
    | None = None, enabled: bool | None = None, severity: int | None = None, for_property:
    str | None = None, labels: Dict[str, str] | None = None, annotations: Dict[str,
    str] | None = None, actions: List[_models.PrometheusRuleGroupAction] | None =
    None, resolve_configuration: _models.PrometheusRuleResolveConfiguration | None
    = None, **kwargs)'
  parameters:
  - name: record
    description: the name of the recording rule.
    types:
    - <xref:str>
  - name: alert
    description: the name of the alert rule.
    types:
    - <xref:str>
  - name: enabled
    description: the flag that indicates whether the Prometheus rule is enabled.
    types:
    - <xref:bool>
  - name: expression
    description: the expression to run for the rule. Required.
    types:
    - <xref:str>
  - name: severity
    description: the severity of the alerts fired by the rule. Only relevant for alerts.
    types:
    - <xref:int>
  - name: for_property
    description: 'the amount of time alert must be active before firing. Only relevant
      for

      alerts.'
    types:
    - <xref:str>
  - name: labels
    description: labels for rule group. Only relevant for alerts.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: annotations
    description: annotations for rule group. Only relevant for alerts.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: actions
    description: 'The array of actions that are performed when the alert rule becomes
      active,

      and when an alert condition is resolved. Only relevant for alerts.'
    types:
    - <xref:azure.mgmt.alertsmanagement.aio.operations.Operations.list>[<xref:azure.mgmt.alertsmanagement.models.PrometheusRuleGroupAction>]
  - name: resolve_configuration
    description: 'defines the configuration for resolving fired alerts. Only

      relevant for alerts.'
    types:
    - <xref:azure.mgmt.alertsmanagement.models.PrometheusRuleResolveConfiguration>
variables:
- description: the name of the recording rule.
  name: record
  types:
  - <xref:str>
- description: the name of the alert rule.
  name: alert
  types:
  - <xref:str>
- description: the flag that indicates whether the Prometheus rule is enabled.
  name: enabled
  types:
  - <xref:bool>
- description: the expression to run for the rule. Required.
  name: expression
  types:
  - <xref:str>
- description: the severity of the alerts fired by the rule. Only relevant for alerts.
  name: severity
  types:
  - <xref:int>
- description: 'the amount of time alert must be active before firing. Only relevant
    for

    alerts.'
  name: for_property
  types:
  - <xref:str>
- description: labels for rule group. Only relevant for alerts.
  name: labels
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: annotations for rule group. Only relevant for alerts.
  name: annotations
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: 'The array of actions that are performed when the alert rule becomes
    active, and

    when an alert condition is resolved. Only relevant for alerts.'
  name: actions
  types:
  - <xref:list>[<xref:azure.mgmt.alertsmanagement.models.PrometheusRuleGroupAction>]
- description: 'defines the configuration for resolving fired alerts. Only

    relevant for alerts.'
  name: resolve_configuration
  types:
  - <xref:azure.mgmt.alertsmanagement.models.PrometheusRuleResolveConfiguration>
methods:
- uid: azure.mgmt.alertsmanagement.models.PrometheusRule.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.alertsmanagement.models.PrometheusRule.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.alertsmanagement.models.PrometheusRule.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.alertsmanagement.models.PrometheusRule.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.alertsmanagement.models.PrometheusRule.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.alertsmanagement.models.PrometheusRule.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
