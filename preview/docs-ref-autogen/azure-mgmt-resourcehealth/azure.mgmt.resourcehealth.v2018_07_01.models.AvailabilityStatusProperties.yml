### YamlMime:PythonClass
uid: azure.mgmt.resourcehealth.v2018_07_01.models.AvailabilityStatusProperties
name: AvailabilityStatusProperties
fullName: azure.mgmt.resourcehealth.v2018_07_01.models.AvailabilityStatusProperties
module: azure.mgmt.resourcehealth.v2018_07_01.models
inheritances:
- azure.mgmt.resourcehealth._serialization.Model
summary: Properties of availability state.
constructor:
  syntax: 'AvailabilityStatusProperties(*, availability_state: str | _models.AvailabilityStateValues
    | None = None, summary: str | None = None, detailed_status: str | None = None,
    reason_type: str | None = None, root_cause_attribution_time: datetime | None =
    None, health_event_type: str | None = None, health_event_cause: str | None = None,
    health_event_category: str | None = None, health_event_id: str | None = None,
    resolution_eta: datetime | None = None, occurred_time: datetime | None = None,
    reason_chronicity: str | _models.ReasonChronicityTypes | None = None, reported_time:
    datetime | None = None, recently_resolved: _models.AvailabilityStatusPropertiesRecentlyResolved
    | None = None, recommended_actions: List[_models.RecommendedAction] | None = None,
    service_impacting_events: List[_models.ServiceImpactingEvent] | None = None, **kwargs:
    Any)'
  parameters:
  - name: availability_state
    description: 'Availability status of the resource. When it is null, this

      availabilityStatus object represents an availability impacting event. Known
      values are:

      "Available", "Unavailable", "Degraded", and "Unknown".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.resourcehealth.v2018_07_01.models.AvailabilityStateValues>
  - name: summary
    description: Summary description of the availability status.
    types:
    - <xref:str>
  - name: detailed_status
    description: Details of the availability status.
    types:
    - <xref:str>
  - name: reason_type
    description: 'When the resource''s availabilityState is Unavailable, it describes
      where

      the health impacting event was originated. Examples are planned, unplanned,
      user initiated or

      an outage etc.'
    types:
    - <xref:str>
  - name: root_cause_attribution_time
    description: 'When the resource''s availabilityState is Unavailable, it

      provides the Timestamp for when the health impacting event was received.'
    types:
    - <xref:datetime.datetime>
  - name: health_event_type
    description: 'In case of an availability impacting event, it describes when the

      health impacting event was originated. Examples are Lifecycle, Downtime, Fault
      Analysis etc.'
    types:
    - <xref:str>
  - name: health_event_cause
    description: 'In case of an availability impacting event, it describes where the

      health impacting event was originated. Examples are PlatformInitiated, UserInitiated
      etc.'
    types:
    - <xref:str>
  - name: health_event_category
    description: 'In case of an availability impacting event, it describes the

      category of a PlatformInitiated health impacting event. Examples are Planned,
      Unplanned etc.'
    types:
    - <xref:str>
  - name: health_event_id
    description: It is a unique Id that identifies the event.
    types:
    - <xref:str>
  - name: resolution_eta
    description: 'When the resource''s availabilityState is Unavailable and the

      reasonType is not User Initiated, it provides the date and time for when the
      issue is expected

      to be resolved.'
    types:
    - <xref:datetime.datetime>
  - name: occurred_time
    description: Timestamp for when last change in health status occurred.
    types:
    - <xref:datetime.datetime>
  - name: reason_chronicity
    description: 'Chronicity of the availability transition. Known values are:

      "Transient" and "Persistent".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.resourcehealth.v2018_07_01.models.ReasonChronicityTypes>
  - name: reported_time
    description: Timestamp for when the health was last checked.
    types:
    - <xref:datetime.datetime>
  - name: recently_resolved
    description: 'An annotation describing a change in the availabilityState to

      Available from Unavailable with a reasonType of type Unplanned.'
    types:
    - <xref:azure.mgmt.resourcehealth.v2018_07_01.models.AvailabilityStatusPropertiesRecentlyResolved>
  - name: recommended_actions
    description: 'Lists actions the user can take based on the current

      availabilityState of the resource.'
    types:
    - <xref:azure.mgmt.resourcehealth.v2015_01_01.aio.operations.AvailabilityStatusesOperations.list>[<xref:azure.mgmt.resourcehealth.v2018_07_01.models.RecommendedAction>]
  - name: service_impacting_events
    description: 'Lists the service impacting events that may be affecting the

      health of the resource.'
    types:
    - <xref:azure.mgmt.resourcehealth.v2015_01_01.aio.operations.AvailabilityStatusesOperations.list>[<xref:azure.mgmt.resourcehealth.v2018_07_01.models.ServiceImpactingEvent>]
variables:
- description: 'Availability status of the resource. When it is null, this

    availabilityStatus object represents an availability impacting event. Known values
    are:

    "Available", "Unavailable", "Degraded", and "Unknown".'
  name: availability_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.resourcehealth.v2018_07_01.models.AvailabilityStateValues>
- description: Summary description of the availability status.
  name: summary
  types:
  - <xref:str>
- description: Details of the availability status.
  name: detailed_status
  types:
  - <xref:str>
- description: 'When the resource''s availabilityState is Unavailable, it describes
    where the

    health impacting event was originated. Examples are planned, unplanned, user initiated
    or an

    outage etc.'
  name: reason_type
  types:
  - <xref:str>
- description: 'When the resource''s availabilityState is Unavailable, it

    provides the Timestamp for when the health impacting event was received.'
  name: root_cause_attribution_time
  types:
  - <xref:datetime.datetime>
- description: 'In case of an availability impacting event, it describes when the

    health impacting event was originated. Examples are Lifecycle, Downtime, Fault
    Analysis etc.'
  name: health_event_type
  types:
  - <xref:str>
- description: 'In case of an availability impacting event, it describes where the

    health impacting event was originated. Examples are PlatformInitiated, UserInitiated
    etc.'
  name: health_event_cause
  types:
  - <xref:str>
- description: 'In case of an availability impacting event, it describes the

    category of a PlatformInitiated health impacting event. Examples are Planned,
    Unplanned etc.'
  name: health_event_category
  types:
  - <xref:str>
- description: It is a unique Id that identifies the event.
  name: health_event_id
  types:
  - <xref:str>
- description: 'When the resource''s availabilityState is Unavailable and the reasonType

    is not User Initiated, it provides the date and time for when the issue is expected
    to be

    resolved.'
  name: resolution_eta
  types:
  - <xref:datetime.datetime>
- description: Timestamp for when last change in health status occurred.
  name: occurred_time
  types:
  - <xref:datetime.datetime>
- description: 'Chronicity of the availability transition. Known values are:

    "Transient" and "Persistent".'
  name: reason_chronicity
  types:
  - <xref:str>
  - <xref:azure.mgmt.resourcehealth.v2018_07_01.models.ReasonChronicityTypes>
- description: Timestamp for when the health was last checked.
  name: reported_time
  types:
  - <xref:datetime.datetime>
- description: 'An annotation describing a change in the availabilityState to

    Available from Unavailable with a reasonType of type Unplanned.'
  name: recently_resolved
  types:
  - <xref:azure.mgmt.resourcehealth.v2018_07_01.models.AvailabilityStatusPropertiesRecentlyResolved>
- description: 'Lists actions the user can take based on the current

    availabilityState of the resource.'
  name: recommended_actions
  types:
  - <xref:list>[<xref:azure.mgmt.resourcehealth.v2018_07_01.models.RecommendedAction>]
- description: 'Lists the service impacting events that may be affecting the

    health of the resource.'
  name: service_impacting_events
  types:
  - <xref:list>[<xref:azure.mgmt.resourcehealth.v2018_07_01.models.ServiceImpactingEvent>]
methods:
- uid: azure.mgmt.resourcehealth.v2018_07_01.models.AvailabilityStatusProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.resourcehealth.v2018_07_01.models.AvailabilityStatusProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.resourcehealth.v2018_07_01.models.AvailabilityStatusProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.resourcehealth.v2018_07_01.models.AvailabilityStatusProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.resourcehealth.v2018_07_01.models.AvailabilityStatusProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.resourcehealth.v2018_07_01.models.AvailabilityStatusProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
