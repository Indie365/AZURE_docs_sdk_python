### YamlMime:PythonClass
uid: azure.mgmt.devtestlabs.models.Policy
name: Policy
fullName: azure.mgmt.devtestlabs.models.Policy
module: azure.mgmt.devtestlabs.models
inheritances:
- azure.mgmt.devtestlabs.models._models_py3.Resource
summary: 'A Policy.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'Policy(*, location: str | None = None, tags: Dict[str, str] | None = None,
    description: str | None = None, status: str | _models.PolicyStatus | None = None,
    fact_name: str | _models.PolicyFactName | None = None, fact_data: str | None =
    None, threshold: str | None = None, evaluator_type: str | _models.PolicyEvaluatorType
    | None = None, **kwargs)'
  parameters:
  - name: location
    description: The location of the resource.
    types:
    - <xref:str>
  - name: tags
    description: The tags of the resource.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: description
    description: The description of the policy.
    types:
    - <xref:str>
  - name: status
    description: 'The status of the policy. Known values are: "Enabled" and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.devtestlabs.models.PolicyStatus>
  - name: fact_name
    description: 'The fact name of the policy (e.g. LabVmCount, LabVmSize,

      MaxVmsAllowedPerLab, etc. Known values are: "UserOwnedLabVmCount",

      "UserOwnedLabPremiumVmCount", "LabVmCount", "LabPremiumVmCount", "LabVmSize",
      "GalleryImage",

      "UserOwnedLabVmCountInSubnet", "LabTargetCost", "EnvironmentTemplate", and

      "ScheduleEditPermission".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.devtestlabs.models.PolicyFactName>
  - name: fact_data
    description: The fact data of the policy.
    types:
    - <xref:str>
  - name: threshold
    description: 'The threshold of the policy (i.e. a number for MaxValuePolicy, and
      a JSON

      array of values for AllowedValuesPolicy).'
    types:
    - <xref:str>
  - name: evaluator_type
    description: 'The evaluator type of the policy (i.e. AllowedValuesPolicy,

      MaxValuePolicy). Known values are: "AllowedValuesPolicy" and "MaxValuePolicy".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.devtestlabs.models.PolicyEvaluatorType>
variables:
- description: The identifier of the resource.
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: The type of the resource.
  name: type
  types:
  - <xref:str>
- description: The location of the resource.
  name: location
  types:
  - <xref:str>
- description: The tags of the resource.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The description of the policy.
  name: description
  types:
  - <xref:str>
- description: 'The status of the policy. Known values are: "Enabled" and "Disabled".'
  name: status
  types:
  - <xref:str>
  - <xref:azure.mgmt.devtestlabs.models.PolicyStatus>
- description: 'The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab,

    etc. Known values are: "UserOwnedLabVmCount", "UserOwnedLabPremiumVmCount", "LabVmCount",

    "LabPremiumVmCount", "LabVmSize", "GalleryImage", "UserOwnedLabVmCountInSubnet",

    "LabTargetCost", "EnvironmentTemplate", and "ScheduleEditPermission".'
  name: fact_name
  types:
  - <xref:str>
  - <xref:azure.mgmt.devtestlabs.models.PolicyFactName>
- description: The fact data of the policy.
  name: fact_data
  types:
  - <xref:str>
- description: 'The threshold of the policy (i.e. a number for MaxValuePolicy, and
    a JSON

    array of values for AllowedValuesPolicy).'
  name: threshold
  types:
  - <xref:str>
- description: 'The evaluator type of the policy (i.e. AllowedValuesPolicy,

    MaxValuePolicy). Known values are: "AllowedValuesPolicy" and "MaxValuePolicy".'
  name: evaluator_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.devtestlabs.models.PolicyEvaluatorType>
- description: The creation date of the policy.
  name: created_date
  types:
  - <xref:datetime.datetime>
- description: The provisioning status of the resource.
  name: provisioning_state
  types:
  - <xref:str>
- description: The unique immutable identifier of a resource (Guid).
  name: unique_identifier
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.devtestlabs.models.Policy.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.devtestlabs.models.Policy.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.devtestlabs.models.Policy.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.devtestlabs.models.Policy.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.devtestlabs.models.Policy.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.devtestlabs.models.Policy.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
