### YamlMime:PythonClass
uid: azure.mgmt.eventgrid.models.EventSubscription
name: EventSubscription
fullName: azure.mgmt.eventgrid.models.EventSubscription
module: azure.mgmt.eventgrid.models
inheritances:
- azure.mgmt.eventgrid.models._models_py3.Resource
summary: 'Event Subscription.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'EventSubscription(*, destination: _models.EventSubscriptionDestination
    | None = None, delivery_with_resource_identity: _models.DeliveryWithResourceIdentity
    | None = None, filter: _models.EventSubscriptionFilter | None = None, labels:
    List[str] | None = None, expiration_time_utc: datetime | None = None, event_delivery_schema:
    str | _models.EventDeliverySchema | None = None, retry_policy: _models.RetryPolicy
    | None = None, dead_letter_destination: _models.DeadLetterDestination | None =
    None, dead_letter_with_resource_identity: _models.DeadLetterWithResourceIdentity
    | None = None, **kwargs)'
  parameters:
  - name: destination
    description: 'Information about the destination where events have to be delivered
      for

      the event subscription.

      Uses Azure Event Grid''s identity to acquire the authentication tokens being
      used during

      delivery / dead-lettering.'
    types:
    - <xref:azure.mgmt.eventgrid.models.EventSubscriptionDestination>
  - name: delivery_with_resource_identity
    description: 'Information about the destination where events have

      to be delivered for the event subscription.

      Uses the managed identity setup on the parent resource (namely, topic or domain)
      to acquire

      the authentication tokens being used during delivery / dead-lettering.'
    types:
    - <xref:azure.mgmt.eventgrid.models.DeliveryWithResourceIdentity>
  - name: filter
    description: Information about the filter for the event subscription.
    types:
    - <xref:azure.mgmt.eventgrid.models.EventSubscriptionFilter>
  - name: labels
    description: List of user defined labels.
    types:
    - <xref:azure.mgmt.eventgrid.aio.operations.DomainEventSubscriptionsOperations.list>[<xref:str>]
  - name: expiration_time_utc
    description: Expiration time of the event subscription.
    types:
    - <xref:datetime.datetime>
  - name: event_delivery_schema
    description: 'The event delivery schema for the event subscription. Known

      values are: "EventGridSchema", "CustomInputSchema", and "CloudEventSchemaV1_0".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.eventgrid.models.EventDeliverySchema>
  - name: retry_policy
    description: 'The retry policy for events. This can be used to configure maximum

      number of delivery attempts and time to live for events.'
    types:
    - <xref:azure.mgmt.eventgrid.models.RetryPolicy>
  - name: dead_letter_destination
    description: 'The dead letter destination of the event subscription. Any

      event that cannot be delivered to its'' destination is sent to the dead letter
      destination.

      Uses Azure Event Grid''s identity to acquire the authentication tokens being
      used during

      delivery / dead-lettering.'
    types:
    - <xref:azure.mgmt.eventgrid.models.DeadLetterDestination>
  - name: dead_letter_with_resource_identity
    description: 'The dead letter destination of the event

      subscription. Any event that cannot be delivered to its'' destination is sent
      to the dead letter

      destination.

      Uses the managed identity setup on the parent resource (namely, topic or domain)
      to acquire

      the authentication tokens being used during delivery / dead-lettering.'
    types:
    - <xref:azure.mgmt.eventgrid.models.DeadLetterWithResourceIdentity>
variables:
- description: Fully qualified identifier of the resource.
  name: id
  types:
  - <xref:str>
- description: Name of the resource.
  name: name
  types:
  - <xref:str>
- description: Type of the resource.
  name: type
  types:
  - <xref:str>
- description: The system metadata relating to Event Subscription resource.
  name: system_data
  types:
  - <xref:azure.mgmt.eventgrid.models.SystemData>
- description: Name of the topic of the event subscription.
  name: topic
  types:
  - <xref:str>
- description: 'Provisioning state of the event subscription. Known values are:

    "Creating", "Updating", "Deleting", "Succeeded", "Canceled", "Failed", and

    "AwaitingManualAction".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.eventgrid.models.EventSubscriptionProvisioningState>
- description: 'Information about the destination where events have to be delivered
    for the

    event subscription.

    Uses Azure Event Grid''s identity to acquire the authentication tokens being used
    during

    delivery / dead-lettering.'
  name: destination
  types:
  - <xref:azure.mgmt.eventgrid.models.EventSubscriptionDestination>
- description: 'Information about the destination where events have to

    be delivered for the event subscription.

    Uses the managed identity setup on the parent resource (namely, topic or domain)
    to acquire

    the authentication tokens being used during delivery / dead-lettering.'
  name: delivery_with_resource_identity
  types:
  - <xref:azure.mgmt.eventgrid.models.DeliveryWithResourceIdentity>
- description: Information about the filter for the event subscription.
  name: filter
  types:
  - <xref:azure.mgmt.eventgrid.models.EventSubscriptionFilter>
- description: List of user defined labels.
  name: labels
  types:
  - <xref:list>[<xref:str>]
- description: Expiration time of the event subscription.
  name: expiration_time_utc
  types:
  - <xref:datetime.datetime>
- description: 'The event delivery schema for the event subscription. Known values

    are: "EventGridSchema", "CustomInputSchema", and "CloudEventSchemaV1_0".'
  name: event_delivery_schema
  types:
  - <xref:str>
  - <xref:azure.mgmt.eventgrid.models.EventDeliverySchema>
- description: 'The retry policy for events. This can be used to configure maximum
    number

    of delivery attempts and time to live for events.'
  name: retry_policy
  types:
  - <xref:azure.mgmt.eventgrid.models.RetryPolicy>
- description: 'The dead letter destination of the event subscription. Any event

    that cannot be delivered to its'' destination is sent to the dead letter destination.

    Uses Azure Event Grid''s identity to acquire the authentication tokens being used
    during

    delivery / dead-lettering.'
  name: dead_letter_destination
  types:
  - <xref:azure.mgmt.eventgrid.models.DeadLetterDestination>
- description: 'The dead letter destination of the event

    subscription. Any event that cannot be delivered to its'' destination is sent
    to the dead letter

    destination.

    Uses the managed identity setup on the parent resource (namely, topic or domain)
    to acquire

    the authentication tokens being used during delivery / dead-lettering.'
  name: dead_letter_with_resource_identity
  types:
  - <xref:azure.mgmt.eventgrid.models.DeadLetterWithResourceIdentity>
methods:
- uid: azure.mgmt.eventgrid.models.EventSubscription.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.eventgrid.models.EventSubscription.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.eventgrid.models.EventSubscription.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.eventgrid.models.EventSubscription.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.eventgrid.models.EventSubscription.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.eventgrid.models.EventSubscription.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
