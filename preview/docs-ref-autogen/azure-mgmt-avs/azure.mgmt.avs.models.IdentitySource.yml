### YamlMime:PythonClass
uid: azure.mgmt.avs.models.IdentitySource
name: IdentitySource
fullName: azure.mgmt.avs.models.IdentitySource
module: azure.mgmt.avs.models
inheritances:
- azure.mgmt.avs._serialization.Model
summary: vCenter Single Sign On Identity Source.
constructor:
  syntax: 'IdentitySource(*, name: str | None = None, alias: str | None = None, domain:
    str | None = None, base_user_dn: str | None = None, base_group_dn: str | None
    = None, primary_server: str | None = None, secondary_server: str | None = None,
    ssl: str | _models.SslEnum | None = None, username: str | None = None, password:
    str | None = None, **kwargs)'
  parameters:
  - name: name
    description: The name of the identity source.
    types:
    - <xref:str>
  - name: alias
    description: The domain's NetBIOS name.
    types:
    - <xref:str>
  - name: domain
    description: The domain's dns name.
    types:
    - <xref:str>
  - name: base_user_dn
    description: The base distinguished name for users.
    types:
    - <xref:str>
  - name: base_group_dn
    description: The base distinguished name for groups.
    types:
    - <xref:str>
  - name: primary_server
    description: Primary server URL.
    types:
    - <xref:str>
  - name: secondary_server
    description: Secondary server URL.
    types:
    - <xref:str>
  - name: ssl
    description: 'Protect LDAP communication using SSL certificate (LDAPS). Known
      values are:

      "Enabled" and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.avs.models.SslEnum>
  - name: username
    description: 'The ID of an Active Directory user with a minimum of read-only access
      to

      Base DN for users and group.'
    types:
    - <xref:str>
  - name: password
    description: 'The password of the Active Directory user with a minimum of read-only
      access

      to Base DN for users and groups.'
    types:
    - <xref:str>
variables:
- description: The name of the identity source.
  name: name
  types:
  - <xref:str>
- description: The domain's NetBIOS name.
  name: alias
  types:
  - <xref:str>
- description: The domain's dns name.
  name: domain
  types:
  - <xref:str>
- description: The base distinguished name for users.
  name: base_user_dn
  types:
  - <xref:str>
- description: The base distinguished name for groups.
  name: base_group_dn
  types:
  - <xref:str>
- description: Primary server URL.
  name: primary_server
  types:
  - <xref:str>
- description: Secondary server URL.
  name: secondary_server
  types:
  - <xref:str>
- description: 'Protect LDAP communication using SSL certificate (LDAPS). Known values
    are:

    "Enabled" and "Disabled".'
  name: ssl
  types:
  - <xref:str>
  - <xref:azure.mgmt.avs.models.SslEnum>
- description: 'The ID of an Active Directory user with a minimum of read-only access
    to Base

    DN for users and group.'
  name: username
  types:
  - <xref:str>
- description: 'The password of the Active Directory user with a minimum of read-only
    access to

    Base DN for users and groups.'
  name: password
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.avs.models.IdentitySource.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.avs.models.IdentitySource.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.avs.models.IdentitySource.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.avs.models.IdentitySource.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.avs.models.IdentitySource.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.avs.models.IdentitySource.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
