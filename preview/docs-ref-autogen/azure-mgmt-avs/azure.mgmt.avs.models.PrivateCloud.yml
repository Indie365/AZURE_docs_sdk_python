### YamlMime:PythonClass
uid: azure.mgmt.avs.models.PrivateCloud
name: PrivateCloud
fullName: azure.mgmt.avs.models.PrivateCloud
module: azure.mgmt.avs.models
inheritances:
- azure.mgmt.avs.models._models_py3.TrackedResource
summary: 'A private cloud resource.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'PrivateCloud(*, sku: _models.Sku, location: str | None = None, tags: Dict[str,
    str] | None = None, identity: _models.PrivateCloudIdentity | None = None, management_cluster:
    _models.ManagementCluster | None = None, internet: str | _models.InternetEnum
    = ''Disabled'', identity_sources: List[_models.IdentitySource] | None = None,
    availability: _models.AvailabilityProperties | None = None, encryption: _models.Encryption
    | None = None, circuit: _models.Circuit | None = None, network_block: str | None
    = None, vcenter_password: str | None = None, nsxt_password: str | None = None,
    secondary_circuit: _models.Circuit | None = None, **kwargs)'
  parameters:
  - name: location
    description: Resource location.
    types:
    - <xref:str>
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: sku
    description: The private cloud SKU. Required.
    types:
    - <xref:azure.mgmt.avs.models.Sku>
  - name: identity
    description: The identity of the private cloud, if configured.
    types:
    - <xref:azure.mgmt.avs.models.PrivateCloudIdentity>
  - name: management_cluster
    description: The default cluster used for management.
    types:
    - <xref:azure.mgmt.avs.models.ManagementCluster>
  - name: internet
    description: 'Connectivity to internet is enabled or disabled. Known values are:
      "Enabled"

      and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.avs.models.InternetEnum>
  - name: identity_sources
    description: vCenter Single Sign On Identity Sources.
    types:
    - <xref:azure.mgmt.avs.aio.operations.AddonsOperations.list>[<xref:azure.mgmt.avs.models.IdentitySource>]
  - name: availability
    description: 'Properties describing how the cloud is distributed across availability

      zones.'
    types:
    - <xref:azure.mgmt.avs.models.AvailabilityProperties>
  - name: encryption
    description: Customer managed key encryption, can be enabled or disabled.
    types:
    - <xref:azure.mgmt.avs.models.Encryption>
  - name: circuit
    description: An ExpressRoute Circuit.
    types:
    - <xref:azure.mgmt.avs.models.Circuit>
  - name: network_block
    description: 'The block of addresses should be unique across VNet in your

      subscription as well as on-premise. Make sure the CIDR format is conformed to
      (A.B.C.D/X) where

      A,B,C,D are between 0 and 255, and X is between 0 and 22.'
    types:
    - <xref:str>
  - name: vcenter_password
    description: 'Optionally, set the vCenter admin password when the private cloud
      is

      created.'
    types:
    - <xref:str>
  - name: nsxt_password
    description: 'Optionally, set the NSX-T Manager password when the private cloud
      is

      created.'
    types:
    - <xref:str>
  - name: secondary_circuit
    description: 'A secondary expressRoute circuit from a separate AZ. Only present

      in a stretched private cloud.'
    types:
    - <xref:azure.mgmt.avs.models.Circuit>
variables:
- description: Resource ID.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: Resource location.
  name: location
  types:
  - <xref:str>
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The private cloud SKU. Required.
  name: sku
  types:
  - <xref:azure.mgmt.avs.models.Sku>
- description: The identity of the private cloud, if configured.
  name: identity
  types:
  - <xref:azure.mgmt.avs.models.PrivateCloudIdentity>
- description: The default cluster used for management.
  name: management_cluster
  types:
  - <xref:azure.mgmt.avs.models.ManagementCluster>
- description: 'Connectivity to internet is enabled or disabled. Known values are:
    "Enabled"

    and "Disabled".'
  name: internet
  types:
  - <xref:str>
  - <xref:azure.mgmt.avs.models.InternetEnum>
- description: vCenter Single Sign On Identity Sources.
  name: identity_sources
  types:
  - <xref:list>[<xref:azure.mgmt.avs.models.IdentitySource>]
- description: 'Properties describing how the cloud is distributed across availability

    zones.'
  name: availability
  types:
  - <xref:azure.mgmt.avs.models.AvailabilityProperties>
- description: Customer managed key encryption, can be enabled or disabled.
  name: encryption
  types:
  - <xref:azure.mgmt.avs.models.Encryption>
- description: 'The provisioning state. Known values are: "Succeeded", "Failed",

    "Cancelled", "Pending", "Building", "Deleting", "Updating", and "Canceled".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.avs.models.PrivateCloudProvisioningState>
- description: An ExpressRoute Circuit.
  name: circuit
  types:
  - <xref:azure.mgmt.avs.models.Circuit>
- description: The endpoints.
  name: endpoints
  types:
  - <xref:azure.mgmt.avs.models.Endpoints>
- description: 'The block of addresses should be unique across VNet in your subscription

    as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where
    A,B,C,D are

    between 0 and 255, and X is between 0 and 22.'
  name: network_block
  types:
  - <xref:str>
- description: Network used to access vCenter Server and NSX-T Manager.
  name: management_network
  types:
  - <xref:str>
- description: 'Used for virtual machine cold migration, cloning, and snapshot

    migration.'
  name: provisioning_network
  types:
  - <xref:str>
- description: Used for live migration of virtual machines.
  name: vmotion_network
  types:
  - <xref:str>
- description: 'Optionally, set the vCenter admin password when the private cloud
    is

    created.'
  name: vcenter_password
  types:
  - <xref:str>
- description: 'Optionally, set the NSX-T Manager password when the private cloud
    is

    created.'
  name: nsxt_password
  types:
  - <xref:str>
- description: Thumbprint of the vCenter Server SSL certificate.
  name: vcenter_certificate_thumbprint
  types:
  - <xref:str>
- description: Thumbprint of the NSX-T Manager SSL certificate.
  name: nsxt_certificate_thumbprint
  types:
  - <xref:str>
- description: Array of cloud link IDs from other clouds that connect to this one.
  name: external_cloud_links
  types:
  - <xref:list>[<xref:str>]
- description: 'A secondary expressRoute circuit from a separate AZ. Only present
    in a

    stretched private cloud.'
  name: secondary_circuit
  types:
  - <xref:azure.mgmt.avs.models.Circuit>
- description: 'Flag to indicate whether the private cloud has the quota for

    provisioned NSX Public IP count raised from 64 to 1024. Known values are: "Enabled"
    and

    "Disabled".'
  name: nsx_public_ip_quota_raised
  types:
  - <xref:str>
  - <xref:azure.mgmt.avs.models.NsxPublicIpQuotaRaisedEnum>
methods:
- uid: azure.mgmt.avs.models.PrivateCloud.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.avs.models.PrivateCloud.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.avs.models.PrivateCloud.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.avs.models.PrivateCloud.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.avs.models.PrivateCloud.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.avs.models.PrivateCloud.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
