### YamlMime:PythonClass
uid: azure.mgmt.machinelearningcompute.models.OperationalizationCluster
name: OperationalizationCluster
fullName: azure.mgmt.machinelearningcompute.models.OperationalizationCluster
module: azure.mgmt.machinelearningcompute.models
inheritances:
- azure.mgmt.machinelearningcompute.models._models_py3.Resource
summary: 'Instance of an Azure ML Operationalization Cluster resource.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'OperationalizationCluster(*, location: str, tags: Dict[str, str] | None
    = None, description: str | None = None, cluster_type: str | _models.ClusterType
    | None = None, storage_account: _models.StorageAccountProperties | None = None,
    container_registry: _models.ContainerRegistryProperties | None = None, container_service:
    _models.AcsClusterProperties | None = None, app_insights: _models.AppInsightsProperties
    | None = None, global_service_configuration: _models.GlobalServiceConfiguration
    | None = None, **kwargs)'
  parameters:
  - name: location
    description: Specifies the location of the resource. Required.
    types:
    - <xref:str>
  - name: tags
    description: Contains resource tags defined as key/value pairs.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: description
    description: The description of the cluster.
    types:
    - <xref:str>
  - name: cluster_type
    description: 'The cluster type. Known values are: "ACS" and "Local".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.machinelearningcompute.models.ClusterType>
  - name: storage_account
    description: Storage Account properties.
    types:
    - <xref:azure.mgmt.machinelearningcompute.models.StorageAccountProperties>
  - name: container_registry
    description: Container Registry properties.
    types:
    - <xref:azure.mgmt.machinelearningcompute.models.ContainerRegistryProperties>
  - name: container_service
    description: Parameters for the Azure Container Service cluster.
    types:
    - <xref:azure.mgmt.machinelearningcompute.models.AcsClusterProperties>
  - name: app_insights
    description: AppInsights configuration.
    types:
    - <xref:azure.mgmt.machinelearningcompute.models.AppInsightsProperties>
  - name: global_service_configuration
    description: 'Contains global configuration for the web services in

      the cluster.'
    types:
    - <xref:azure.mgmt.machinelearningcompute.models.GlobalServiceConfiguration>
variables:
- description: Specifies the resource ID.
  name: id
  types:
  - <xref:str>
- description: Specifies the name of the resource.
  name: name
  types:
  - <xref:str>
- description: Specifies the location of the resource. Required.
  name: location
  types:
  - <xref:str>
- description: Specifies the type of the resource.
  name: type
  types:
  - <xref:str>
- description: Contains resource tags defined as key/value pairs.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The description of the cluster.
  name: description
  types:
  - <xref:str>
- description: The date and time when the cluster was created.
  name: created_on
  types:
  - <xref:datetime.datetime>
- description: The date and time when the cluster was last modified.
  name: modified_on
  types:
  - <xref:datetime.datetime>
- description: 'The provision state of the cluster. Valid values are Unknown,

    Updating, Provisioning, Succeeded, and Failed. Known values are: "Unknown", "Updating",

    "Creating", "Deleting", "Succeeded", "Failed", and "Canceled".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.machinelearningcompute.models.OperationStatus>
- description: List of provisioning errors reported by the resource provider.
  name: provisioning_errors
  types:
  - <xref:list>[<xref:azure.mgmt.machinelearningcompute.models.ErrorResponseWrapper>]
- description: 'The cluster type. Known values are: "ACS" and "Local".'
  name: cluster_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.machinelearningcompute.models.ClusterType>
- description: Storage Account properties.
  name: storage_account
  types:
  - <xref:azure.mgmt.machinelearningcompute.models.StorageAccountProperties>
- description: Container Registry properties.
  name: container_registry
  types:
  - <xref:azure.mgmt.machinelearningcompute.models.ContainerRegistryProperties>
- description: Parameters for the Azure Container Service cluster.
  name: container_service
  types:
  - <xref:azure.mgmt.machinelearningcompute.models.AcsClusterProperties>
- description: AppInsights configuration.
  name: app_insights
  types:
  - <xref:azure.mgmt.machinelearningcompute.models.AppInsightsProperties>
- description: 'Contains global configuration for the web services in the

    cluster.'
  name: global_service_configuration
  types:
  - <xref:azure.mgmt.machinelearningcompute.models.GlobalServiceConfiguration>
methods:
- uid: azure.mgmt.machinelearningcompute.models.OperationalizationCluster.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.machinelearningcompute.models.OperationalizationCluster.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.machinelearningcompute.models.OperationalizationCluster.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.machinelearningcompute.models.OperationalizationCluster.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.machinelearningcompute.models.OperationalizationCluster.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.machinelearningcompute.models.OperationalizationCluster.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
