### YamlMime:PythonClass
uid: azure.mgmt.policyinsights.models.Remediation
name: Remediation
fullName: azure.mgmt.policyinsights.models.Remediation
module: azure.mgmt.policyinsights.models
inheritances:
- azure.mgmt.policyinsights._serialization.Model
summary: 'The remediation definition.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'Remediation(*, policy_assignment_id: str | None = None, policy_definition_reference_id:
    str | None = None, resource_discovery_mode: str | _models.ResourceDiscoveryMode
    | None = None, filters: _models.RemediationFilters | None = None, resource_count:
    int | None = None, parallel_deployments: int | None = None, failure_threshold:
    _models.RemediationPropertiesFailureThreshold | None = None, **kwargs)'
  parameters:
  - name: policy_assignment_id
    description: 'The resource ID of the policy assignment that should be

      remediated.'
    types:
    - <xref:str>
  - name: policy_definition_reference_id
    description: 'The policy definition reference ID of the individual

      definition that should be remediated. Required when the policy assignment being
      remediated

      assigns a policy set definition.'
    types:
    - <xref:str>
  - name: resource_discovery_mode
    description: 'The way resources to remediate are discovered. Defaults to

      ExistingNonCompliant if not specified. Known values are: "ExistingNonCompliant"
      and

      "ReEvaluateCompliance".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.policyinsights.models.ResourceDiscoveryMode>
  - name: filters
    description: The filters that will be applied to determine which resources to
      remediate.
    types:
    - <xref:azure.mgmt.policyinsights.models.RemediationFilters>
  - name: resource_count
    description: 'Determines the max number of resources that can be remediated by
      the

      remediation job. If not provided, the default resource count is used.'
    types:
    - <xref:int>
  - name: parallel_deployments
    description: 'Determines how many resources to remediate at any given time.

      Can be used to increase or reduce the pace of the remediation. If not provided,
      the default

      parallel deployments value is used.'
    types:
    - <xref:int>
  - name: failure_threshold
    description: The remediation failure threshold settings.
    types:
    - <xref:azure.mgmt.policyinsights.models.RemediationPropertiesFailureThreshold>
variables:
- description: The ID of the remediation.
  name: id
  types:
  - <xref:str>
- description: The type of the remediation.
  name: type
  types:
  - <xref:str>
- description: The name of the remediation.
  name: name
  types:
  - <xref:str>
- description: 'Azure Resource Manager metadata containing createdBy and modifiedBy

    information.'
  name: system_data
  types:
  - <xref:azure.mgmt.policyinsights.models.SystemData>
- description: The resource ID of the policy assignment that should be remediated.
  name: policy_assignment_id
  types:
  - <xref:str>
- description: 'The policy definition reference ID of the individual

    definition that should be remediated. Required when the policy assignment being
    remediated

    assigns a policy set definition.'
  name: policy_definition_reference_id
  types:
  - <xref:str>
- description: 'The way resources to remediate are discovered. Defaults to

    ExistingNonCompliant if not specified. Known values are: "ExistingNonCompliant"
    and

    "ReEvaluateCompliance".'
  name: resource_discovery_mode
  types:
  - <xref:str>
  - <xref:azure.mgmt.policyinsights.models.ResourceDiscoveryMode>
- description: The status of the remediation.
  name: provisioning_state
  types:
  - <xref:str>
- description: The time at which the remediation was created.
  name: created_on
  types:
  - <xref:datetime.datetime>
- description: The time at which the remediation was last updated.
  name: last_updated_on
  types:
  - <xref:datetime.datetime>
- description: The filters that will be applied to determine which resources to remediate.
  name: filters
  types:
  - <xref:azure.mgmt.policyinsights.models.RemediationFilters>
- description: 'The deployment status summary for all deployments created by the

    remediation.'
  name: deployment_status
  types:
  - <xref:azure.mgmt.policyinsights.models.RemediationDeploymentSummary>
- description: 'The remediation status message. Provides additional details regarding
    the

    state of the remediation.'
  name: status_message
  types:
  - <xref:str>
- description: 'The remediation correlation Id. Can be used to find events related
    to the

    remediation in the activity log.'
  name: correlation_id
  types:
  - <xref:str>
- description: 'Determines the max number of resources that can be remediated by the

    remediation job. If not provided, the default resource count is used.'
  name: resource_count
  types:
  - <xref:int>
- description: 'Determines how many resources to remediate at any given time. Can

    be used to increase or reduce the pace of the remediation. If not provided, the
    default

    parallel deployments value is used.'
  name: parallel_deployments
  types:
  - <xref:int>
- description: The remediation failure threshold settings.
  name: failure_threshold
  types:
  - <xref:azure.mgmt.policyinsights.models.RemediationPropertiesFailureThreshold>
methods:
- uid: azure.mgmt.policyinsights.models.Remediation.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.policyinsights.models.Remediation.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.policyinsights.models.Remediation.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.policyinsights.models.Remediation.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.policyinsights.models.Remediation.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.policyinsights.models.Remediation.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
