### YamlMime:PythonClass
uid: azure.mgmt.policyinsights.models.ComponentPolicyState
name: ComponentPolicyState
fullName: azure.mgmt.policyinsights.models.ComponentPolicyState
module: azure.mgmt.policyinsights.models
inheritances:
- azure.mgmt.policyinsights._serialization.Model
summary: 'Component Policy State record.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'ComponentPolicyState(*, additional_properties: Dict[str, Any] | None =
    None, policy_evaluation_details: _models.ComponentPolicyEvaluationDetails | None
    = None, **kwargs)'
  parameters:
  - name: additional_properties
    description: 'Unmatched properties from the message are deserialized to this

      collection.'
    types:
    - <xref:dict>[<xref:str>, <xref:any>]
  - name: policy_evaluation_details
    description: 'Policy evaluation details. This is only included in the

      response if the request contains $expand=PolicyEvaluationDetails.'
    types:
    - <xref:azure.mgmt.policyinsights.models.ComponentPolicyEvaluationDetails>
variables:
- description: 'Unmatched properties from the message are deserialized to this

    collection.'
  name: additional_properties
  types:
  - <xref:dict>[<xref:str>, <xref:any>]
- description: 'OData entity ID; always set to null since component policy state records
    do not

    have an entity ID.'
  name: odata_id
  types:
  - <xref:str>
- description: 'OData context string; used by OData clients to resolve type information

    based on metadata.'
  name: odata_context
  types:
  - <xref:str>
- description: Timestamp for the component policy state record.
  name: timestamp
  types:
  - <xref:datetime.datetime>
- description: Component Id.
  name: component_id
  types:
  - <xref:str>
- description: Component type.
  name: component_type
  types:
  - <xref:str>
- description: Component name.
  name: component_name
  types:
  - <xref:str>
- description: Resource ID.
  name: resource_id
  types:
  - <xref:str>
- description: Policy assignment ID.
  name: policy_assignment_id
  types:
  - <xref:str>
- description: Policy definition ID.
  name: policy_definition_id
  types:
  - <xref:str>
- description: Subscription ID.
  name: subscription_id
  types:
  - <xref:str>
- description: Resource type.
  name: resource_type
  types:
  - <xref:str>
- description: Resource location.
  name: resource_location
  types:
  - <xref:str>
- description: Resource group name.
  name: resource_group
  types:
  - <xref:str>
- description: Policy assignment name.
  name: policy_assignment_name
  types:
  - <xref:str>
- description: Policy assignment owner.
  name: policy_assignment_owner
  types:
  - <xref:str>
- description: Policy assignment parameters.
  name: policy_assignment_parameters
  types:
  - <xref:str>
- description: Policy assignment scope.
  name: policy_assignment_scope
  types:
  - <xref:str>
- description: Policy definition name.
  name: policy_definition_name
  types:
  - <xref:str>
- description: Policy definition action, i.e. effect.
  name: policy_definition_action
  types:
  - <xref:str>
- description: Policy definition category.
  name: policy_definition_category
  types:
  - <xref:str>
- description: 'Policy set definition ID, if the policy assignment is for a

    policy set.'
  name: policy_set_definition_id
  types:
  - <xref:str>
- description: 'Policy set definition name, if the policy assignment is for a

    policy set.'
  name: policy_set_definition_name
  types:
  - <xref:str>
- description: 'Policy set definition owner, if the policy assignment is for

    a policy set.'
  name: policy_set_definition_owner
  types:
  - <xref:str>
- description: 'Policy set definition category, if the policy assignment

    is for a policy set.'
  name: policy_set_definition_category
  types:
  - <xref:str>
- description: 'Policy set definition parameters, if the policy

    assignment is for a policy set.'
  name: policy_set_definition_parameters
  types:
  - <xref:str>
- description: 'Reference ID for the policy definition inside the policy

    set, if the policy assignment is for a policy set.'
  name: policy_definition_reference_id
  types:
  - <xref:str>
- description: Compliance state of the resource.
  name: compliance_state
  types:
  - <xref:str>
- description: 'Policy evaluation details. This is only included in the

    response if the request contains $expand=PolicyEvaluationDetails.'
  name: policy_evaluation_details
  types:
  - <xref:azure.mgmt.policyinsights.models.ComponentPolicyEvaluationDetails>
- description: Policy definition group names.
  name: policy_definition_group_names
  types:
  - <xref:list>[<xref:str>]
- description: Evaluated policy definition version.
  name: policy_definition_version
  types:
  - <xref:str>
- description: Evaluated policy set definition version.
  name: policy_set_definition_version
  types:
  - <xref:str>
- description: Evaluated policy assignment version.
  name: policy_assignment_version
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.policyinsights.models.ComponentPolicyState.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.policyinsights.models.ComponentPolicyState.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.policyinsights.models.ComponentPolicyState.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.policyinsights.models.ComponentPolicyState.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.policyinsights.models.ComponentPolicyState.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.policyinsights.models.ComponentPolicyState.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
