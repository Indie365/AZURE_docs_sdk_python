### YamlMime:PythonClass
uid: azure.mgmt.azurearcdata.models.DataControllerProperties
name: DataControllerProperties
fullName: azure.mgmt.azurearcdata.models.DataControllerProperties
module: azure.mgmt.azurearcdata.models
inheritances:
- azure.mgmt.azurearcdata._serialization.Model
summary: 'The data controller properties.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'DataControllerProperties(*, infrastructure: str | _models.Infrastructure
    = ''other'', on_premise_property: _models.OnPremiseProperty | None = None, k8_s_raw:
    MutableMapping[str, Any] | None = None, upload_watermark: _models.UploadWatermark
    | None = None, last_uploaded_date: datetime | None = None, basic_login_information:
    _models.BasicLoginInformation | None = None, metrics_dashboard_credential: _models.BasicLoginInformation
    | None = None, logs_dashboard_credential: _models.BasicLoginInformation | None
    = None, log_analytics_workspace_config: _models.LogAnalyticsWorkspaceConfig |
    None = None, upload_service_principal: _models.UploadServicePrincipal | None =
    None, cluster_id: str | None = None, extension_id: str | None = None, **kwargs)'
  parameters:
  - name: infrastructure
    description: 'The infrastructure the data controller is running on. Known values

      are: "azure", "gcp", "aws", "alibaba", "onpremises", and "other".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.azurearcdata.models.Infrastructure>
  - name: on_premise_property
    description: Properties from the Kubernetes data controller.
    types:
    - <xref:azure.mgmt.azurearcdata.models.OnPremiseProperty>
  - name: k8_s_raw
    description: The raw kubernetes information.
    types:
    - <xref:JSON>
  - name: upload_watermark
    description: 'Properties on upload watermark.  Mostly timestamp for each upload

      data type.'
    types:
    - <xref:azure.mgmt.azurearcdata.models.UploadWatermark>
  - name: last_uploaded_date
    description: 'Last uploaded date from Kubernetes cluster. Defaults to current

      date time.'
    types:
    - <xref:datetime.datetime>
  - name: basic_login_information
    description: 'Deprecated. Azure Arc Data Services data controller no longer

      expose any endpoint. All traffic are exposed through Kubernetes native API.'
    types:
    - <xref:azure.mgmt.azurearcdata.models.BasicLoginInformation>
  - name: metrics_dashboard_credential
    description: 'Login credential for metrics dashboard on the Kubernetes

      cluster.'
    types:
    - <xref:azure.mgmt.azurearcdata.models.BasicLoginInformation>
  - name: logs_dashboard_credential
    description: 'Login credential for logs dashboard on the Kubernetes

      cluster.'
    types:
    - <xref:azure.mgmt.azurearcdata.models.BasicLoginInformation>
  - name: log_analytics_workspace_config
    description: Log analytics workspace id and primary key.
    types:
    - <xref:azure.mgmt.azurearcdata.models.LogAnalyticsWorkspaceConfig>
  - name: upload_service_principal
    description: 'Deprecated. Service principal is deprecated in favor of Arc

      Kubernetes service extension managed identity.'
    types:
    - <xref:azure.mgmt.azurearcdata.models.UploadServicePrincipal>
  - name: cluster_id
    description: 'If a CustomLocation is provided, this contains the ARM id of the
      connected

      cluster the custom location belongs to.'
    types:
    - <xref:str>
  - name: extension_id
    description: 'If a CustomLocation is provided, this contains the ARM id of the

      extension the custom location belongs to.'
    types:
    - <xref:str>
variables:
- description: 'The infrastructure the data controller is running on. Known values
    are:

    "azure", "gcp", "aws", "alibaba", "onpremises", and "other".'
  name: infrastructure
  types:
  - <xref:str>
  - <xref:azure.mgmt.azurearcdata.models.Infrastructure>
- description: Properties from the Kubernetes data controller.
  name: on_premise_property
  types:
  - <xref:azure.mgmt.azurearcdata.models.OnPremiseProperty>
- description: The raw kubernetes information.
  name: k8_s_raw
  types:
  - <xref:JSON>
- description: 'Properties on upload watermark.  Mostly timestamp for each upload
    data

    type.'
  name: upload_watermark
  types:
  - <xref:azure.mgmt.azurearcdata.models.UploadWatermark>
- description: 'Last uploaded date from Kubernetes cluster. Defaults to current date

    time.'
  name: last_uploaded_date
  types:
  - <xref:datetime.datetime>
- description: 'Deprecated. Azure Arc Data Services data controller no longer

    expose any endpoint. All traffic are exposed through Kubernetes native API.'
  name: basic_login_information
  types:
  - <xref:azure.mgmt.azurearcdata.models.BasicLoginInformation>
- description: 'Login credential for metrics dashboard on the Kubernetes

    cluster.'
  name: metrics_dashboard_credential
  types:
  - <xref:azure.mgmt.azurearcdata.models.BasicLoginInformation>
- description: Login credential for logs dashboard on the Kubernetes cluster.
  name: logs_dashboard_credential
  types:
  - <xref:azure.mgmt.azurearcdata.models.BasicLoginInformation>
- description: Log analytics workspace id and primary key.
  name: log_analytics_workspace_config
  types:
  - <xref:azure.mgmt.azurearcdata.models.LogAnalyticsWorkspaceConfig>
- description: 'Deprecated. Service principal is deprecated in favor of Arc

    Kubernetes service extension managed identity.'
  name: upload_service_principal
  types:
  - <xref:azure.mgmt.azurearcdata.models.UploadServicePrincipal>
- description: The provisioning state of the Arc Data Controller resource.
  name: provisioning_state
  types:
  - <xref:str>
- description: 'If a CustomLocation is provided, this contains the ARM id of the connected

    cluster the custom location belongs to.'
  name: cluster_id
  types:
  - <xref:str>
- description: 'If a CustomLocation is provided, this contains the ARM id of the extension

    the custom location belongs to.'
  name: extension_id
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.azurearcdata.models.DataControllerProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.azurearcdata.models.DataControllerProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.azurearcdata.models.DataControllerProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.azurearcdata.models.DataControllerProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.azurearcdata.models.DataControllerProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.azurearcdata.models.DataControllerProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
