### YamlMime:PythonClass
uid: azure.mgmt.azurearcdata.models.SqlServerInstanceProperties
name: SqlServerInstanceProperties
fullName: azure.mgmt.azurearcdata.models.SqlServerInstanceProperties
module: azure.mgmt.azurearcdata.models
inheritances:
- azure.mgmt.azurearcdata._serialization.Model
summary: 'Properties of SqlServerInstance.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'SqlServerInstanceProperties(*, container_resource_id: str, status: str
    | _models.ConnectionStatus, version: str | _models.SqlVersion | None = None, edition:
    str | _models.EditionType | None = None, v_core: str | None = None, patch_level:
    str | None = None, collation: str | None = None, current_version: str | None =
    None, instance_name: str | None = None, tcp_dynamic_ports: str | None = None,
    tcp_static_ports: str | None = None, product_id: str | None = None, license_type:
    str | _models.ArcSqlServerLicenseType | None = None, azure_defender_status_last_updated:
    datetime | None = None, azure_defender_status: str | _models.DefenderStatus |
    None = None, host_type: str | _models.HostType | None = None, **kwargs)'
  parameters:
  - name: version
    description: 'SQL Server version. Known values are: "SQL Server 2012", "SQL Server
      2014",

      "SQL Server 2016", "SQL Server 2017", "SQL Server 2019", "SQL Server 2022",
      and "Unknown".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.azurearcdata.models.SqlVersion>
  - name: edition
    description: 'SQL Server edition. Known values are: "Evaluation", "Enterprise",
      "Standard",

      "Web", "Developer", and "Express".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.azurearcdata.models.EditionType>
  - name: container_resource_id
    description: 'ARM Resource id of the container resource (Azure Arc for

      Servers). Required.'
    types:
    - <xref:str>
  - name: v_core
    description: The number of logical processors used by the SQL Server instance.
    types:
    - <xref:str>
  - name: status
    description: 'The cloud connectivity status. Required. Known values are: "Connected",

      "Disconnected", "Registered", and "Unknown".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.azurearcdata.models.ConnectionStatus>
  - name: patch_level
    description: SQL Server update level.
    types:
    - <xref:str>
  - name: collation
    description: SQL Server collation.
    types:
    - <xref:str>
  - name: current_version
    description: SQL Server current version.
    types:
    - <xref:str>
  - name: instance_name
    description: SQL Server instance name.
    types:
    - <xref:str>
  - name: tcp_dynamic_ports
    description: Dynamic TCP ports used by SQL Server.
    types:
    - <xref:str>
  - name: tcp_static_ports
    description: Static TCP ports used by SQL Server.
    types:
    - <xref:str>
  - name: product_id
    description: SQL Server product ID.
    types:
    - <xref:str>
  - name: license_type
    description: 'SQL Server license type. Known values are: "Undefined", "Free",
      "HADR",

      "ServerCAL", "LicenseOnly", "PAYG", and "Paid".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.azurearcdata.models.ArcSqlServerLicenseType>
  - name: azure_defender_status_last_updated
    description: Timestamp of last Azure Defender status update.
    types:
    - <xref:datetime.datetime>
  - name: azure_defender_status
    description: 'Status of Azure Defender. Known values are: "Protected",

      "Unprotected", and "Unknown".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.azurearcdata.models.DefenderStatus>
  - name: host_type
    description: 'Type of host for Azure Arc SQL Server. Known values are: "Azure
      Virtual

      Machine", "Azure VMWare Virtual Machine", "Azure Kubernetes Service", "AWS VMWare
      Virtual

      Machine", "AWS Kubernetes Service", "GCP VMWare Virtual Machine", "GCP Kubernetes
      Service",

      "Container", "Virtual Machine", "Physical Server", "AWS Virtual Machine", "GCP
      Virtual

      Machine", and "Other".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.azurearcdata.models.HostType>
variables:
- description: 'SQL Server version. Known values are: "SQL Server 2012", "SQL Server
    2014", "SQL

    Server 2016", "SQL Server 2017", "SQL Server 2019", "SQL Server 2022", and "Unknown".'
  name: version
  types:
  - <xref:str>
  - <xref:azure.mgmt.azurearcdata.models.SqlVersion>
- description: 'SQL Server edition. Known values are: "Evaluation", "Enterprise",
    "Standard",

    "Web", "Developer", and "Express".'
  name: edition
  types:
  - <xref:str>
  - <xref:azure.mgmt.azurearcdata.models.EditionType>
- description: 'ARM Resource id of the container resource (Azure Arc for Servers).

    Required.'
  name: container_resource_id
  types:
  - <xref:str>
- description: The time when the resource was created.
  name: create_time
  types:
  - <xref:str>
- description: The number of logical processors used by the SQL Server instance.
  name: v_core
  types:
  - <xref:str>
- description: 'The cloud connectivity status. Required. Known values are: "Connected",

    "Disconnected", "Registered", and "Unknown".'
  name: status
  types:
  - <xref:str>
  - <xref:azure.mgmt.azurearcdata.models.ConnectionStatus>
- description: SQL Server update level.
  name: patch_level
  types:
  - <xref:str>
- description: SQL Server collation.
  name: collation
  types:
  - <xref:str>
- description: SQL Server current version.
  name: current_version
  types:
  - <xref:str>
- description: SQL Server instance name.
  name: instance_name
  types:
  - <xref:str>
- description: Dynamic TCP ports used by SQL Server.
  name: tcp_dynamic_ports
  types:
  - <xref:str>
- description: Static TCP ports used by SQL Server.
  name: tcp_static_ports
  types:
  - <xref:str>
- description: SQL Server product ID.
  name: product_id
  types:
  - <xref:str>
- description: 'SQL Server license type. Known values are: "Undefined", "Free", "HADR",

    "ServerCAL", "LicenseOnly", "PAYG", and "Paid".'
  name: license_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.azurearcdata.models.ArcSqlServerLicenseType>
- description: Timestamp of last Azure Defender status update.
  name: azure_defender_status_last_updated
  types:
  - <xref:datetime.datetime>
- description: 'Status of Azure Defender. Known values are: "Protected",

    "Unprotected", and "Unknown".'
  name: azure_defender_status
  types:
  - <xref:str>
  - <xref:azure.mgmt.azurearcdata.models.DefenderStatus>
- description: The provisioning state of the Arc-enabled SQL Server resource.
  name: provisioning_state
  types:
  - <xref:str>
- description: 'Type of host for Azure Arc SQL Server. Known values are: "Azure Virtual

    Machine", "Azure VMWare Virtual Machine", "Azure Kubernetes Service", "AWS VMWare
    Virtual

    Machine", "AWS Kubernetes Service", "GCP VMWare Virtual Machine", "GCP Kubernetes
    Service",

    "Container", "Virtual Machine", "Physical Server", "AWS Virtual Machine", "GCP
    Virtual

    Machine", and "Other".'
  name: host_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.azurearcdata.models.HostType>
methods:
- uid: azure.mgmt.azurearcdata.models.SqlServerInstanceProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.azurearcdata.models.SqlServerInstanceProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.azurearcdata.models.SqlServerInstanceProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.azurearcdata.models.SqlServerInstanceProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.azurearcdata.models.SqlServerInstanceProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.azurearcdata.models.SqlServerInstanceProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
