### YamlMime:PythonClass
uid: azure.mgmt.sql.models.ServerDevOpsAuditingSettings
name: ServerDevOpsAuditingSettings
fullName: azure.mgmt.sql.models.ServerDevOpsAuditingSettings
module: azure.mgmt.sql.models
inheritances:
- azure.mgmt.sql.models._models_py3.ProxyResource
summary: 'A server DevOps auditing settings.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'ServerDevOpsAuditingSettings(*, is_azure_monitor_target_enabled: bool |
    None = None, is_managed_identity_in_use: bool | None = None, state: str | _models.BlobAuditingPolicyState
    | None = None, storage_endpoint: str | None = None, storage_account_access_key:
    str | None = None, storage_account_subscription_id: str | None = None, **kwargs:
    Any)'
  parameters:
  - name: is_azure_monitor_target_enabled
    description: 'Specifies whether DevOps audit events are sent to

      Azure Monitor.

      In order to send the events to Azure Monitor, specify ''State'' as ''Enabled''
      and

      ''IsAzureMonitorTargetEnabled'' as true.


      When using REST API to configure DevOps audit, Diagnostic Settings with

      ''DevOpsOperationsAudit'' diagnostic logs category on the master database should
      be also created.


      Diagnostic Settings URI format:

      PUT

      [https://management.azure.com/subscriptions](https://management.azure.com/subscriptions)/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview


      For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)

      or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043).'
    types:
    - <xref:bool>
  - name: is_managed_identity_in_use
    description: 'Specifies whether Managed Identity is used to access blob

      storage.'
    types:
    - <xref:bool>
  - name: state
    description: 'Specifies the state of the audit. If state is Enabled, storageEndpoint
      or

      isAzureMonitorTargetEnabled are required. Known values are: "Enabled" and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.sql.models.BlobAuditingPolicyState>
  - name: storage_endpoint
    description: 'Specifies the blob storage endpoint (e.g.

      [https://MyAccount.blob.core.windows.net](https://MyAccount.blob.core.windows.net)).
      If state is Enabled, storageEndpoint or

      isAzureMonitorTargetEnabled is required.'
    types:
    - <xref:str>
  - name: storage_account_access_key
    description: "Specifies the identifier key of the auditing storage\naccount.\n\
      If state is Enabled and storageEndpoint is specified, not specifying the\nstorageAccountAccessKey\
      \ will use SQL server system-assigned managed identity to access the\nstorage.\n\
      Prerequisites for using managed identity authentication:\n\n1. Assign SQL Server\
      \ a system-assigned managed identity in Azure Active Directory (AAD). \n\n#.\
      \ Grant SQL Server identity access to the storage account by adding 'Storage\
      \ Blob Data\nContributor' RBAC role to the server identity.\n\n   For more information,\
      \ see >>`<<Auditing to storage using Managed Identity authentication\n\n<[https://go.microsoft.com/fwlink/?linkid=2114355](https://go.microsoft.com/fwlink/?linkid=2114355)>`_."
    types:
    - <xref:str>
  - name: storage_account_subscription_id
    description: Specifies the blob storage subscription Id.
    types:
    - <xref:str>
variables:
- description: Resource ID.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: SystemData of ServerDevOpsAuditSettingsResource.
  name: system_data
  types:
  - <xref:azure.mgmt.sql.models.SystemData>
- description: 'Specifies whether DevOps audit events are sent to Azure

    Monitor.

    In order to send the events to Azure Monitor, specify ''State'' as ''Enabled''
    and

    ''IsAzureMonitorTargetEnabled'' as true.


    When using REST API to configure DevOps audit, Diagnostic Settings with

    ''DevOpsOperationsAudit'' diagnostic logs category on the master database should
    be also created.


    Diagnostic Settings URI format:

    PUT

    [https://management.azure.com/subscriptions](https://management.azure.com/subscriptions)/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview


    For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)

    or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043).'
  name: is_azure_monitor_target_enabled
  types:
  - <xref:bool>
- description: 'Specifies whether Managed Identity is used to access blob

    storage.'
  name: is_managed_identity_in_use
  types:
  - <xref:bool>
- description: 'Specifies the state of the audit. If state is Enabled, storageEndpoint
    or

    isAzureMonitorTargetEnabled are required. Known values are: "Enabled" and "Disabled".'
  name: state
  types:
  - <xref:str>
  - <xref:azure.mgmt.sql.models.BlobAuditingPolicyState>
- description: 'Specifies the blob storage endpoint (e.g.

    [https://MyAccount.blob.core.windows.net](https://MyAccount.blob.core.windows.net)).
    If state is Enabled, storageEndpoint or

    isAzureMonitorTargetEnabled is required.'
  name: storage_endpoint
  types:
  - <xref:str>
- description: "Specifies the identifier key of the auditing storage account.\nIf\
    \ state is Enabled and storageEndpoint is specified, not specifying the\nstorageAccountAccessKey\
    \ will use SQL server system-assigned managed identity to access the\nstorage.\n\
    Prerequisites for using managed identity authentication:\n\n1. Assign SQL Server\
    \ a system-assigned managed identity in Azure Active Directory (AAD). \n\n#. Grant\
    \ SQL Server identity access to the storage account by adding 'Storage Blob Data\n\
    Contributor' RBAC role to the server identity.\n\n   For more information, see\
    \ >>`<<Auditing to storage using Managed Identity authentication\n\n<[https://go.microsoft.com/fwlink/?linkid=2114355](https://go.microsoft.com/fwlink/?linkid=2114355)>`_."
  name: storage_account_access_key
  types:
  - <xref:str>
- description: Specifies the blob storage subscription Id.
  name: storage_account_subscription_id
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.sql.models.ServerDevOpsAuditingSettings.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.sql.models.ServerDevOpsAuditingSettings.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.sql.models.ServerDevOpsAuditingSettings.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.sql.models.ServerDevOpsAuditingSettings.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.sql.models.ServerDevOpsAuditingSettings.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.sql.models.ServerDevOpsAuditingSettings.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
