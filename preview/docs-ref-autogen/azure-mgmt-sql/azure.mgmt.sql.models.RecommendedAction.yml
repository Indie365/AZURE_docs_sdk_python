### YamlMime:PythonClass
uid: azure.mgmt.sql.models.RecommendedAction
name: RecommendedAction
fullName: azure.mgmt.sql.models.RecommendedAction
module: azure.mgmt.sql.models
inheritances:
- azure.mgmt.sql.models._models_py3.ProxyResource
summary: 'Database, Server or Elastic Pool Recommended Action.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'RecommendedAction(*, state: _models.RecommendedActionStateInfo | None =
    None, **kwargs: Any)'
  parameters:
  - name: state
    description: Gets the info of the current state the recommended action is in.
    types:
    - <xref:azure.mgmt.sql.models.RecommendedActionStateInfo>
variables:
- description: Resource ID.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: Resource kind.
  name: kind
  types:
  - <xref:str>
- description: Resource location.
  name: location
  types:
  - <xref:str>
- description: 'Gets the reason for recommending this action. e.g.,

    DuplicateIndex.'
  name: recommendation_reason
  types:
  - <xref:str>
- description: Gets the time since when this recommended action is valid.
  name: valid_since
  types:
  - <xref:datetime.datetime>
- description: Gets time when this recommended action was last refreshed.
  name: last_refresh
  types:
  - <xref:datetime.datetime>
- description: Gets the info of the current state the recommended action is in.
  name: state
  types:
  - <xref:azure.mgmt.sql.models.RecommendedActionStateInfo>
- description: Gets if this recommended action is actionable by user.
  name: is_executable_action
  types:
  - <xref:bool>
- description: 'Gets if changes applied by this recommended action can be reverted

    by user.'
  name: is_revertable_action
  types:
  - <xref:bool>
- description: 'Gets if this recommended action was suggested some time ago but user

    chose to ignore this and system added a new recommended action again.'
  name: is_archived_action
  types:
  - <xref:bool>
- description: 'Gets the time when system started applying this recommended

    action on the user resource. e.g., index creation start time.'
  name: execute_action_start_time
  types:
  - <xref:datetime.datetime>
- description: 'Gets the time taken for applying this recommended action on user

    resource. e.g., time taken for index creation.'
  name: execute_action_duration
  types:
  - <xref:str>
- description: 'Gets the time when system started reverting changes of this

    recommended action on user resource. e.g., time when index drop is executed.'
  name: revert_action_start_time
  types:
  - <xref:datetime.datetime>
- description: 'Gets the time taken for reverting changes of this recommended

    action on user resource. e.g., time taken for dropping the created index.'
  name: revert_action_duration
  types:
  - <xref:str>
- description: 'Gets if approval for applying this recommended action was

    given by user/system. Known values are: "User" and "System".'
  name: execute_action_initiated_by
  types:
  - <xref:str>
  - <xref:azure.mgmt.sql.models.RecommendedActionInitiatedBy>
- description: 'Gets the time when this recommended action was approved

    for execution.'
  name: execute_action_initiated_time
  types:
  - <xref:datetime.datetime>
- description: 'Gets if approval for reverting this recommended action was

    given by user/system. Known values are: "User" and "System".'
  name: revert_action_initiated_by
  types:
  - <xref:str>
  - <xref:azure.mgmt.sql.models.RecommendedActionInitiatedBy>
- description: 'Gets the time when this recommended action was approved for

    revert.'
  name: revert_action_initiated_time
  types:
  - <xref:datetime.datetime>
- description: 'Gets the impact of this recommended action. Possible values are 1
    - Low impact, 2

    - Medium Impact and 3 - High Impact.'
  name: score
  types:
  - <xref:int>
- description: 'Gets the implementation details of this recommended action for

    user to apply it manually.'
  name: implementation_details
  types:
  - <xref:azure.mgmt.sql.models.RecommendedActionImplementationInfo>
- description: 'Gets the error details if and why this recommended action is put to
    error

    state.'
  name: error_details
  types:
  - <xref:azure.mgmt.sql.models.RecommendedActionErrorInfo>
- description: 'Gets the estimated impact info for this recommended action e.g.,

    Estimated CPU gain, Estimated Disk Space change.'
  name: estimated_impact
  types:
  - <xref:list>[<xref:azure.mgmt.sql.models.RecommendedActionImpactRecord>]
- description: 'Gets the observed/actual impact info for this recommended action e.g.,

    Actual CPU gain, Actual Disk Space change.'
  name: observed_impact
  types:
  - <xref:list>[<xref:azure.mgmt.sql.models.RecommendedActionImpactRecord>]
- description: 'Gets the time series info of metrics for this recommended action e.g.,
    CPU

    consumption time series.'
  name: time_series
  types:
  - <xref:list>[<xref:azure.mgmt.sql.models.RecommendedActionMetricInfo>]
- description: Gets the linked objects, if any.
  name: linked_objects
  types:
  - <xref:list>[<xref:str>]
- description: Gets additional details specific to this recommended action.
  name: details
  types:
  - <xref:dict>[<xref:str>, <xref:JSON>]
methods:
- uid: azure.mgmt.sql.models.RecommendedAction.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.sql.models.RecommendedAction.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.sql.models.RecommendedAction.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.sql.models.RecommendedAction.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.sql.models.RecommendedAction.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.sql.models.RecommendedAction.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
