### YamlMime:PythonClass
uid: azure.mgmt.synapse.models.EventGridDataConnection
name: EventGridDataConnection
fullName: azure.mgmt.synapse.models.EventGridDataConnection
module: azure.mgmt.synapse.models
inheritances:
- azure.mgmt.synapse.models._models_py3.DataConnection
summary: 'Class representing an Event Grid data connection.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'EventGridDataConnection(*, location: str | None = None, storage_account_resource_id:
    str | None = None, event_hub_resource_id: str | None = None, consumer_group: str
    | None = None, table_name: str | None = None, mapping_rule_name: str | None =
    None, data_format: str | _models.EventGridDataFormat | None = None, ignore_first_record:
    bool | None = None, blob_storage_event_type: str | _models.BlobStorageEventType
    | None = None, **kwargs: Any)'
  parameters:
  - name: location
    description: Resource location.
    types:
    - <xref:str>
  - name: storage_account_resource_id
    description: 'The resource ID of the storage account where the data

      resides.'
    types:
    - <xref:str>
  - name: event_hub_resource_id
    description: 'The resource ID where the event grid is configured to send

      events.'
    types:
    - <xref:str>
  - name: consumer_group
    description: The event hub consumer group.
    types:
    - <xref:str>
  - name: table_name
    description: 'The table where the data should be ingested. Optionally the table

      information can be added to each message.'
    types:
    - <xref:str>
  - name: mapping_rule_name
    description: 'The mapping rule to be used to ingest the data. Optionally the

      mapping information can be added to each message.'
    types:
    - <xref:str>
  - name: data_format
    description: 'The data format of the message. Optionally the data format can be
      added

      to each message. Known values are: "MULTIJSON", "JSON", "CSV", "TSV", "SCSV",
      "SOHSV", "PSV",

      "TXT", "RAW", "SINGLEJSON", "AVRO", "TSVE", "PARQUET", "ORC", "APACHEAVRO",
      and "W3CLOGFILE".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.synapse.models.EventGridDataFormat>
  - name: ignore_first_record
    description: 'A Boolean value that, if set to true, indicates that ingestion

      should ignore the first record of every file.'
    types:
    - <xref:bool>
  - name: blob_storage_event_type
    description: 'The name of blob storage event type to process. Known values

      are: "Microsoft.Storage.BlobCreated" and "Microsoft.Storage.BlobRenamed".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.synapse.models.BlobStorageEventType>
variables:
- description: 'Fully qualified resource ID for the resource. Ex -

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: 'The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
    or

    "Microsoft.Storage/storageAccounts".'
  name: type
  types:
  - <xref:str>
- description: Resource location.
  name: location
  types:
  - <xref:str>
- description: 'Kind of the endpoint for the data connection. Required. Known values
    are:

    "EventHub", "EventGrid", and "IotHub".'
  name: kind
  types:
  - <xref:str>
  - <xref:azure.mgmt.synapse.models.DataConnectionKind>
- description: 'Azure Resource Manager metadata containing createdBy and modifiedBy

    information.'
  name: system_data
  types:
  - <xref:azure.mgmt.synapse.models.SystemData>
- description: 'The resource ID of the storage account where the data

    resides.'
  name: storage_account_resource_id
  types:
  - <xref:str>
- description: The resource ID where the event grid is configured to send events.
  name: event_hub_resource_id
  types:
  - <xref:str>
- description: The event hub consumer group.
  name: consumer_group
  types:
  - <xref:str>
- description: 'The table where the data should be ingested. Optionally the table
    information

    can be added to each message.'
  name: table_name
  types:
  - <xref:str>
- description: 'The mapping rule to be used to ingest the data. Optionally the mapping

    information can be added to each message.'
  name: mapping_rule_name
  types:
  - <xref:str>
- description: 'The data format of the message. Optionally the data format can be
    added to

    each message. Known values are: "MULTIJSON", "JSON", "CSV", "TSV", "SCSV", "SOHSV",
    "PSV",

    "TXT", "RAW", "SINGLEJSON", "AVRO", "TSVE", "PARQUET", "ORC", "APACHEAVRO", and
    "W3CLOGFILE".'
  name: data_format
  types:
  - <xref:str>
  - <xref:azure.mgmt.synapse.models.EventGridDataFormat>
- description: 'A Boolean value that, if set to true, indicates that ingestion

    should ignore the first record of every file.'
  name: ignore_first_record
  types:
  - <xref:bool>
- description: 'The name of blob storage event type to process. Known values

    are: "Microsoft.Storage.BlobCreated" and "Microsoft.Storage.BlobRenamed".'
  name: blob_storage_event_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.synapse.models.BlobStorageEventType>
- description: 'The provisioned state of the resource. Known values are: "Running",

    "Creating", "Deleting", "Succeeded", "Failed", "Moving", and "Canceled".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.synapse.models.ResourceProvisioningState>
methods:
- uid: azure.mgmt.synapse.models.EventGridDataConnection.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.synapse.models.EventGridDataConnection.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.synapse.models.EventGridDataConnection.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.synapse.models.EventGridDataConnection.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.synapse.models.EventGridDataConnection.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.synapse.models.EventGridDataConnection.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
