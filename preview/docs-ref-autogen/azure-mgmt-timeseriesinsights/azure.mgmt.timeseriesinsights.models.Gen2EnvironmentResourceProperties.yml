### YamlMime:PythonClass
uid: azure.mgmt.timeseriesinsights.models.Gen2EnvironmentResourceProperties
name: Gen2EnvironmentResourceProperties
fullName: azure.mgmt.timeseriesinsights.models.Gen2EnvironmentResourceProperties
module: azure.mgmt.timeseriesinsights.models
inheritances:
- azure.mgmt.timeseriesinsights.models._models_py3.EnvironmentResourceProperties
summary: 'Properties of the Gen2 environment.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'Gen2EnvironmentResourceProperties(*, time_series_id_properties: List[_models.TimeSeriesIdProperty],
    storage_configuration: _models.Gen2StorageConfigurationOutput, warm_store_configuration:
    _models.WarmStoreConfigurationProperties | None = None, public_network_access:
    str | _models.PublicNetworkAccess | None = None, **kwargs)'
  parameters:
  - name: time_series_id_properties
    description: 'The list of event properties which will be used to define

      the environment''s time series id. Required.'
    types:
    - <xref:azure.mgmt.timeseriesinsights.aio.operations.Operations.list>[<xref:azure.mgmt.timeseriesinsights.models.TimeSeriesIdProperty>]
  - name: storage_configuration
    description: 'The storage configuration provides the connection details that

      allows the Time Series Insights service to connect to the customer storage account
      that is used

      to store the environment''s data. Required.'
    types:
    - <xref:azure.mgmt.timeseriesinsights.models.Gen2StorageConfigurationOutput>
  - name: warm_store_configuration
    description: 'The warm store configuration provides the details to create

      a warm store cache that will retain a copy of the environment''s data available
      for faster

      query.'
    types:
    - <xref:azure.mgmt.timeseriesinsights.models.WarmStoreConfigurationProperties>
  - name: public_network_access
    description: 'If ''enabled'', public network access is allowed. If ''disabled'',

      traffic over public interface is not allowed, and private endpoint connections
      would be the

      exclusive access method. Known values are: "enabled" and "disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.timeseriesinsights.models.PublicNetworkAccess>
variables:
- description: 'Provisioning state of the resource. Known values are: "Accepted",

    "Creating", "Updating", "Succeeded", "Failed", and "Deleting".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.timeseriesinsights.models.ProvisioningState>
- description: The time the resource was created.
  name: creation_time
  types:
  - <xref:datetime.datetime>
- description: 'An id used to access the environment data, e.g. to query the

    environment''s events or upload reference data for the environment.'
  name: data_access_id
  types:
  - <xref:str>
- description: 'The fully qualified domain name used to access the environment data,

    e.g. to query the environment''s events or upload reference data for the environment.'
  name: data_access_fqdn
  types:
  - <xref:str>
- description: 'An object that represents the status of the environment, and its internal
    state

    in the Time Series Insights service.'
  name: status
  types:
  - <xref:azure.mgmt.timeseriesinsights.models.EnvironmentStatus>
- description: 'The list of event properties which will be used to define the

    environment''s time series id. Required.'
  name: time_series_id_properties
  types:
  - <xref:list>[<xref:azure.mgmt.timeseriesinsights.models.TimeSeriesIdProperty>]
- description: 'The storage configuration provides the connection details that

    allows the Time Series Insights service to connect to the customer storage account
    that is used

    to store the environment''s data. Required.'
  name: storage_configuration
  types:
  - <xref:azure.mgmt.timeseriesinsights.models.Gen2StorageConfigurationOutput>
- description: 'The warm store configuration provides the details to create a

    warm store cache that will retain a copy of the environment''s data available
    for faster query.'
  name: warm_store_configuration
  types:
  - <xref:azure.mgmt.timeseriesinsights.models.WarmStoreConfigurationProperties>
- description: 'If ''enabled'', public network access is allowed. If ''disabled'',

    traffic over public interface is not allowed, and private endpoint connections
    would be the

    exclusive access method. Known values are: "enabled" and "disabled".'
  name: public_network_access
  types:
  - <xref:str>
  - <xref:azure.mgmt.timeseriesinsights.models.PublicNetworkAccess>
- description: 'The list of private endpoint connections to the

    environment.'
  name: private_endpoint_connections
  types:
  - <xref:list>[<xref:azure.mgmt.timeseriesinsights.models.PrivateEndpointConnection>]
methods:
- uid: azure.mgmt.timeseriesinsights.models.Gen2EnvironmentResourceProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.timeseriesinsights.models.Gen2EnvironmentResourceProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.timeseriesinsights.models.Gen2EnvironmentResourceProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.timeseriesinsights.models.Gen2EnvironmentResourceProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.timeseriesinsights.models.Gen2EnvironmentResourceProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.timeseriesinsights.models.Gen2EnvironmentResourceProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
