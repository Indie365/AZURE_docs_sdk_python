### YamlMime:PythonClass
uid: azure.mgmt.datamigration.models.MigrateSqlServerSqlDbTaskInput
name: MigrateSqlServerSqlDbTaskInput
fullName: azure.mgmt.datamigration.models.MigrateSqlServerSqlDbTaskInput
module: azure.mgmt.datamigration.models
inheritances:
- azure.mgmt.datamigration.models._models_py3.SqlMigrationTaskInput
summary: 'Input for the task that migrates on-prem SQL Server databases to Azure SQL
  Database.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'MigrateSqlServerSqlDbTaskInput(*, source_connection_info: _models.SqlConnectionInfo,
    target_connection_info: _models.SqlConnectionInfo, selected_databases: List[_models.MigrateSqlServerSqlDbDatabaseInput],
    validation_options: _models.MigrationValidationOptions | None = None, started_on:
    str | None = None, encrypted_key_for_secure_fields: str | None = None, **kwargs)'
  parameters:
  - name: source_connection_info
    description: Information for connecting to source. Required.
    types:
    - <xref:azure.mgmt.datamigration.models.SqlConnectionInfo>
  - name: target_connection_info
    description: Information for connecting to target. Required.
    types:
    - <xref:azure.mgmt.datamigration.models.SqlConnectionInfo>
  - name: selected_databases
    description: Databases to migrate. Required.
    types:
    - <xref:azure.mgmt.datamigration.aio.operations.FilesOperations.list>[<xref:azure.mgmt.datamigration.models.MigrateSqlServerSqlDbDatabaseInput>]
  - name: validation_options
    description: "Options for enabling various post migration validations. Available\n\
      options,\n\n   1.) Data Integrity Check: Performs a checksum based comparison\
      \ on source and target tables\n\nafter the migration to ensure the correctness\
      \ of the data.\n   2.) Schema Validation: Performs a thorough schema comparison\
      \ between the source and target\n\ntables and provides a list of differences\
      \ between the source and target database, 3.) Query\nAnalysis: Executes a set\
      \ of queries picked up automatically either from the Query Plan Cache or\nQuery\
      \ Store and execute them and compares the execution time between the source\
      \ and target\ndatabase."
    types:
    - <xref:azure.mgmt.datamigration.models.MigrationValidationOptions>
  - name: started_on
    description: Date and time relative to UTC when the migration was started on.
    types:
    - <xref:str>
  - name: encrypted_key_for_secure_fields
    description: encrypted key for secure fields.
    types:
    - <xref:str>
variables:
- description: Information for connecting to source. Required.
  name: source_connection_info
  types:
  - <xref:azure.mgmt.datamigration.models.SqlConnectionInfo>
- description: Information for connecting to target. Required.
  name: target_connection_info
  types:
  - <xref:azure.mgmt.datamigration.models.SqlConnectionInfo>
- description: Databases to migrate. Required.
  name: selected_databases
  types:
  - <xref:list>[<xref:azure.mgmt.datamigration.models.MigrateSqlServerSqlDbDatabaseInput>]
- description: "Options for enabling various post migration validations. Available\n\
    options,\n\n   1.) Data Integrity Check: Performs a checksum based comparison\
    \ on source and target tables\n\nafter the migration to ensure the correctness\
    \ of the data.\n   2.) Schema Validation: Performs a thorough schema comparison\
    \ between the source and target\n\ntables and provides a list of differences between\
    \ the source and target database, 3.) Query\nAnalysis: Executes a set of queries\
    \ picked up automatically either from the Query Plan Cache or\nQuery Store and\
    \ execute them and compares the execution time between the source and target\n\
    database."
  name: validation_options
  types:
  - <xref:azure.mgmt.datamigration.models.MigrationValidationOptions>
- description: Date and time relative to UTC when the migration was started on.
  name: started_on
  types:
  - <xref:str>
- description: encrypted key for secure fields.
  name: encrypted_key_for_secure_fields
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.datamigration.models.MigrateSqlServerSqlDbTaskInput.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.datamigration.models.MigrateSqlServerSqlDbTaskInput.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.datamigration.models.MigrateSqlServerSqlDbTaskInput.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.datamigration.models.MigrateSqlServerSqlDbTaskInput.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.datamigration.models.MigrateSqlServerSqlDbTaskInput.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.datamigration.models.MigrateSqlServerSqlDbTaskInput.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
