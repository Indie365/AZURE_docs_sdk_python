### YamlMime:PythonClass
uid: azure.mgmt.kubernetesconfiguration.v2022_11_01.models.FluxConfigurationPatch
name: FluxConfigurationPatch
fullName: azure.mgmt.kubernetesconfiguration.v2022_11_01.models.FluxConfigurationPatch
module: azure.mgmt.kubernetesconfiguration.v2022_11_01.models
inheritances:
- azure.mgmt.kubernetesconfiguration._serialization.Model
summary: The Flux Configuration Patch Request object.
constructor:
  syntax: 'FluxConfigurationPatch(*, source_kind: str | _models.SourceKindType | None
    = None, suspend: bool | None = None, git_repository: _models.GitRepositoryPatchDefinition
    | None = None, bucket: _models.BucketPatchDefinition | None = None, azure_blob:
    _models.AzureBlobPatchDefinition | None = None, kustomizations: Dict[str, _models.KustomizationPatchDefinition]
    | None = None, configuration_protected_settings: Dict[str, str] | None = None,
    **kwargs: Any)'
  parameters:
  - name: source_kind
    description: 'Source Kind to pull the configuration data from. Known values are:

      "GitRepository", "Bucket", and "AzureBlob".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.kubernetesconfiguration.v2022_11_01.models.SourceKindType>
  - name: suspend
    description: 'Whether this configuration should suspend its reconciliation of
      its

      kustomizations and sources.'
    types:
    - <xref:bool>
  - name: git_repository
    description: Parameters to reconcile to the GitRepository source kind type.
    types:
    - <xref:azure.mgmt.kubernetesconfiguration.v2022_11_01.models.GitRepositoryPatchDefinition>
  - name: bucket
    description: Parameters to reconcile to the Bucket source kind type.
    types:
    - <xref:azure.mgmt.kubernetesconfiguration.v2022_11_01.models.BucketPatchDefinition>
  - name: azure_blob
    description: Parameters to reconcile to the AzureBlob source kind type.
    types:
    - <xref:azure.mgmt.kubernetesconfiguration.v2022_11_01.models.AzureBlobPatchDefinition>
  - name: kustomizations
    description: 'Array of kustomizations used to reconcile the artifact pulled by
      the

      source type on the cluster.'
    types:
    - <xref:dict>[<xref:str,azure.mgmt.kubernetesconfiguration.v2022_11_01.models.KustomizationPatchDefinition>]
  - name: configuration_protected_settings
    description: 'Key-value pairs of protected configuration settings

      for the configuration.'
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
variables:
- description: 'Source Kind to pull the configuration data from. Known values are:

    "GitRepository", "Bucket", and "AzureBlob".'
  name: source_kind
  types:
  - <xref:str>
  - <xref:azure.mgmt.kubernetesconfiguration.v2022_11_01.models.SourceKindType>
- description: 'Whether this configuration should suspend its reconciliation of its

    kustomizations and sources.'
  name: suspend
  types:
  - <xref:bool>
- description: Parameters to reconcile to the GitRepository source kind type.
  name: git_repository
  types:
  - <xref:azure.mgmt.kubernetesconfiguration.v2022_11_01.models.GitRepositoryPatchDefinition>
- description: Parameters to reconcile to the Bucket source kind type.
  name: bucket
  types:
  - <xref:azure.mgmt.kubernetesconfiguration.v2022_11_01.models.BucketPatchDefinition>
- description: Parameters to reconcile to the AzureBlob source kind type.
  name: azure_blob
  types:
  - <xref:azure.mgmt.kubernetesconfiguration.v2022_11_01.models.AzureBlobPatchDefinition>
- description: 'Array of kustomizations used to reconcile the artifact pulled by the

    source type on the cluster.'
  name: kustomizations
  types:
  - <xref:dict>[<xref:str,azure.mgmt.kubernetesconfiguration.v2022_11_01.models.KustomizationPatchDefinition>]
- description: 'Key-value pairs of protected configuration settings for

    the configuration.'
  name: configuration_protected_settings
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
methods:
- uid: azure.mgmt.kubernetesconfiguration.v2022_11_01.models.FluxConfigurationPatch.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.kubernetesconfiguration.v2022_11_01.models.FluxConfigurationPatch.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.kubernetesconfiguration.v2022_11_01.models.FluxConfigurationPatch.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.kubernetesconfiguration.v2022_11_01.models.FluxConfigurationPatch.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.kubernetesconfiguration.v2022_11_01.models.FluxConfigurationPatch.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.kubernetesconfiguration.v2022_11_01.models.FluxConfigurationPatch.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
