### YamlMime:PythonClass
uid: azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.SourceControlConfiguration
name: SourceControlConfiguration
fullName: azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.SourceControlConfiguration
module: azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models
inheritances:
- azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models._models_py3.ProxyResource
summary: 'The SourceControl Configuration object returned in Get & Put response.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'SourceControlConfiguration(*, system_data: _models.SystemData | None =
    None, repository_url: str | None = None, operator_namespace: str = ''default'',
    operator_instance_name: str | None = None, operator_type: str | _models.OperatorType
    | None = None, operator_params: str | None = None, configuration_protected_settings:
    Dict[str, str] | None = None, operator_scope: str | _models.OperatorScopeType
    = ''cluster'', ssh_known_hosts_contents: str | None = None, enable_helm_operator:
    bool | None = None, helm_operator_properties: _models.HelmOperatorProperties |
    None = None, **kwargs: Any)'
  parameters:
  - name: system_data
    description: 'Top level metadata

      [https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources](https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources).'
    types:
    - <xref:azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.SystemData>
  - name: repository_url
    description: Url of the SourceControl Repository.
    types:
    - <xref:str>
  - name: operator_namespace
    description: 'The namespace to which this operator is installed to. Maximum of

      253 lower case alphanumeric characters, hyphen and period only.'
    types:
    - <xref:str>
  - name: operator_instance_name
    description: 'Instance name of the operator - identifying the specific

      configuration.'
    types:
    - <xref:str>
  - name: operator_type
    description: Type of the operator. "Flux"
    types:
    - <xref:str>
    - <xref:azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.OperatorType>
  - name: operator_params
    description: Any Parameters for the Operator instance in string format.
    types:
    - <xref:str>
  - name: configuration_protected_settings
    description: 'Name-value pairs of protected configuration settings

      for the configuration.'
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: operator_scope
    description: 'Scope at which the operator will be installed. Known values are:

      "cluster" and "namespace".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.OperatorScopeType>
  - name: ssh_known_hosts_contents
    description: 'Base64-encoded known_hosts contents containing public SSH

      keys required to access private Git instances.'
    types:
    - <xref:str>
  - name: enable_helm_operator
    description: Option to enable Helm Operator for this git configuration.
    types:
    - <xref:bool>
  - name: helm_operator_properties
    description: Properties for Helm operator.
    types:
    - <xref:azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.HelmOperatorProperties>
variables:
- description: Resource Id.
  name: id
  types:
  - <xref:str>
- description: Resource name.
  name: name
  types:
  - <xref:str>
- description: Resource type.
  name: type
  types:
  - <xref:str>
- description: 'Top level metadata

    [https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources](https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources).'
  name: system_data
  types:
  - <xref:azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.SystemData>
- description: Url of the SourceControl Repository.
  name: repository_url
  types:
  - <xref:str>
- description: 'The namespace to which this operator is installed to. Maximum of 253

    lower case alphanumeric characters, hyphen and period only.'
  name: operator_namespace
  types:
  - <xref:str>
- description: 'Instance name of the operator - identifying the specific

    configuration.'
  name: operator_instance_name
  types:
  - <xref:str>
- description: Type of the operator. "Flux"
  name: operator_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.OperatorType>
- description: Any Parameters for the Operator instance in string format.
  name: operator_params
  types:
  - <xref:str>
- description: 'Name-value pairs of protected configuration settings

    for the configuration.'
  name: configuration_protected_settings
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: 'Scope at which the operator will be installed. Known values are:

    "cluster" and "namespace".'
  name: operator_scope
  types:
  - <xref:str>
  - <xref:azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.OperatorScopeType>
- description: 'Public Key associated with this SourceControl configuration

    (either generated within the cluster or provided by the user).'
  name: repository_public_key
  types:
  - <xref:str>
- description: 'Base64-encoded known_hosts contents containing public SSH keys

    required to access private Git instances.'
  name: ssh_known_hosts_contents
  types:
  - <xref:str>
- description: Option to enable Helm Operator for this git configuration.
  name: enable_helm_operator
  types:
  - <xref:bool>
- description: Properties for Helm operator.
  name: helm_operator_properties
  types:
  - <xref:azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.HelmOperatorProperties>
- description: 'The provisioning state of the resource provider. Known values are:

    "Accepted", "Deleting", "Running", "Succeeded", and "Failed".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.ProvisioningStateType>
- description: Compliance Status of the Configuration.
  name: compliance_status
  types:
  - <xref:azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.ComplianceStatus>
methods:
- uid: azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.SourceControlConfiguration.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.SourceControlConfiguration.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.SourceControlConfiguration.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.SourceControlConfiguration.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.SourceControlConfiguration.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.kubernetesconfiguration.v2020_07_01_preview.models.SourceControlConfiguration.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
