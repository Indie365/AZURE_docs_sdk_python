### YamlMime:PythonClass
uid: azure.mgmt.botservice.models.BotProperties
name: BotProperties
fullName: azure.mgmt.botservice.models.BotProperties
module: azure.mgmt.botservice.models
inheritances:
- azure.mgmt.botservice._serialization.Model
summary: 'The parameters to provide for the Bot.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'BotProperties(*, display_name: str, endpoint: str, msa_app_id: str, description:
    str | None = None, icon_url: str = '''', all_settings: Dict[str, str] | None =
    None, parameters: Dict[str, str] | None = None, manifest_url: str | None = None,
    msa_app_type: str | _models.MsaAppType | None = None, msa_app_tenant_id: str |
    None = None, msa_app_msi_resource_id: str | None = None, developer_app_insight_key:
    str | None = None, developer_app_insights_api_key: str | None = None, developer_app_insights_application_id:
    str | None = None, luis_app_ids: List[str] | None = None, luis_key: str | None
    = None, is_cmek_enabled: bool = False, cmek_key_vault_url: str | None = None,
    tenant_id: str | None = None, public_network_access: str | _models.PublicNetworkAccess
    = ''Enabled'', is_streaming_supported: bool = False, disable_local_auth: bool
    | None = None, schema_transformation_version: str = ''0.0'', storage_resource_id:
    str | None = None, open_with_hint: str | None = None, app_password_hint: str |
    None = None, publishing_credentials: str | None = None, **kwargs)'
  parameters:
  - name: display_name
    description: The Name of the bot. Required.
    types:
    - <xref:str>
  - name: description
    description: The description of the bot.
    types:
    - <xref:str>
  - name: icon_url
    description: The Icon Url of the bot.
    types:
    - <xref:str>
  - name: endpoint
    description: The bot's endpoint. Required.
    types:
    - <xref:str>
  - name: all_settings
    description: Contains resource all settings defined as key/value pairs.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: parameters
    description: Contains resource parameters defined as key/value pairs.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: manifest_url
    description: The bot's manifest url.
    types:
    - <xref:str>
  - name: msa_app_type
    description: 'Microsoft App Type for the bot. Known values are: "UserAssignedMSI",

      "SingleTenant", and "MultiTenant".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.botservice.models.MsaAppType>
  - name: msa_app_id
    description: Microsoft App Id for the bot. Required.
    types:
    - <xref:str>
  - name: msa_app_tenant_id
    description: Microsoft App Tenant Id for the bot.
    types:
    - <xref:str>
  - name: msa_app_msi_resource_id
    description: Microsoft App Managed Identity Resource Id for the bot.
    types:
    - <xref:str>
  - name: developer_app_insight_key
    description: The Application Insights key.
    types:
    - <xref:str>
  - name: developer_app_insights_api_key
    description: The Application Insights Api Key.
    types:
    - <xref:str>
  - name: developer_app_insights_application_id
    description: The Application Insights App Id.
    types:
    - <xref:str>
  - name: luis_app_ids
    description: Collection of LUIS App Ids.
    types:
    - <xref:azure.mgmt.botservice.aio.operations.BotsOperations.list>[<xref:str>]
  - name: luis_key
    description: The LUIS Key.
    types:
    - <xref:str>
  - name: is_cmek_enabled
    description: Whether Cmek is enabled.
    types:
    - <xref:bool>
  - name: cmek_key_vault_url
    description: The CMK Url.
    types:
    - <xref:str>
  - name: tenant_id
    description: The Tenant Id for the bot.
    types:
    - <xref:str>
  - name: public_network_access
    description: 'Whether the bot is in an isolated network. Known values are:

      "Enabled" and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.botservice.models.PublicNetworkAccess>
  - name: is_streaming_supported
    description: Whether the bot is streaming supported.
    types:
    - <xref:bool>
  - name: disable_local_auth
    description: 'Opt-out of local authentication and ensure only MSI and AAD can
      be

      used exclusively for authentication.'
    types:
    - <xref:bool>
  - name: schema_transformation_version
    description: The channel schema transformation version for the bot.
    types:
    - <xref:str>
  - name: storage_resource_id
    description: The storage resourceId for the bot.
    types:
    - <xref:str>
  - name: open_with_hint
    description: 'The hint to browser (e.g. protocol handler) on how to open the bot
      for

      authoring.'
    types:
    - <xref:str>
  - name: app_password_hint
    description: 'The hint (e.g. keyVault secret resourceId) on how to fetch the app

      secret.'
    types:
    - <xref:str>
  - name: publishing_credentials
    description: Publishing credentials of the resource.
    types:
    - <xref:str>
variables:
- description: The Name of the bot. Required.
  name: display_name
  types:
  - <xref:str>
- description: The description of the bot.
  name: description
  types:
  - <xref:str>
- description: The Icon Url of the bot.
  name: icon_url
  types:
  - <xref:str>
- description: The bot's endpoint. Required.
  name: endpoint
  types:
  - <xref:str>
- description: The bot's endpoint version.
  name: endpoint_version
  types:
  - <xref:str>
- description: Contains resource all settings defined as key/value pairs.
  name: all_settings
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: Contains resource parameters defined as key/value pairs.
  name: parameters
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The bot's manifest url.
  name: manifest_url
  types:
  - <xref:str>
- description: 'Microsoft App Type for the bot. Known values are: "UserAssignedMSI",

    "SingleTenant", and "MultiTenant".'
  name: msa_app_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.botservice.models.MsaAppType>
- description: Microsoft App Id for the bot. Required.
  name: msa_app_id
  types:
  - <xref:str>
- description: Microsoft App Tenant Id for the bot.
  name: msa_app_tenant_id
  types:
  - <xref:str>
- description: Microsoft App Managed Identity Resource Id for the bot.
  name: msa_app_msi_resource_id
  types:
  - <xref:str>
- description: Collection of channels for which the bot is configured.
  name: configured_channels
  types:
  - <xref:list>[<xref:str>]
- description: Collection of channels for which the bot is enabled.
  name: enabled_channels
  types:
  - <xref:list>[<xref:str>]
- description: The Application Insights key.
  name: developer_app_insight_key
  types:
  - <xref:str>
- description: The Application Insights Api Key.
  name: developer_app_insights_api_key
  types:
  - <xref:str>
- description: The Application Insights App Id.
  name: developer_app_insights_application_id
  types:
  - <xref:str>
- description: Collection of LUIS App Ids.
  name: luis_app_ids
  types:
  - <xref:list>[<xref:str>]
- description: The LUIS Key.
  name: luis_key
  types:
  - <xref:str>
- description: Whether Cmek is enabled.
  name: is_cmek_enabled
  types:
  - <xref:bool>
- description: The CMK Url.
  name: cmek_key_vault_url
  types:
  - <xref:str>
- description: The CMK encryption status.
  name: cmek_encryption_status
  types:
  - <xref:str>
- description: The Tenant Id for the bot.
  name: tenant_id
  types:
  - <xref:str>
- description: 'Whether the bot is in an isolated network. Known values are:

    "Enabled" and "Disabled".'
  name: public_network_access
  types:
  - <xref:str>
  - <xref:azure.mgmt.botservice.models.PublicNetworkAccess>
- description: Whether the bot is streaming supported.
  name: is_streaming_supported
  types:
  - <xref:bool>
- description: Whether the bot is developerAppInsightsApiKey set.
  name: is_developer_app_insights_api_key_set
  types:
  - <xref:bool>
- description: Token used to migrate non Azure bot to azure subscription.
  name: migration_token
  types:
  - <xref:str>
- description: 'Opt-out of local authentication and ensure only MSI and AAD can be

    used exclusively for authentication.'
  name: disable_local_auth
  types:
  - <xref:bool>
- description: The channel schema transformation version for the bot.
  name: schema_transformation_version
  types:
  - <xref:str>
- description: The storage resourceId for the bot.
  name: storage_resource_id
  types:
  - <xref:str>
- description: 'List of Private Endpoint Connections configured for the

    bot.'
  name: private_endpoint_connections
  types:
  - <xref:list>[<xref:azure.mgmt.botservice.models.PrivateEndpointConnection>]
- description: 'The hint to browser (e.g. protocol handler) on how to open the bot
    for

    authoring.'
  name: open_with_hint
  types:
  - <xref:str>
- description: 'The hint (e.g. keyVault secret resourceId) on how to fetch the app

    secret.'
  name: app_password_hint
  types:
  - <xref:str>
- description: Provisioning state of the resource.
  name: provisioning_state
  types:
  - <xref:str>
- description: Publishing credentials of the resource.
  name: publishing_credentials
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.botservice.models.BotProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.botservice.models.BotProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.botservice.models.BotProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.botservice.models.BotProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.botservice.models.BotProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.botservice.models.BotProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
