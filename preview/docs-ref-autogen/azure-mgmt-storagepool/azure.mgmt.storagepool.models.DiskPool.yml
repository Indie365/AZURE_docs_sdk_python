### YamlMime:PythonClass
uid: azure.mgmt.storagepool.models.DiskPool
name: DiskPool
fullName: azure.mgmt.storagepool.models.DiskPool
module: azure.mgmt.storagepool.models
inheritances:
- azure.mgmt.storagepool.models._models_py3.TrackedResource
summary: 'Response for Disk Pool request.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'DiskPool(*, location: str, availability_zones: List[str], status: str |
    _models.OperationalStatus, subnet_id: str, tags: Dict[str, str] | None = None,
    disks: List[_models.Disk] | None = None, additional_capabilities: List[str] |
    None = None, name_sku_name: str | None = None, tier: str | None = None, **kwargs)'
  parameters:
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: location
    description: The geo-location where the resource lives. Required.
    types:
    - <xref:str>
  - name: availability_zones
    description: 'Logical zone for Disk Pool resource; example: ["1"]. Required.'
    types:
    - <xref:azure.mgmt.storagepool.aio.operations.DiskPoolZonesOperations.list>[<xref:str>]
  - name: status
    description: 'Operational status of the Disk Pool. Required. Known values are:
      "Invalid",

      "Unknown", "Healthy", "Unhealthy", "Updating", "Running", "Stopped", and "Stopped

      (deallocated)".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.storagepool.models.OperationalStatus>
  - name: disks
    description: List of Azure Managed Disks to attach to a Disk Pool.
    types:
    - <xref:azure.mgmt.storagepool.aio.operations.DiskPoolZonesOperations.list>[<xref:azure.mgmt.storagepool.models.Disk>]
  - name: subnet_id
    description: Azure Resource ID of a Subnet for the Disk Pool. Required.
    types:
    - <xref:str>
  - name: additional_capabilities
    description: List of additional capabilities for Disk Pool.
    types:
    - <xref:azure.mgmt.storagepool.aio.operations.DiskPoolZonesOperations.list>[<xref:str>]
  - name: name_sku_name
    description: Sku name.
    types:
    - <xref:str>
  - name: tier
    description: Sku tier.
    types:
    - <xref:str>
variables:
- description: 'Fully qualified resource Id for the resource. Ex -

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: 'The type of the resource. Ex- Microsoft.Compute/virtualMachines or

    Microsoft.Storage/storageAccounts.'
  name: type
  types:
  - <xref:str>
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The geo-location where the resource lives. Required.
  name: location
  types:
  - <xref:str>
- description: 'Azure resource id. Indicates if this resource is managed by another
    Azure

    resource.'
  name: managed_by
  types:
  - <xref:str>
- description: List of Azure resource ids that manage this resource.
  name: managed_by_extended
  types:
  - <xref:list>[<xref:str>]
- description: Resource metadata required by ARM RPC.
  name: system_data
  types:
  - <xref:azure.mgmt.storagepool.models.SystemMetadata>
- description: 'State of the operation on the resource. Required. Known values are:

    "Invalid", "Succeeded", "Failed", "Canceled", "Pending", "Creating", "Updating",
    and

    "Deleting".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.storagepool.models.ProvisioningStates>
- description: 'Logical zone for Disk Pool resource; example: ["1"]. Required.'
  name: availability_zones
  types:
  - <xref:list>[<xref:str>]
- description: 'Operational status of the Disk Pool. Required. Known values are: "Invalid",

    "Unknown", "Healthy", "Unhealthy", "Updating", "Running", "Stopped", and "Stopped

    (deallocated)".'
  name: status
  types:
  - <xref:str>
  - <xref:azure.mgmt.storagepool.models.OperationalStatus>
- description: List of Azure Managed Disks to attach to a Disk Pool.
  name: disks
  types:
  - <xref:list>[<xref:azure.mgmt.storagepool.models.Disk>]
- description: Azure Resource ID of a Subnet for the Disk Pool. Required.
  name: subnet_id
  types:
  - <xref:str>
- description: List of additional capabilities for Disk Pool.
  name: additional_capabilities
  types:
  - <xref:list>[<xref:str>]
- description: Sku name.
  name: name_sku_name
  types:
  - <xref:str>
- description: Sku tier.
  name: tier
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.storagepool.models.DiskPool.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.storagepool.models.DiskPool.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.storagepool.models.DiskPool.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.storagepool.models.DiskPool.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.storagepool.models.DiskPool.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.storagepool.models.DiskPool.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
