### YamlMime:PythonClass
uid: azure.mgmt.machinelearningservices.models.AutoMLJob
name: AutoMLJob
fullName: azure.mgmt.machinelearningservices.models.AutoMLJob
module: azure.mgmt.machinelearningservices.models
inheritances:
- azure.mgmt.machinelearningservices.models._models_py3.JobBaseProperties
summary: "AutoMLJob class.\nUse this class for executing AutoML tasks like Classification/Regression\
  \ etc.\nSee TaskType enum for all the tasks supported.\n\n   Variables are only\
  \ populated by the server, and will be ignored when sending a request.\n\n   All\
  \ required parameters must be populated in order to send to Azure.\n\n   ivar description:\n\
  \      The asset description text.\n\n   vartype description:\n      str\n\n   ivar\
  \ properties:\n      The asset property dictionary.\n\n   vartype properties:\n\
  \      dict[str, str]\n\n   ivar tags:\n      Tag dictionary. Tags can be added,\
  \ removed, and updated.\n\n   vartype tags:\n      dict[str, str]\n\n   ivar component_id:\n\
  \      ARM resource ID of the component resource.\n\n   vartype component_id:\n\
  \      str\n\n   ivar compute_id:\n      ARM resource ID of the compute resource.\n\
  \n   vartype compute_id:\n      str\n\n   ivar display_name:\n      Display name\
  \ of job.\n\n   vartype display_name:\n      str\n\n   ivar experiment_name:\n \
  \     The name of the experiment the job belongs to. If not set, the job is\n  \
  \    placed in the \"Default\" experiment.\n\n   vartype experiment_name:\n    \
  \  str\n\n   ivar identity:\n      Identity configuration. If set, this should be\
  \ one of AmlToken,\n      ManagedIdentity, UserIdentity or null.\n      Defaults\
  \ to AmlToken if null.\n\n   vartype identity:\n      ~azure.mgmt.machinelearningservices.models.IdentityConfiguration\n\
  \n   ivar is_archived:\n      Is the asset archived?.\n\n   vartype is_archived:\n\
  \      bool\n\n   ivar job_type:\n      [Required] Specifies the type of job. Required.\
  \ Known values are: \"AutoML\",\n      \"Command\", \"Sweep\", and \"Pipeline\"\
  .\n\n   vartype job_type:\n      str or ~azure.mgmt.machinelearningservices.models.JobType\n\
  \n   ivar services:\n      List of JobEndpoints.\n      For local jobs, a job endpoint\
  \ will have an endpoint value of FileStreamObject.\n\n   vartype services:\n   \
  \   dict[str, ~azure.mgmt.machinelearningservices.models.JobService]\n\n   ivar\
  \ status:\n      Status of the job. Known values are: \"NotStarted\", \"Starting\"\
  , \"Provisioning\",\n      \"Preparing\", \"Queued\", \"Running\", \"Finalizing\"\
  , \"CancelRequested\", \"Completed\", \"Failed\",\n      \"Canceled\", \"NotResponding\"\
  , \"Paused\", and \"Unknown\".\n\n   vartype status:\n      str or ~azure.mgmt.machinelearningservices.models.JobStatus\n\
  \n   ivar environment_id:\n      The ARM resource ID of the Environment specification\
  \ for the job.\n      This is optional value to provide, if not provided, AutoML\
  \ will default this to Production\n      AutoML curated environment version when\
  \ running the job.\n\n   vartype environment_id:\n      str\n\n   ivar environment_variables:\n\
  \      Environment variables included in the job.\n\n   vartype environment_variables:\n\
  \      dict[str, str]\n\n   ivar outputs:\n      Mapping of output data bindings\
  \ used in the job.\n\n   vartype outputs:\n      dict[str, ~azure.mgmt.machinelearningservices.models.JobOutput]\n\
  \n   ivar resources:\n      Compute Resource configuration for the job.\n\n   vartype\
  \ resources:\n      ~azure.mgmt.machinelearningservices.models.JobResourceConfiguration\n\
  \n   ivar task_details:\n      [Required] This represents scenario which can be\
  \ one of Tables/NLP/Image.\n      Required.\n\n   vartype task_details:\n      ~azure.mgmt.machinelearningservices.models.AutoMLVertical"
constructor:
  syntax: 'AutoMLJob(*, task_details: _models.AutoMLVertical, description: str | None
    = None, properties: Dict[str, str] | None = None, tags: Dict[str, str] | None
    = None, component_id: str | None = None, compute_id: str | None = None, display_name:
    str | None = None, experiment_name: str = ''Default'', identity: _models.IdentityConfiguration
    | None = None, is_archived: bool = False, services: Dict[str, _models.JobService]
    | None = None, environment_id: str | None = None, environment_variables: Dict[str,
    str] | None = None, outputs: Dict[str, _models.JobOutput] | None = None, resources:
    _models.JobResourceConfiguration | None = None, **kwargs)'
  parameters:
  - name: description
    description: The asset description text.
    types:
    - <xref:str>
  - name: properties
    description: The asset property dictionary.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: tags
    description: Tag dictionary. Tags can be added, removed, and updated.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: component_id
    description: ARM resource ID of the component resource.
    types:
    - <xref:str>
  - name: compute_id
    description: ARM resource ID of the compute resource.
    types:
    - <xref:str>
  - name: display_name
    description: Display name of job.
    types:
    - <xref:str>
  - name: experiment_name
    description: 'The name of the experiment the job belongs to. If not set, the job
      is

      placed in the "Default" experiment.'
    types:
    - <xref:str>
  - name: identity
    description: 'Identity configuration. If set, this should be one of AmlToken,

      ManagedIdentity, UserIdentity or null.

      Defaults to AmlToken if null.'
    types:
    - <xref:azure.mgmt.machinelearningservices.models.IdentityConfiguration>
  - name: is_archived
    description: Is the asset archived?.
    types:
    - <xref:bool>
  - name: services
    description: 'List of JobEndpoints.

      For local jobs, a job endpoint will have an endpoint value of FileStreamObject.'
    types:
    - <xref:dict>[<xref:str>, <xref:azure.mgmt.machinelearningservices.models.JobService>]
  - name: environment_id
    description: 'The ARM resource ID of the Environment specification for the job.

      This is optional value to provide, if not provided, AutoML will default this
      to Production

      AutoML curated environment version when running the job.'
    types:
    - <xref:str>
  - name: environment_variables
    description: Environment variables included in the job.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: outputs
    description: Mapping of output data bindings used in the job.
    types:
    - <xref:dict>[<xref:str>, <xref:azure.mgmt.machinelearningservices.models.JobOutput>]
  - name: resources
    description: Compute Resource configuration for the job.
    types:
    - <xref:azure.mgmt.machinelearningservices.models.JobResourceConfiguration>
  - name: task_details
    description: '[Required] This represents scenario which can be one of

      Tables/NLP/Image. Required.'
    types:
    - <xref:azure.mgmt.machinelearningservices.models.AutoMLVertical>
methods:
- uid: azure.mgmt.machinelearningservices.models.AutoMLJob.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.machinelearningservices.models.AutoMLJob.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.machinelearningservices.models.AutoMLJob.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.machinelearningservices.models.AutoMLJob.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.machinelearningservices.models.AutoMLJob.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.machinelearningservices.models.AutoMLJob.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
