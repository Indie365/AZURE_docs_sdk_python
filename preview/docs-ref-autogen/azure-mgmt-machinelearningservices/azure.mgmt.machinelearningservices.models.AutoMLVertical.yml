### YamlMime:PythonClass
uid: azure.mgmt.machinelearningservices.models.AutoMLVertical
name: AutoMLVertical
fullName: azure.mgmt.machinelearningservices.models.AutoMLVertical
module: azure.mgmt.machinelearningservices.models
inheritances:
- azure.mgmt.machinelearningservices._serialization.Model
summary: "AutoML vertical class.\nBase class for AutoML verticals - TableVertical/ImageVertical/NLPVertical.\n\
  \n   You probably want to use the sub-classes and not this class directly. Known\
  \ sub-classes are:\n   Classification, Forecasting, ImageClassification, ImageClassificationMultilabel,\n\
  \   ImageInstanceSegmentation, ImageObjectDetection, Regression, TextClassification,\n\
  \   TextClassificationMultilabel, TextNer\n\n   All required parameters must be\
  \ populated in order to send to Azure.\n\n   ivar log_verbosity:\n      Log verbosity\
  \ for the job. Known values are: \"NotSet\", \"Debug\", \"Info\",\n      \"Warning\"\
  , \"Error\", and \"Critical\".\n\n   vartype log_verbosity:\n      str or ~azure.mgmt.machinelearningservices.models.LogVerbosity\n\
  \n   ivar target_column_name:\n      Target column name: This is prediction values\
  \ column.\n      Also known as label column name in context of classification tasks.\n\
  \n   vartype target_column_name:\n      str\n\n   ivar task_type:\n      [Required]\
  \ Task type for AutoMLJob. Required. Known values are:\n      \"Classification\"\
  , \"Regression\", \"Forecasting\", \"ImageClassification\",\n      \"ImageClassificationMultilabel\"\
  , \"ImageObjectDetection\", \"ImageInstanceSegmentation\",\n      \"TextClassification\"\
  , \"TextClassificationMultilabel\", and \"TextNER\".\n\n   vartype task_type:\n\
  \      str or ~azure.mgmt.machinelearningservices.models.TaskType\n\n   ivar training_data:\n\
  \      [Required] Training data input. Required.\n\n   vartype training_data:\n\
  \      ~azure.mgmt.machinelearningservices.models.MLTableJobInput"
constructor:
  syntax: 'AutoMLVertical(*, training_data: _models.MLTableJobInput, log_verbosity:
    str | _models.LogVerbosity | None = None, target_column_name: str | None = None,
    **kwargs)'
  parameters:
  - name: log_verbosity
    description: 'Log verbosity for the job. Known values are: "NotSet", "Debug",
      "Info",

      "Warning", "Error", and "Critical".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.machinelearningservices.models.LogVerbosity>
  - name: target_column_name
    description: 'Target column name: This is prediction values column.

      Also known as label column name in context of classification tasks.'
    types:
    - <xref:str>
  - name: training_data
    description: '[Required] Training data input. Required.'
    types:
    - <xref:azure.mgmt.machinelearningservices.models.MLTableJobInput>
methods:
- uid: azure.mgmt.machinelearningservices.models.AutoMLVertical.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.machinelearningservices.models.AutoMLVertical.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.machinelearningservices.models.AutoMLVertical.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.machinelearningservices.models.AutoMLVertical.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.machinelearningservices.models.AutoMLVertical.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.machinelearningservices.models.AutoMLVertical.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
