### YamlMime:PythonClass
uid: azure.mgmt.machinelearningservices.models.ForecastingTrainingSettings
name: ForecastingTrainingSettings
fullName: azure.mgmt.machinelearningservices.models.ForecastingTrainingSettings
module: azure.mgmt.machinelearningservices.models
inheritances:
- azure.mgmt.machinelearningservices.models._models_py3.TrainingSettings
summary: Forecasting Training related configuration.
constructor:
  syntax: 'ForecastingTrainingSettings(*, enable_dnn_training: bool = False, enable_model_explainability:
    bool = True, enable_onnx_compatible_models: bool = False, enable_stack_ensemble:
    bool = True, enable_vote_ensemble: bool = True, ensemble_model_download_timeout:
    timedelta = ''PT5M'', stack_ensemble_settings: _models.StackEnsembleSettings |
    None = None, allowed_training_algorithms: List[str | _models.ForecastingModels]
    | None = None, blocked_training_algorithms: List[str | _models.ForecastingModels]
    | None = None, **kwargs)'
  parameters:
  - name: enable_dnn_training
    description: Enable recommendation of DNN models.
    types:
    - <xref:bool>
  - name: enable_model_explainability
    description: Flag to turn on explainability on best model.
    types:
    - <xref:bool>
  - name: enable_onnx_compatible_models
    description: Flag for enabling onnx compatible models.
    types:
    - <xref:bool>
  - name: enable_stack_ensemble
    description: Enable stack ensemble run.
    types:
    - <xref:bool>
  - name: enable_vote_ensemble
    description: Enable voting ensemble run.
    types:
    - <xref:bool>
  - name: ensemble_model_download_timeout
    description: 'During VotingEnsemble and StackEnsemble model

      generation, multiple fitted models from the previous child runs are downloaded.

      Configure this parameter with a higher value than 300 secs, if more time is
      needed.'
    types:
    - <xref:datetime.timedelta>
  - name: stack_ensemble_settings
    description: Stack ensemble settings for stack ensemble run.
    types:
    - <xref:azure.mgmt.machinelearningservices.models.StackEnsembleSettings>
  - name: allowed_training_algorithms
    description: Allowed models for forecasting task.
    types:
    - <xref:azure.mgmt.machinelearningservices.aio.operations.BatchDeploymentsOperations.list>[<xref:str>
    - <xref:azure.mgmt.machinelearningservices.models.ForecastingModels>]
  - name: blocked_training_algorithms
    description: Blocked models for forecasting task.
    types:
    - <xref:azure.mgmt.machinelearningservices.aio.operations.BatchDeploymentsOperations.list>[<xref:str>
    - <xref:azure.mgmt.machinelearningservices.models.ForecastingModels>]
variables:
- description: Enable recommendation of DNN models.
  name: enable_dnn_training
  types:
  - <xref:bool>
- description: Flag to turn on explainability on best model.
  name: enable_model_explainability
  types:
  - <xref:bool>
- description: Flag for enabling onnx compatible models.
  name: enable_onnx_compatible_models
  types:
  - <xref:bool>
- description: Enable stack ensemble run.
  name: enable_stack_ensemble
  types:
  - <xref:bool>
- description: Enable voting ensemble run.
  name: enable_vote_ensemble
  types:
  - <xref:bool>
- description: 'During VotingEnsemble and StackEnsemble model

    generation, multiple fitted models from the previous child runs are downloaded.

    Configure this parameter with a higher value than 300 secs, if more time is needed.'
  name: ensemble_model_download_timeout
  types:
  - <xref:datetime.timedelta>
- description: Stack ensemble settings for stack ensemble run.
  name: stack_ensemble_settings
  types:
  - <xref:azure.mgmt.machinelearningservices.models.StackEnsembleSettings>
- description: Allowed models for forecasting task.
  name: allowed_training_algorithms
  types:
  - <xref:list>[<xref:str>
  - <xref:azure.mgmt.machinelearningservices.models.ForecastingModels>]
- description: Blocked models for forecasting task.
  name: blocked_training_algorithms
  types:
  - <xref:list>[<xref:str>
  - <xref:azure.mgmt.machinelearningservices.models.ForecastingModels>]
methods:
- uid: azure.mgmt.machinelearningservices.models.ForecastingTrainingSettings.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.machinelearningservices.models.ForecastingTrainingSettings.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.machinelearningservices.models.ForecastingTrainingSettings.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.machinelearningservices.models.ForecastingTrainingSettings.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.machinelearningservices.models.ForecastingTrainingSettings.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.machinelearningservices.models.ForecastingTrainingSettings.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
