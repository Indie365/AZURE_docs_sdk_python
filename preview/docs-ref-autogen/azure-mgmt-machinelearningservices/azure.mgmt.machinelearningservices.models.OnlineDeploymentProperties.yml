### YamlMime:PythonClass
uid: azure.mgmt.machinelearningservices.models.OnlineDeploymentProperties
name: OnlineDeploymentProperties
fullName: azure.mgmt.machinelearningservices.models.OnlineDeploymentProperties
module: azure.mgmt.machinelearningservices.models
inheritances:
- azure.mgmt.machinelearningservices.models._models_py3.EndpointDeploymentPropertiesBase
summary: 'OnlineDeploymentProperties.


  You probably want to use the sub-classes and not this class directly. Known sub-classes
  are:

  KubernetesOnlineDeployment, ManagedOnlineDeployment


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'OnlineDeploymentProperties(*, code_configuration: _models.CodeConfiguration
    | None = None, description: str | None = None, environment_id: str | None = None,
    environment_variables: Dict[str, str] | None = None, properties: Dict[str, str]
    | None = None, app_insights_enabled: bool = False, egress_public_network_access:
    str | _models.EgressPublicNetworkAccessType | None = None, instance_type: str
    | None = None, liveness_probe: _models.ProbeSettings | None = None, model: str
    | None = None, model_mount_path: str | None = None, readiness_probe: _models.ProbeSettings
    | None = None, request_settings: _models.OnlineRequestSettings | None = None,
    scale_settings: _models.OnlineScaleSettings | None = None, **kwargs)'
  parameters:
  - name: code_configuration
    description: Code configuration for the endpoint deployment.
    types:
    - <xref:azure.mgmt.machinelearningservices.models.CodeConfiguration>
  - name: description
    description: Description of the endpoint deployment.
    types:
    - <xref:str>
  - name: environment_id
    description: 'ARM resource ID or AssetId of the environment specification for
      the

      endpoint deployment.'
    types:
    - <xref:str>
  - name: environment_variables
    description: Environment variables configuration for the deployment.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: properties
    description: Property dictionary. Properties can be added, but not removed or
      altered.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: app_insights_enabled
    description: If true, enables Application Insights logging.
    types:
    - <xref:bool>
  - name: egress_public_network_access
    description: 'If Enabled, allow egress public network access. If

      Disabled, this will create secure egress. Default: Enabled. Known values are:
      "Enabled" and

      "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.machinelearningservices.models.EgressPublicNetworkAccessType>
  - name: instance_type
    description: Compute instance type.
    types:
    - <xref:str>
  - name: liveness_probe
    description: Liveness probe monitors the health of the container regularly.
    types:
    - <xref:azure.mgmt.machinelearningservices.models.ProbeSettings>
  - name: model
    description: The URI path to the model.
    types:
    - <xref:str>
  - name: model_mount_path
    description: The path to mount the model in custom container.
    types:
    - <xref:str>
  - name: readiness_probe
    description: 'Readiness probe validates if the container is ready to serve traffic.

      The properties and defaults are the same as liveness probe.'
    types:
    - <xref:azure.mgmt.machinelearningservices.models.ProbeSettings>
  - name: request_settings
    description: Request settings for the deployment.
    types:
    - <xref:azure.mgmt.machinelearningservices.models.OnlineRequestSettings>
  - name: scale_settings
    description: 'Scale settings for the deployment.

      If it is null or not provided,

      it defaults to TargetUtilizationScaleSettings for KubernetesOnlineDeployment

      and to DefaultScaleSettings for ManagedOnlineDeployment.'
    types:
    - <xref:azure.mgmt.machinelearningservices.models.OnlineScaleSettings>
variables:
- description: Code configuration for the endpoint deployment.
  name: code_configuration
  types:
  - <xref:azure.mgmt.machinelearningservices.models.CodeConfiguration>
- description: Description of the endpoint deployment.
  name: description
  types:
  - <xref:str>
- description: 'ARM resource ID or AssetId of the environment specification for the

    endpoint deployment.'
  name: environment_id
  types:
  - <xref:str>
- description: Environment variables configuration for the deployment.
  name: environment_variables
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: Property dictionary. Properties can be added, but not removed or altered.
  name: properties
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: If true, enables Application Insights logging.
  name: app_insights_enabled
  types:
  - <xref:bool>
- description: 'If Enabled, allow egress public network access. If

    Disabled, this will create secure egress. Default: Enabled. Known values are:
    "Enabled" and

    "Disabled".'
  name: egress_public_network_access
  types:
  - <xref:str>
  - <xref:azure.mgmt.machinelearningservices.models.EgressPublicNetworkAccessType>
- description: '[Required] The compute type of the endpoint. Required. Known

    values are: "Managed", "Kubernetes", and "AzureMLCompute".'
  name: endpoint_compute_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.machinelearningservices.models.EndpointComputeType>
- description: Compute instance type.
  name: instance_type
  types:
  - <xref:str>
- description: Liveness probe monitors the health of the container regularly.
  name: liveness_probe
  types:
  - <xref:azure.mgmt.machinelearningservices.models.ProbeSettings>
- description: The URI path to the model.
  name: model
  types:
  - <xref:str>
- description: The path to mount the model in custom container.
  name: model_mount_path
  types:
  - <xref:str>
- description: 'Provisioning state for the endpoint deployment. Known values are:

    "Creating", "Deleting", "Scaling", "Updating", "Succeeded", "Failed", and "Canceled".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.machinelearningservices.models.DeploymentProvisioningState>
- description: 'Readiness probe validates if the container is ready to serve traffic.

    The properties and defaults are the same as liveness probe.'
  name: readiness_probe
  types:
  - <xref:azure.mgmt.machinelearningservices.models.ProbeSettings>
- description: Request settings for the deployment.
  name: request_settings
  types:
  - <xref:azure.mgmt.machinelearningservices.models.OnlineRequestSettings>
- description: 'Scale settings for the deployment.

    If it is null or not provided,

    it defaults to TargetUtilizationScaleSettings for KubernetesOnlineDeployment

    and to DefaultScaleSettings for ManagedOnlineDeployment.'
  name: scale_settings
  types:
  - <xref:azure.mgmt.machinelearningservices.models.OnlineScaleSettings>
methods:
- uid: azure.mgmt.machinelearningservices.models.OnlineDeploymentProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.machinelearningservices.models.OnlineDeploymentProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.machinelearningservices.models.OnlineDeploymentProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.machinelearningservices.models.OnlineDeploymentProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.machinelearningservices.models.OnlineDeploymentProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.machinelearningservices.models.OnlineDeploymentProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
