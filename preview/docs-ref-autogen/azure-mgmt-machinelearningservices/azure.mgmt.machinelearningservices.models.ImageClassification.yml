### YamlMime:PythonClass
uid: azure.mgmt.machinelearningservices.models.ImageClassification
name: ImageClassification
fullName: azure.mgmt.machinelearningservices.models.ImageClassification
module: azure.mgmt.machinelearningservices.models
inheritances:
- azure.mgmt.machinelearningservices.models._models_py3.ImageClassificationBase
- azure.mgmt.machinelearningservices.models._models_py3.AutoMLVertical
summary: "Image Classification. Multi-class image classification is used when an image\
  \ is classified with only a single label\nfrom a set of classes - e.g. each image\
  \ is classified as either an image of a 'cat' or a 'dog' or a 'duck'.\n\n   All\
  \ required parameters must be populated in order to send to Azure.\n\n   ivar log_verbosity:\n\
  \      Log verbosity for the job. Known values are: \"NotSet\", \"Debug\", \"Info\"\
  ,\n      \"Warning\", \"Error\", and \"Critical\".\n\n   vartype log_verbosity:\n\
  \      str or ~azure.mgmt.machinelearningservices.models.LogVerbosity\n\n   ivar\
  \ target_column_name:\n      Target column name: This is prediction values column.\n\
  \      Also known as label column name in context of classification tasks.\n\n \
  \  vartype target_column_name:\n      str\n\n   ivar task_type:\n      [Required]\
  \ Task type for AutoMLJob. Required. Known values are:\n      \"Classification\"\
  , \"Regression\", \"Forecasting\", \"ImageClassification\",\n      \"ImageClassificationMultilabel\"\
  , \"ImageObjectDetection\", \"ImageInstanceSegmentation\",\n      \"TextClassification\"\
  , \"TextClassificationMultilabel\", and \"TextNER\".\n\n   vartype task_type:\n\
  \      str or ~azure.mgmt.machinelearningservices.models.TaskType\n\n   ivar training_data:\n\
  \      [Required] Training data input. Required.\n\n   vartype training_data:\n\
  \      ~azure.mgmt.machinelearningservices.models.MLTableJobInput\n\n   ivar limit_settings:\n\
  \      [Required] Limit settings for the AutoML job. Required.\n\n   vartype limit_settings:\n\
  \      ~azure.mgmt.machinelearningservices.models.ImageLimitSettings\n\n   ivar\
  \ sweep_settings:\n      Model sweeping and hyperparameter sweeping related settings.\n\
  \n   vartype sweep_settings:\n      ~azure.mgmt.machinelearningservices.models.ImageSweepSettings\n\
  \n   ivar validation_data:\n      Validation data inputs.\n\n   vartype validation_data:\n\
  \      ~azure.mgmt.machinelearningservices.models.MLTableJobInput\n\n   ivar validation_data_size:\n\
  \      The fraction of training dataset that needs to be set aside for\n      validation\
  \ purpose.\n      Values between (0.0 , 1.0)\n      Applied when validation dataset\
  \ is not provided.\n\n   vartype validation_data_size:\n      float\n\n   ivar model_settings:\n\
  \      Settings used for training the model.\n\n   vartype model_settings:\n   \
  \   ~azure.mgmt.machinelearningservices.models.ImageModelSettingsClassification\n\
  \n   ivar search_space:\n      Search space for sampling different combinations\
  \ of models and their\n      hyperparameters.\n\n   vartype search_space:\n    \
  \  list[~azure.mgmt.machinelearningservices.models.ImageModelDistributionSettingsClassification]\n\
  \n   ivar primary_metric:\n      Primary metric to optimize for this task. Known\
  \ values are:\n      \"AUCWeighted\", \"Accuracy\", \"NormMacroRecall\", \"AveragePrecisionScoreWeighted\"\
  , and\n      \"PrecisionScoreWeighted\".\n\n   vartype primary_metric:\n      str\
  \ or\n      ~azure.mgmt.machinelearningservices.models.ClassificationPrimaryMetrics"
constructor:
  syntax: 'ImageClassification(*, training_data: _models.MLTableJobInput, limit_settings:
    _models.ImageLimitSettings, log_verbosity: str | _models.LogVerbosity | None =
    None, target_column_name: str | None = None, sweep_settings: _models.ImageSweepSettings
    | None = None, validation_data: _models.MLTableJobInput | None = None, validation_data_size:
    float | None = None, model_settings: _models.ImageModelSettingsClassification
    | None = None, search_space: List[_models.ImageModelDistributionSettingsClassification]
    | None = None, primary_metric: str | _models.ClassificationPrimaryMetrics | None
    = None, **kwargs)'
  parameters:
  - name: log_verbosity
    description: 'Log verbosity for the job. Known values are: "NotSet", "Debug",
      "Info",

      "Warning", "Error", and "Critical".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.machinelearningservices.models.LogVerbosity>
  - name: target_column_name
    description: 'Target column name: This is prediction values column.

      Also known as label column name in context of classification tasks.'
    types:
    - <xref:str>
  - name: training_data
    description: '[Required] Training data input. Required.'
    types:
    - <xref:azure.mgmt.machinelearningservices.models.MLTableJobInput>
  - name: limit_settings
    description: '[Required] Limit settings for the AutoML job. Required.'
    types:
    - <xref:azure.mgmt.machinelearningservices.models.ImageLimitSettings>
  - name: sweep_settings
    description: Model sweeping and hyperparameter sweeping related settings.
    types:
    - <xref:azure.mgmt.machinelearningservices.models.ImageSweepSettings>
  - name: validation_data
    description: Validation data inputs.
    types:
    - <xref:azure.mgmt.machinelearningservices.models.MLTableJobInput>
  - name: validation_data_size
    description: 'The fraction of training dataset that needs to be set aside for

      validation purpose.

      Values between (0.0 , 1.0)

      Applied when validation dataset is not provided.'
    types:
    - <xref:float>
  - name: model_settings
    description: Settings used for training the model.
    types:
    - <xref:azure.mgmt.machinelearningservices.models.ImageModelSettingsClassification>
  - name: search_space
    description: 'Search space for sampling different combinations of models and their

      hyperparameters.'
    types:
    - <xref:azure.mgmt.machinelearningservices.aio.operations.BatchDeploymentsOperations.list>[<xref:azure.mgmt.machinelearningservices.models.ImageModelDistributionSettingsClassification>]
  - name: primary_metric
    description: 'Primary metric to optimize for this task. Known values are:

      "AUCWeighted", "Accuracy", "NormMacroRecall", "AveragePrecisionScoreWeighted",
      and

      "PrecisionScoreWeighted".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.machinelearningservices.models.ClassificationPrimaryMetrics>
methods:
- uid: azure.mgmt.machinelearningservices.models.ImageClassification.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.machinelearningservices.models.ImageClassification.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.machinelearningservices.models.ImageClassification.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.machinelearningservices.models.ImageClassification.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.machinelearningservices.models.ImageClassification.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.machinelearningservices.models.ImageClassification.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
