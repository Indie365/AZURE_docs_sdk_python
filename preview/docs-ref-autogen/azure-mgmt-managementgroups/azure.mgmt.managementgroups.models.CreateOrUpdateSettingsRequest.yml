### YamlMime:PythonClass
uid: azure.mgmt.managementgroups.models.CreateOrUpdateSettingsRequest
name: CreateOrUpdateSettingsRequest
fullName: azure.mgmt.managementgroups.models.CreateOrUpdateSettingsRequest
module: azure.mgmt.managementgroups.models
inheritances:
- azure.mgmt.managementgroups._serialization.Model
summary: Parameters for creating or updating Management Group settings.
constructor:
  syntax: 'CreateOrUpdateSettingsRequest(*, require_authorization_for_group_creation:
    bool | None = None, default_management_group: str | None = None, **kwargs)'
  parameters:
  - name: require_authorization_for_group_creation
    description: 'Indicates whether RBAC access is required

      upon group creation under the root Management Group. If set to true, user will
      require

      Microsoft.Management/managementGroups/write action on the root Management Group
      scope in order

      to create new Groups directly under the root. This will prevent new users from
      creating new

      Management Groups, unless they are given access.'
    types:
    - <xref:bool>
  - name: default_management_group
    description: 'Settings that sets the default Management Group under which

      new subscriptions get added in this tenant. For example,

      /providers/Microsoft.Management/managementGroups/defaultGroup.'
    types:
    - <xref:str>
variables:
- description: 'Indicates whether RBAC access is required upon

    group creation under the root Management Group. If set to true, user will require

    Microsoft.Management/managementGroups/write action on the root Management Group
    scope in order

    to create new Groups directly under the root. This will prevent new users from
    creating new

    Management Groups, unless they are given access.'
  name: require_authorization_for_group_creation
  types:
  - <xref:bool>
- description: 'Settings that sets the default Management Group under which new

    subscriptions get added in this tenant. For example,

    /providers/Microsoft.Management/managementGroups/defaultGroup.'
  name: default_management_group
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.managementgroups.models.CreateOrUpdateSettingsRequest.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.managementgroups.models.CreateOrUpdateSettingsRequest.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.managementgroups.models.CreateOrUpdateSettingsRequest.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.managementgroups.models.CreateOrUpdateSettingsRequest.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.managementgroups.models.CreateOrUpdateSettingsRequest.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.managementgroups.models.CreateOrUpdateSettingsRequest.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
