### YamlMime:PythonClass
uid: azure.mgmt.vmwarecloudsimple.models.DedicatedCloudNode
name: DedicatedCloudNode
fullName: azure.mgmt.vmwarecloudsimple.models.DedicatedCloudNode
module: azure.mgmt.vmwarecloudsimple.models
inheritances:
- azure.mgmt.vmwarecloudsimple._serialization.Model
summary: 'Dedicated cloud node model.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'DedicatedCloudNode(*, location: str, sku: _models.Sku | None = None, tags:
    Dict[str, str] | None = None, availability_zone_id: str | None = None, nodes_count:
    int | None = None, placement_group_id: str | None = None, purchase_id: str | None
    = None, id_properties_sku_description_id: str | None = None, name_properties_sku_description_name:
    str | None = None, **kwargs)'
  parameters:
  - name: location
    description: Azure region. Required.
    types:
    - <xref:str>
  - name: sku
    description: Dedicated Cloud Nodes SKU.
    types:
    - <xref:azure.mgmt.vmwarecloudsimple.models.Sku>
  - name: tags
    description: Dedicated Cloud Nodes tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: availability_zone_id
    description: Availability Zone id, e.g. "az1".
    types:
    - <xref:str>
  - name: nodes_count
    description: count of nodes to create.
    types:
    - <xref:int>
  - name: placement_group_id
    description: Placement Group id, e.g. "n1".
    types:
    - <xref:str>
  - name: purchase_id
    description: purchase id.
    types:
    - <xref:str>
  - name: id_properties_sku_description_id
    description: SKU's id.
    types:
    - <xref:str>
  - name: name_properties_sku_description_name
    description: SKU's name.
    types:
    - <xref:str>
variables:
- description: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudNodes/{dedicatedCloudNodeName}.
  name: id
  types:
  - <xref:str>
- description: Azure region. Required.
  name: location
  types:
  - <xref:str>
- description: '{dedicatedCloudNodeName}.'
  name: name
  types:
  - <xref:str>
- description: Dedicated Cloud Nodes SKU.
  name: sku
  types:
  - <xref:azure.mgmt.vmwarecloudsimple.models.Sku>
- description: Dedicated Cloud Nodes tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: '{resourceProviderNamespace}/{resourceType}.'
  name: type
  types:
  - <xref:str>
- description: Availability Zone id, e.g. "az1".
  name: availability_zone_id
  types:
  - <xref:str>
- description: Availability Zone name, e.g. "Availability Zone 1".
  name: availability_zone_name
  types:
  - <xref:str>
- description: VMWare Cloud Rack Name.
  name: cloud_rack_name
  types:
  - <xref:str>
- description: date time the resource was created.
  name: created
  types:
  - <xref:datetime.datetime>
- description: count of nodes to create.
  name: nodes_count
  types:
  - <xref:int>
- description: Placement Group id, e.g. "n1".
  name: placement_group_id
  types:
  - <xref:str>
- description: Placement Name, e.g. "Placement Group 1".
  name: placement_group_name
  types:
  - <xref:str>
- description: Private Cloud Id.
  name: private_cloud_id
  types:
  - <xref:str>
- description: Resource Pool Name.
  name: private_cloud_name
  types:
  - <xref:str>
- description: The provisioning status of the resource.
  name: provisioning_state
  types:
  - <xref:str>
- description: purchase id.
  name: purchase_id
  types:
  - <xref:str>
- description: 'Node status, indicates is private cloud set up on this node or not.
    Known values

    are: "unused" and "used".'
  name: status
  types:
  - <xref:str>
  - <xref:azure.mgmt.vmwarecloudsimple.models.NodeStatus>
- description: VMWare Cluster Name.
  name: vmware_cluster_name
  types:
  - <xref:str>
- description: SKU's id.
  name: id_properties_sku_description_id
  types:
  - <xref:str>
- description: SKU's name.
  name: name_properties_sku_description_name
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.vmwarecloudsimple.models.DedicatedCloudNode.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.vmwarecloudsimple.models.DedicatedCloudNode.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.vmwarecloudsimple.models.DedicatedCloudNode.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.vmwarecloudsimple.models.DedicatedCloudNode.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.vmwarecloudsimple.models.DedicatedCloudNode.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.vmwarecloudsimple.models.DedicatedCloudNode.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
