### YamlMime:PythonClass
uid: azure.mgmt.servicefabricmanagedclusters.models.StatelessServiceProperties
name: StatelessServiceProperties
fullName: azure.mgmt.servicefabricmanagedclusters.models.StatelessServiceProperties
module: azure.mgmt.servicefabricmanagedclusters.models
inheritances:
- azure.mgmt.servicefabricmanagedclusters.models._models_py3.ServiceResourceProperties
summary: 'The properties of a stateless service resource.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'StatelessServiceProperties(*, service_type_name: str, partition_description:
    _models.Partition, instance_count: int, placement_constraints: str | None = None,
    correlation_scheme: List[_models.ServiceCorrelation] | None = None, service_load_metrics:
    List[_models.ServiceLoadMetric] | None = None, service_placement_policies: List[_models.ServicePlacementPolicy]
    | None = None, default_move_cost: str | _models.MoveCost | None = None, scaling_policies:
    List[_models.ScalingPolicy] | None = None, service_package_activation_mode: str
    | _models.ServicePackageActivationMode | None = None, min_instance_count: int
    | None = None, min_instance_percentage: int | None = None, **kwargs)'
  parameters:
  - name: placement_constraints
    description: 'The placement constraints as a string. Placement constraints

      are boolean expressions on node properties and allow for restricting a service
      to particular

      nodes based on the service requirements. For example, to place a service on
      nodes where

      NodeType is blue specify the following: "NodeColor == blue)".'
    types:
    - <xref:str>
  - name: correlation_scheme
    description: 'A list that describes the correlation of the service with other

      services.'
    types:
    - <xref:azure.mgmt.servicefabricmanagedclusters.aio.operations.ApplicationTypesOperations.list>[<xref:azure.mgmt.servicefabricmanagedclusters.models.ServiceCorrelation>]
  - name: service_load_metrics
    description: 'The service load metrics is given as an array of

      ServiceLoadMetric objects.'
    types:
    - <xref:azure.mgmt.servicefabricmanagedclusters.aio.operations.ApplicationTypesOperations.list>[<xref:azure.mgmt.servicefabricmanagedclusters.models.ServiceLoadMetric>]
  - name: service_placement_policies
    description: 'A list that describes the correlation of the service with

      other services.'
    types:
    - <xref:azure.mgmt.servicefabricmanagedclusters.aio.operations.ApplicationTypesOperations.list>[<xref:azure.mgmt.servicefabricmanagedclusters.models.ServicePlacementPolicy>]
  - name: default_move_cost
    description: 'Specifies the move cost for the service. Known values are: "Zero",

      "Low", "Medium", and "High".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.servicefabricmanagedclusters.models.MoveCost>
  - name: scaling_policies
    description: Scaling policies for this service.
    types:
    - <xref:azure.mgmt.servicefabricmanagedclusters.aio.operations.ApplicationTypesOperations.list>[<xref:azure.mgmt.servicefabricmanagedclusters.models.ScalingPolicy>]
  - name: service_type_name
    description: The name of the service type. Required.
    types:
    - <xref:str>
  - name: partition_description
    description: Describes how the service is partitioned. Required.
    types:
    - <xref:azure.mgmt.servicefabricmanagedclusters.models.Partition>
  - name: service_package_activation_mode
    description: 'The activation Mode of the service package. Known

      values are: "SharedProcess" and "ExclusiveProcess".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.servicefabricmanagedclusters.models.ServicePackageActivationMode>
  - name: instance_count
    description: The instance count. Required.
    types:
    - <xref:int>
  - name: min_instance_count
    description: 'MinInstanceCount is the minimum number of instances that must be

      up to meet the EnsureAvailability safety check during operations like upgrade
      or deactivate

      node. The actual number that is used is max( MinInstanceCount, ceil(

      MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set
      to -1, during

      MinInstanceCount computation -1 is first converted into the number of nodes
      on which the

      instances are allowed to be placed according to the placement constraints on
      the service.'
    types:
    - <xref:int>
  - name: min_instance_percentage
    description: 'MinInstancePercentage is the minimum percentage of

      InstanceCount that must be up to meet the EnsureAvailability safety check during
      operations

      like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount,
      ceil(

      MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set
      to -1, during

      MinInstancePercentage computation, -1 is first converted into the number of
      nodes on which the

      instances are allowed to be placed according to the placement constraints on
      the service.'
    types:
    - <xref:int>
variables:
- description: 'The placement constraints as a string. Placement constraints are

    boolean expressions on node properties and allow for restricting a service to
    particular nodes

    based on the service requirements. For example, to place a service on nodes where
    NodeType is

    blue specify the following: "NodeColor == blue)".'
  name: placement_constraints
  types:
  - <xref:str>
- description: 'A list that describes the correlation of the service with other

    services.'
  name: correlation_scheme
  types:
  - <xref:list>[<xref:azure.mgmt.servicefabricmanagedclusters.models.ServiceCorrelation>]
- description: 'The service load metrics is given as an array of ServiceLoadMetric

    objects.'
  name: service_load_metrics
  types:
  - <xref:list>[<xref:azure.mgmt.servicefabricmanagedclusters.models.ServiceLoadMetric>]
- description: 'A list that describes the correlation of the service with

    other services.'
  name: service_placement_policies
  types:
  - <xref:list>[<xref:azure.mgmt.servicefabricmanagedclusters.models.ServicePlacementPolicy>]
- description: 'Specifies the move cost for the service. Known values are: "Zero",

    "Low", "Medium", and "High".'
  name: default_move_cost
  types:
  - <xref:str>
  - <xref:azure.mgmt.servicefabricmanagedclusters.models.MoveCost>
- description: Scaling policies for this service.
  name: scaling_policies
  types:
  - <xref:list>[<xref:azure.mgmt.servicefabricmanagedclusters.models.ScalingPolicy>]
- description: 'The current deployment or provisioning state, which only appears in

    the response.'
  name: provisioning_state
  types:
  - <xref:str>
- description: 'The kind of service (Stateless or Stateful). Required. Known values
    are:

    "Stateless" and "Stateful".'
  name: service_kind
  types:
  - <xref:str>
  - <xref:azure.mgmt.servicefabricmanagedclusters.models.ServiceKind>
- description: The name of the service type. Required.
  name: service_type_name
  types:
  - <xref:str>
- description: Describes how the service is partitioned. Required.
  name: partition_description
  types:
  - <xref:azure.mgmt.servicefabricmanagedclusters.models.Partition>
- description: 'The activation Mode of the service package. Known values

    are: "SharedProcess" and "ExclusiveProcess".'
  name: service_package_activation_mode
  types:
  - <xref:str>
  - <xref:azure.mgmt.servicefabricmanagedclusters.models.ServicePackageActivationMode>
- description: The instance count. Required.
  name: instance_count
  types:
  - <xref:int>
- description: 'MinInstanceCount is the minimum number of instances that must be up

    to meet the EnsureAvailability safety check during operations like upgrade or
    deactivate node.

    The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0
    *

    InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstanceCount
    computation -1

    is first converted into the number of nodes on which the instances are allowed
    to be placed

    according to the placement constraints on the service.'
  name: min_instance_count
  types:
  - <xref:int>
- description: 'MinInstancePercentage is the minimum percentage of InstanceCount

    that must be up to meet the EnsureAvailability safety check during operations
    like upgrade or

    deactivate node. The actual number that is used is max( MinInstanceCount, ceil(

    MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set
    to -1, during

    MinInstancePercentage computation, -1 is first converted into the number of nodes
    on which the

    instances are allowed to be placed according to the placement constraints on the
    service.'
  name: min_instance_percentage
  types:
  - <xref:int>
methods:
- uid: azure.mgmt.servicefabricmanagedclusters.models.StatelessServiceProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.servicefabricmanagedclusters.models.StatelessServiceProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.servicefabricmanagedclusters.models.StatelessServiceProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.servicefabricmanagedclusters.models.StatelessServiceProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.servicefabricmanagedclusters.models.StatelessServiceProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.servicefabricmanagedclusters.models.StatelessServiceProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
