### YamlMime:PythonClass
uid: azure.mgmt.azurestackhci.models.Galleryimages
name: Galleryimages
fullName: azure.mgmt.azurestackhci.models.Galleryimages
module: azure.mgmt.azurestackhci.models
inheritances:
- azure.mgmt.azurestackhci.models._models_py3.TrackedResource
summary: 'The gallery image resource definition.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'Galleryimages(*, location: str, tags: Dict[str, str] | None = None, extended_location:
    _models.ExtendedLocation | None = None, container_name: str | None = None, image_path:
    str | None = None, os_type: str | _models.OperatingSystemTypes | None = None,
    cloud_init_data_source: str | _models.CloudInitDataSource | None = None, hyper_v_generation:
    str | _models.HyperVGeneration | None = None, identifier: _models.GalleryImageIdentifier
    | None = None, version: _models.GalleryImageVersion | None = None, resource_name:
    str | None = None, **kwargs)'
  parameters:
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: location
    description: The geo-location where the resource lives. Required.
    types:
    - <xref:str>
  - name: extended_location
    description: The extendedLocation of the resource.
    types:
    - <xref:azure.mgmt.azurestackhci.models.ExtendedLocation>
  - name: container_name
    description: Container Name for storage container.
    types:
    - <xref:str>
  - name: image_path
    description: location of the image the gallery image should be created from.
    types:
    - <xref:str>
  - name: os_type
    description: 'operating system type that the gallery image uses. Expected to be
      linux or

      windows. Known values are: "Windows" and "Linux".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.azurestackhci.models.OperatingSystemTypes>
  - name: cloud_init_data_source
    description: 'Datasource for the gallery image when provisioning with

      cloud-init (Azure or NoCloud). Known values are: "NoCloud" and "Azure".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.azurestackhci.models.CloudInitDataSource>
  - name: hyper_v_generation
    description: 'The hypervisor generation of the Virtual Machine [V1, V2]. Known

      values are: "V1" and "V2".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.azurestackhci.models.HyperVGeneration>
  - name: identifier
    description: This is the gallery image definition identifier.
    types:
    - <xref:azure.mgmt.azurestackhci.models.GalleryImageIdentifier>
  - name: version
    description: 'Specifies information about the gallery image version that you want
      to create

      or update.'
    types:
    - <xref:azure.mgmt.azurestackhci.models.GalleryImageVersion>
  - name: resource_name
    description: name of the object to be used in moc.
    types:
    - <xref:str>
variables:
- description: 'Fully qualified resource ID for the resource. Ex -

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: 'The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
    or

    "Microsoft.Storage/storageAccounts".'
  name: type
  types:
  - <xref:str>
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The geo-location where the resource lives. Required.
  name: location
  types:
  - <xref:str>
- description: The extendedLocation of the resource.
  name: extended_location
  types:
  - <xref:azure.mgmt.azurestackhci.models.ExtendedLocation>
- description: Metadata pertaining to creation and last modification of the resource.
  name: system_data
  types:
  - <xref:azure.mgmt.azurestackhci.models.SystemData>
- description: Container Name for storage container.
  name: container_name
  types:
  - <xref:str>
- description: location of the image the gallery image should be created from.
  name: image_path
  types:
  - <xref:str>
- description: 'operating system type that the gallery image uses. Expected to be
    linux or

    windows. Known values are: "Windows" and "Linux".'
  name: os_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.azurestackhci.models.OperatingSystemTypes>
- description: 'Datasource for the gallery image when provisioning with

    cloud-init (Azure or NoCloud). Known values are: "NoCloud" and "Azure".'
  name: cloud_init_data_source
  types:
  - <xref:str>
  - <xref:azure.mgmt.azurestackhci.models.CloudInitDataSource>
- description: 'The hypervisor generation of the Virtual Machine [V1, V2]. Known

    values are: "V1" and "V2".'
  name: hyper_v_generation
  types:
  - <xref:str>
  - <xref:azure.mgmt.azurestackhci.models.HyperVGeneration>
- description: This is the gallery image definition identifier.
  name: identifier
  types:
  - <xref:azure.mgmt.azurestackhci.models.GalleryImageIdentifier>
- description: 'Specifies information about the gallery image version that you want
    to create or

    update.'
  name: version
  types:
  - <xref:azure.mgmt.azurestackhci.models.GalleryImageVersion>
- description: 'Provisioning state of the gallery image. Known values are:

    "Succeeded", "Failed", "InProgress", "Accepted", "Deleting", and "Canceled".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.azurestackhci.models.ProvisioningStateEnum>
- description: name of the object to be used in moc.
  name: resource_name
  types:
  - <xref:str>
- description: GalleryImageStatus defines the observed state of galleryimages.
  name: status
  types:
  - <xref:azure.mgmt.azurestackhci.models.GalleryImageStatus>
methods:
- uid: azure.mgmt.azurestackhci.models.Galleryimages.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.azurestackhci.models.Galleryimages.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.azurestackhci.models.Galleryimages.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.azurestackhci.models.Galleryimages.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.azurestackhci.models.Galleryimages.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.azurestackhci.models.Galleryimages.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
