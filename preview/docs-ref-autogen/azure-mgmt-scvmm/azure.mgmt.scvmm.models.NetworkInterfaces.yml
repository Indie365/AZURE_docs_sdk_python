### YamlMime:PythonClass
uid: azure.mgmt.scvmm.models.NetworkInterfaces
name: NetworkInterfaces
fullName: azure.mgmt.scvmm.models.NetworkInterfaces
module: azure.mgmt.scvmm.models
inheritances:
- azure.mgmt.scvmm._serialization.Model
summary: 'Network Interface model.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'NetworkInterfaces(*, name: str | None = None, mac_address: str | None =
    None, virtual_network_id: str | None = None, ipv4_address_type: str | _models.AllocationMethod
    | None = None, ipv6_address_type: str | _models.AllocationMethod | None = None,
    mac_address_type: str | _models.AllocationMethod | None = None, nic_id: str |
    None = None, **kwargs)'
  parameters:
  - name: name
    description: Gets or sets the name of the network interface.
    types:
    - <xref:str>
  - name: mac_address
    description: Gets or sets the nic MAC address.
    types:
    - <xref:str>
  - name: virtual_network_id
    description: 'Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork

      resource to connect the nic.'
    types:
    - <xref:str>
  - name: ipv4_address_type
    description: 'Gets or sets the ipv4 address type. Known values are: "Dynamic"
      and

      "Static".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.scvmm.models.AllocationMethod>
  - name: ipv6_address_type
    description: 'Gets or sets the ipv6 address type. Known values are: "Dynamic"
      and

      "Static".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.scvmm.models.AllocationMethod>
  - name: mac_address_type
    description: 'Gets or sets the mac address type. Known values are: "Dynamic" and

      "Static".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.scvmm.models.AllocationMethod>
  - name: nic_id
    description: Gets or sets the nic id.
    types:
    - <xref:str>
variables:
- description: Gets or sets the name of the network interface.
  name: name
  types:
  - <xref:str>
- description: 'Gets the display name of the network interface as shown in the vmmServer.

    This is the fallback label for a NIC when the name is not set.'
  name: display_name
  types:
  - <xref:str>
- description: Gets or sets the nic ipv4 addresses.
  name: ipv4_addresses
  types:
  - <xref:list>[<xref:str>]
- description: Gets or sets the nic ipv6 addresses.
  name: ipv6_addresses
  types:
  - <xref:list>[<xref:str>]
- description: Gets or sets the nic MAC address.
  name: mac_address
  types:
  - <xref:str>
- description: 'Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork

    resource to connect the nic.'
  name: virtual_network_id
  types:
  - <xref:str>
- description: 'Gets or sets the name of the virtual network in vmmServer that the
    nic is

    connected to.'
  name: network_name
  types:
  - <xref:str>
- description: 'Gets or sets the ipv4 address type. Known values are: "Dynamic" and

    "Static".'
  name: ipv4_address_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.scvmm.models.AllocationMethod>
- description: 'Gets or sets the ipv6 address type. Known values are: "Dynamic" and

    "Static".'
  name: ipv6_address_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.scvmm.models.AllocationMethod>
- description: 'Gets or sets the mac address type. Known values are: "Dynamic" and

    "Static".'
  name: mac_address_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.scvmm.models.AllocationMethod>
- description: Gets or sets the nic id.
  name: nic_id
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.scvmm.models.NetworkInterfaces.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.scvmm.models.NetworkInterfaces.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.scvmm.models.NetworkInterfaces.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.scvmm.models.NetworkInterfaces.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.scvmm.models.NetworkInterfaces.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.scvmm.models.NetworkInterfaces.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
