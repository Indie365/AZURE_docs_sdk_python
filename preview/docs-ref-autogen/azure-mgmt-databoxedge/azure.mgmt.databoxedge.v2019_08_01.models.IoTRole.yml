### YamlMime:PythonClass
uid: azure.mgmt.databoxedge.v2019_08_01.models.IoTRole
name: IoTRole
fullName: azure.mgmt.databoxedge.v2019_08_01.models.IoTRole
module: azure.mgmt.databoxedge.v2019_08_01.models
inheritances:
- azure.mgmt.databoxedge.v2019_08_01.models._models_py3.Role
summary: 'Compute role.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'IoTRole(*, host_platform: str | _models.PlatformType | None = None, io_t_device_details:
    _models.IoTDeviceInfo | None = None, io_t_edge_device_details: _models.IoTDeviceInfo
    | None = None, share_mappings: List[_models.MountPointMap] | None = None, role_status:
    str | _models.RoleStatus | None = None, **kwargs: Any)'
  parameters:
  - name: host_platform
    description: 'Host OS supported by the IoT role. Known values are: "Windows" and

      "Linux".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.databoxedge.v2019_08_01.models.PlatformType>
  - name: io_t_device_details
    description: 'IoT device metadata to which data box edge device needs to be

      connected.'
    types:
    - <xref:azure.mgmt.databoxedge.v2019_08_01.models.IoTDeviceInfo>
  - name: io_t_edge_device_details
    description: 'IoT edge device to which the IoT role needs to be

      configured.'
    types:
    - <xref:azure.mgmt.databoxedge.v2019_08_01.models.IoTDeviceInfo>
  - name: share_mappings
    description: Mount points of shares in role(s).
    types:
    - <xref:azure.mgmt.databoxedge.v2019_03_01.aio.operations.Operations.list>[<xref:azure.mgmt.databoxedge.v2019_08_01.models.MountPointMap>]
  - name: role_status
    description: 'Role status. Known values are: "Enabled" and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.databoxedge.v2019_08_01.models.RoleStatus>
variables:
- description: The path ID that uniquely identifies the object.
  name: id
  types:
  - <xref:str>
- description: The object name.
  name: name
  types:
  - <xref:str>
- description: The hierarchical type of the object.
  name: type
  types:
  - <xref:str>
- description: 'Role type. Required. Known values are: "IOT", "ASA", "Functions",
    and "Cognitive".'
  name: kind
  types:
  - <xref:str>
  - <xref:azure.mgmt.databoxedge.v2019_08_01.models.RoleTypes>
- description: 'Host OS supported by the IoT role. Known values are: "Windows" and

    "Linux".'
  name: host_platform
  types:
  - <xref:str>
  - <xref:azure.mgmt.databoxedge.v2019_08_01.models.PlatformType>
- description: 'IoT device metadata to which data box edge device needs to be

    connected.'
  name: io_t_device_details
  types:
  - <xref:azure.mgmt.databoxedge.v2019_08_01.models.IoTDeviceInfo>
- description: IoT edge device to which the IoT role needs to be configured.
  name: io_t_edge_device_details
  types:
  - <xref:azure.mgmt.databoxedge.v2019_08_01.models.IoTDeviceInfo>
- description: Mount points of shares in role(s).
  name: share_mappings
  types:
  - <xref:list>[<xref:azure.mgmt.databoxedge.v2019_08_01.models.MountPointMap>]
- description: 'Role status. Known values are: "Enabled" and "Disabled".'
  name: role_status
  types:
  - <xref:str>
  - <xref:azure.mgmt.databoxedge.v2019_08_01.models.RoleStatus>
methods:
- uid: azure.mgmt.databoxedge.v2019_08_01.models.IoTRole.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.databoxedge.v2019_08_01.models.IoTRole.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.databoxedge.v2019_08_01.models.IoTRole.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.databoxedge.v2019_08_01.models.IoTRole.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.databoxedge.v2019_08_01.models.IoTRole.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.databoxedge.v2019_08_01.models.IoTRole.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
