### YamlMime:PythonClass
uid: azure.mgmt.recoveryservicessiterecovery.models.OperationsDiscovery
name: OperationsDiscovery
fullName: azure.mgmt.recoveryservicessiterecovery.models.OperationsDiscovery
module: azure.mgmt.recoveryservicessiterecovery.models
inheritances:
- azure.mgmt.recoveryservicessiterecovery._serialization.Model
summary: Operations discovery class.
constructor:
  syntax: 'OperationsDiscovery(*, name: str | None = None, display: _models.Display
    | None = None, origin: str | None = None, properties: MutableMapping[str, Any]
    | None = None, **kwargs)'
  parameters:
  - name: name
    description: 'Name of the API. The name of the operation being performed on this
      particular

      object. It should match the action name that appears in RBAC / the event service.
      Examples of

      operations include: * Microsoft.Compute/virtualMachine/capture/action *

      Microsoft.Compute/virtualMachine/restart/action * Microsoft.Compute/virtualMachine/write
      *

      Microsoft.Compute/virtualMachine/read * Microsoft.Compute/virtualMachine/delete
      Each action

      should include, in order: (1) Resource Provider Namespace (2) Type hierarchy
      for which the

      action applies (e.g. server/databases for a SQL Azure database) (3) Read, Write,
      Action or

      Delete indicating which type applies. If it is a PUT/PATCH on a collection or
      named value,

      Write should be used. If it is a GET, Read should be used. If it is a DELETE,
      Delete should be

      used. If it is a POST, Action should be used. As a note: all resource providers
      would need to

      include the "{Resource Provider Namespace}/register/action" operation in their
      response. This

      API is used to register for their service, and should include details about
      the operation (e.g.

      a localized name for the resource provider + any special considerations like
      PII release).'
    types:
    - <xref:str>
  - name: display
    description: Object type.
    types:
    - <xref:azure.mgmt.recoveryservicessiterecovery.models.Display>
  - name: origin
    description: 'Origin. The intended executor of the operation; governs the display
      of the

      operation in the RBAC UX and the audit logs UX. Default value is "user,system".'
    types:
    - <xref:str>
  - name: properties
    description: Properties. Reserved for future use.
    types:
    - <xref:azure.mgmt.recoveryservicessiterecovery.models.ExportJobOutputSerializationType.JSON>
variables:
- description: 'Name of the API. The name of the operation being performed on this
    particular

    object. It should match the action name that appears in RBAC / the event service.
    Examples of

    operations include: * Microsoft.Compute/virtualMachine/capture/action *

    Microsoft.Compute/virtualMachine/restart/action * Microsoft.Compute/virtualMachine/write
    *

    Microsoft.Compute/virtualMachine/read * Microsoft.Compute/virtualMachine/delete
    Each action

    should include, in order: (1) Resource Provider Namespace (2) Type hierarchy for
    which the

    action applies (e.g. server/databases for a SQL Azure database) (3) Read, Write,
    Action or

    Delete indicating which type applies. If it is a PUT/PATCH on a collection or
    named value,

    Write should be used. If it is a GET, Read should be used. If it is a DELETE,
    Delete should be

    used. If it is a POST, Action should be used. As a note: all resource providers
    would need to

    include the "{Resource Provider Namespace}/register/action" operation in their
    response. This

    API is used to register for their service, and should include details about the
    operation (e.g.

    a localized name for the resource provider + any special considerations like PII
    release).'
  name: name
  types:
  - <xref:str>
- description: Object type.
  name: display
  types:
  - <xref:azure.mgmt.recoveryservicessiterecovery.models.Display>
- description: 'Origin. The intended executor of the operation; governs the display
    of the

    operation in the RBAC UX and the audit logs UX. Default value is "user,system".'
  name: origin
  types:
  - <xref:str>
- description: Properties. Reserved for future use.
  name: properties
  types:
  - <xref:JSON>
methods:
- uid: azure.mgmt.recoveryservicessiterecovery.models.OperationsDiscovery.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.recoveryservicessiterecovery.models.OperationsDiscovery.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.recoveryservicessiterecovery.models.OperationsDiscovery.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.recoveryservicessiterecovery.models.OperationsDiscovery.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.recoveryservicessiterecovery.models.OperationsDiscovery.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.recoveryservicessiterecovery.models.OperationsDiscovery.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
