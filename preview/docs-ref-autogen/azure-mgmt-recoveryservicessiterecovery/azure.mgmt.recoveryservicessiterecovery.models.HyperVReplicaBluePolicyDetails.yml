### YamlMime:PythonClass
uid: azure.mgmt.recoveryservicessiterecovery.models.HyperVReplicaBluePolicyDetails
name: HyperVReplicaBluePolicyDetails
fullName: azure.mgmt.recoveryservicessiterecovery.models.HyperVReplicaBluePolicyDetails
module: azure.mgmt.recoveryservicessiterecovery.models
inheritances:
- azure.mgmt.recoveryservicessiterecovery.models._models_py3.PolicyProviderSpecificDetails
summary: 'Hyper-V Replica Blue specific protection profile details.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'HyperVReplicaBluePolicyDetails(*, replication_frequency_in_seconds: int
    | None = None, recovery_points: int | None = None, application_consistent_snapshot_frequency_in_hours:
    int | None = None, compression: str | None = None, initial_replication_method:
    str | None = None, online_replication_start_time: str | None = None, offline_replication_import_path:
    str | None = None, offline_replication_export_path: str | None = None, replication_port:
    int | None = None, allowed_authentication_type: int | None = None, replica_deletion_option:
    str | None = None, **kwargs)'
  parameters:
  - name: replication_frequency_in_seconds
    description: A value indicating the replication interval.
    types:
    - <xref:int>
  - name: recovery_points
    description: A value indicating the number of recovery points.
    types:
    - <xref:int>
  - name: application_consistent_snapshot_frequency_in_hours
    description: 'A value indicating the application

      consistent frequency.'
    types:
    - <xref:int>
  - name: compression
    description: A value indicating whether compression has to be enabled.
    types:
    - <xref:str>
  - name: initial_replication_method
    description: A value indicating whether IR is online.
    types:
    - <xref:str>
  - name: online_replication_start_time
    description: A value indicating the online IR start time.
    types:
    - <xref:str>
  - name: offline_replication_import_path
    description: A value indicating the offline IR import path.
    types:
    - <xref:str>
  - name: offline_replication_export_path
    description: A value indicating the offline IR export path.
    types:
    - <xref:str>
  - name: replication_port
    description: A value indicating the recovery HTTPS port.
    types:
    - <xref:int>
  - name: allowed_authentication_type
    description: A value indicating the authentication type.
    types:
    - <xref:int>
  - name: replica_deletion_option
    description: 'A value indicating whether the VM has to be auto deleted.

      Supported Values: String.Empty, None, OnRecoveryCloud.'
    types:
    - <xref:str>
variables:
- description: Gets the class type. Overridden in derived classes. Required.
  name: instance_type
  types:
  - <xref:str>
- description: A value indicating the replication interval.
  name: replication_frequency_in_seconds
  types:
  - <xref:int>
- description: A value indicating the number of recovery points.
  name: recovery_points
  types:
  - <xref:int>
- description: 'A value indicating the application

    consistent frequency.'
  name: application_consistent_snapshot_frequency_in_hours
  types:
  - <xref:int>
- description: A value indicating whether compression has to be enabled.
  name: compression
  types:
  - <xref:str>
- description: A value indicating whether IR is online.
  name: initial_replication_method
  types:
  - <xref:str>
- description: A value indicating the online IR start time.
  name: online_replication_start_time
  types:
  - <xref:str>
- description: A value indicating the offline IR import path.
  name: offline_replication_import_path
  types:
  - <xref:str>
- description: A value indicating the offline IR export path.
  name: offline_replication_export_path
  types:
  - <xref:str>
- description: A value indicating the recovery HTTPS port.
  name: replication_port
  types:
  - <xref:int>
- description: A value indicating the authentication type.
  name: allowed_authentication_type
  types:
  - <xref:int>
- description: 'A value indicating whether the VM has to be auto deleted.

    Supported Values: String.Empty, None, OnRecoveryCloud.'
  name: replica_deletion_option
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.recoveryservicessiterecovery.models.HyperVReplicaBluePolicyDetails.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.recoveryservicessiterecovery.models.HyperVReplicaBluePolicyDetails.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.recoveryservicessiterecovery.models.HyperVReplicaBluePolicyDetails.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.recoveryservicessiterecovery.models.HyperVReplicaBluePolicyDetails.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.recoveryservicessiterecovery.models.HyperVReplicaBluePolicyDetails.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.recoveryservicessiterecovery.models.HyperVReplicaBluePolicyDetails.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
