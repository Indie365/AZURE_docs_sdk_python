### YamlMime:PythonClass
uid: azure.mgmt.app.models.ContainerAppProbe
name: ContainerAppProbe
fullName: azure.mgmt.app.models.ContainerAppProbe
module: azure.mgmt.app.models
inheritances:
- msrest.serialization.Model
summary: Probe describes a health check to be performed against a container to determine
  whether it is alive or ready to receive traffic.
constructor:
  syntax: 'ContainerAppProbe(*, failure_threshold: int | None = None, http_get: ContainerAppProbeHttpGet
    | None = None, initial_delay_seconds: int | None = None, period_seconds: int |
    None = None, success_threshold: int | None = None, tcp_socket: ContainerAppProbeTcpSocket
    | None = None, termination_grace_period_seconds: int | None = None, timeout_seconds:
    int | None = None, type: str | Type | None = None, **kwargs)'
  parameters:
  - name: failure_threshold
    description: 'Minimum consecutive failures for the probe to be considered failed

      after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is
      10.'
    types:
    - <xref:int>
  - name: http_get
    description: HTTPGet specifies the http request to perform.
    types:
    - <xref:container_apps_api_client.models.ContainerAppProbeHttpGet>
  - name: initial_delay_seconds
    description: 'Number of seconds after the container has started before

      liveness probes are initiated. Minimum value is 1. Maximum value is 60.'
    types:
    - <xref:int>
  - name: period_seconds
    description: 'How often (in seconds) to perform the probe. Default to 10 seconds.

      Minimum value is 1. Maximum value is 240.'
    types:
    - <xref:int>
  - name: success_threshold
    description: 'Minimum consecutive successes for the probe to be considered

      successful after having failed. Defaults to 1. Must be 1 for liveness and startup.
      Minimum

      value is 1. Maximum value is 10.'
    types:
    - <xref:int>
  - name: tcp_socket
    description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not
      yet

      supported.'
    types:
    - <xref:container_apps_api_client.models.ContainerAppProbeTcpSocket>
  - name: termination_grace_period_seconds
    description: 'Optional duration in seconds the pod needs to

      terminate gracefully upon probe failure. The grace period is the duration in
      seconds after the

      processes running in the pod are sent a termination signal and the time when
      the processes are

      forcibly halted with a kill signal. Set this value longer than the expected
      cleanup time for

      your process. If this value is nil, the pod''s terminationGracePeriodSeconds
      will be used.

      Otherwise, this value overrides the value provided by the pod spec. Value must
      be non-negative

      integer. The value zero indicates stop immediately via the kill signal (no opportunity
      to shut

      down). This is an alpha field and requires enabling ProbeTerminationGracePeriod
      feature gate.

      Maximum value is 3600 seconds (1 hour).'
    types:
    - <xref:long>
  - name: timeout_seconds
    description: 'Number of seconds after which the probe times out. Defaults to 1

      second. Minimum value is 1. Maximum value is 240.'
    types:
    - <xref:int>
  - name: type
    description: 'The type of probe. Possible values include: "liveness", "readiness",
      "startup".'
    types:
    - <xref:str>
    - <xref:container_apps_api_client.models.Type>
variables:
- description: 'Minimum consecutive failures for the probe to be considered failed

    after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.'
  name: failure_threshold
  types:
  - <xref:int>
- description: HTTPGet specifies the http request to perform.
  name: http_get
  types:
  - <xref:container_apps_api_client.models.ContainerAppProbeHttpGet>
- description: 'Number of seconds after the container has started before liveness

    probes are initiated. Minimum value is 1. Maximum value is 60.'
  name: initial_delay_seconds
  types:
  - <xref:int>
- description: 'How often (in seconds) to perform the probe. Default to 10 seconds.

    Minimum value is 1. Maximum value is 240.'
  name: period_seconds
  types:
  - <xref:int>
- description: 'Minimum consecutive successes for the probe to be considered

    successful after having failed. Defaults to 1. Must be 1 for liveness and startup.
    Minimum

    value is 1. Maximum value is 10.'
  name: success_threshold
  types:
  - <xref:int>
- description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not
    yet

    supported.'
  name: tcp_socket
  types:
  - <xref:container_apps_api_client.models.ContainerAppProbeTcpSocket>
- description: 'Optional duration in seconds the pod needs to terminate

    gracefully upon probe failure. The grace period is the duration in seconds after
    the processes

    running in the pod are sent a termination signal and the time when the processes
    are forcibly

    halted with a kill signal. Set this value longer than the expected cleanup time
    for your

    process. If this value is nil, the pod''s terminationGracePeriodSeconds will be
    used. Otherwise,

    this value overrides the value provided by the pod spec. Value must be non-negative
    integer.

    The value zero indicates stop immediately via the kill signal (no opportunity
    to shut down).

    This is an alpha field and requires enabling ProbeTerminationGracePeriod feature
    gate. Maximum

    value is 3600 seconds (1 hour).'
  name: termination_grace_period_seconds
  types:
  - <xref:long>
- description: 'Number of seconds after which the probe times out. Defaults to 1 second.

    Minimum value is 1. Maximum value is 240.'
  name: timeout_seconds
  types:
  - <xref:int>
- description: 'The type of probe. Possible values include: "liveness", "readiness",
    "startup".'
  name: type
  types:
  - <xref:str>
  - <xref:container_apps_api_client.models.Type>
methods:
- uid: azure.mgmt.app.models.ContainerAppProbe.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.app.models.ContainerAppProbe.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.app.models.ContainerAppProbe.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.app.models.ContainerAppProbe.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.app.models.ContainerAppProbe.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.app.models.ContainerAppProbe.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.app.models.ContainerAppProbe.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
