### YamlMime:PythonClass
uid: azure.mgmt.media.models.FaceDetectorPreset
name: FaceDetectorPreset
fullName: azure.mgmt.media.models.FaceDetectorPreset
module: azure.mgmt.media.models
inheritances:
- azure.mgmt.media.models._models_py3.Preset
summary: 'Describes all the settings to be used when analyzing a video in order to
  detect (and optionally redact) all the faces present.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'FaceDetectorPreset(*, resolution: str | _models.AnalysisResolution | None
    = None, mode: str | _models.FaceRedactorMode | None = None, blur_type: str | _models.BlurType
    | None = None, experimental_options: Dict[str, str] | None = None, **kwargs)'
  parameters:
  - name: resolution
    description: 'Specifies the maximum resolution at which your video is analyzed.
      The

      default behavior is "SourceResolution," which will keep the input video at its
      original

      resolution when analyzed. Using "StandardDefinition" will resize input videos
      to standard

      definition while preserving the appropriate aspect ratio. It will only resize
      if the video is

      of higher resolution. For example, a 1920x1080 input would be scaled to 640x360
      before

      processing. Switching to "StandardDefinition" will reduce the time it takes
      to process high

      resolution video. It may also reduce the cost of using this component (see

      [https://azure.microsoft.com/en-us/pricing/details/media-services/#analytics](https://azure.microsoft.com/en-us/pricing/details/media-services/#analytics)
      for details).

      However, faces that end up being too small in the resized video may not be detected.
      Known

      values are: "SourceResolution" and "StandardDefinition".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.media.models.AnalysisResolution>
  - name: mode
    description: 'This mode provides the ability to choose between the following settings:
      1)

      Analyze - For detection only.This mode generates a metadata JSON file marking
      appearances of

      faces throughout the video.Where possible, appearances of the same person are
      assigned the same

      ID. 2) Combined - Additionally redacts(blurs) detected faces. 3) Redact - This
      enables a 2-pass

      process, allowing for selective redaction of a subset of detected faces.It takes
      in the

      metadata file from a prior analyze pass, along with the source video, and a
      user-selected

      subset of IDs that require redaction. Known values are: "Analyze", "Redact",
      and "Combined".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.media.models.FaceRedactorMode>
  - name: blur_type
    description: 'Blur type. Known values are: "Box", "Low", "Med", "High", and "Black".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.media.models.BlurType>
  - name: experimental_options
    description: 'Dictionary containing key value pairs for parameters not exposed

      in the preset itself.'
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
variables:
- description: The discriminator for derived types. Required.
  name: odata_type
  types:
  - <xref:str>
- description: 'Specifies the maximum resolution at which your video is analyzed.
    The default

    behavior is "SourceResolution," which will keep the input video at its original
    resolution when

    analyzed. Using "StandardDefinition" will resize input videos to standard definition
    while

    preserving the appropriate aspect ratio. It will only resize if the video is of
    higher

    resolution. For example, a 1920x1080 input would be scaled to 640x360 before processing.

    Switching to "StandardDefinition" will reduce the time it takes to process high
    resolution

    video. It may also reduce the cost of using this component (see

    [https://azure.microsoft.com/en-us/pricing/details/media-services/#analytics](https://azure.microsoft.com/en-us/pricing/details/media-services/#analytics)
    for details).

    However, faces that end up being too small in the resized video may not be detected.
    Known

    values are: "SourceResolution" and "StandardDefinition".'
  name: resolution
  types:
  - <xref:str>
  - <xref:azure.mgmt.media.models.AnalysisResolution>
- description: 'This mode provides the ability to choose between the following settings:
    1) Analyze

    - For detection only.This mode generates a metadata JSON file marking appearances
    of faces

    throughout the video.Where possible, appearances of the same person are assigned
    the same ID.

    2) Combined - Additionally redacts(blurs) detected faces. 3) Redact - This enables
    a 2-pass

    process, allowing for selective redaction of a subset of detected faces.It takes
    in the

    metadata file from a prior analyze pass, along with the source video, and a user-selected

    subset of IDs that require redaction. Known values are: "Analyze", "Redact", and
    "Combined".'
  name: mode
  types:
  - <xref:str>
  - <xref:azure.mgmt.media.models.FaceRedactorMode>
- description: 'Blur type. Known values are: "Box", "Low", "Med", "High", and "Black".'
  name: blur_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.media.models.BlurType>
- description: 'Dictionary containing key value pairs for parameters not exposed in

    the preset itself.'
  name: experimental_options
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
methods:
- uid: azure.mgmt.media.models.FaceDetectorPreset.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.media.models.FaceDetectorPreset.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.FaceDetectorPreset.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.media.models.FaceDetectorPreset.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.FaceDetectorPreset.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.media.models.FaceDetectorPreset.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
