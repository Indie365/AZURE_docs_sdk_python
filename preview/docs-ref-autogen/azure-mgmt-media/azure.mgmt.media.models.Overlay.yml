### YamlMime:PythonClass
uid: azure.mgmt.media.models.Overlay
name: Overlay
fullName: azure.mgmt.media.models.Overlay
module: azure.mgmt.media.models
inheritances:
- azure.mgmt.media._serialization.Model
summary: 'Base type for all overlays - image, audio or video.


  You probably want to use the sub-classes and not this class directly. Known sub-classes
  are:

  AudioOverlay, VideoOverlay


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'Overlay(*, input_label: str, start: timedelta | None = None, end: timedelta
    | None = None, fade_in_duration: timedelta | None = None, fade_out_duration: timedelta
    | None = None, audio_gain_level: float | None = None, **kwargs)'
  parameters:
  - name: input_label
    description: 'The label of the job input which is to be used as an overlay. The
      Input

      must specify exactly one file. You can specify an image file in JPG, PNG, GIF
      or BMP format, or

      an audio file (such as a WAV, MP3, WMA or M4A file), or a video file. See

      [https://aka.ms/mesformats](https://aka.ms/mesformats) for the complete list
      of supported audio and video file formats.

      Required.'
    types:
    - <xref:str>
  - name: start
    description: 'The start position, with reference to the input video, at which
      the overlay

      starts. The value should be in ISO 8601 format. For example, PT05S to start
      the overlay at 5

      seconds into the input video. If not specified the overlay starts from the beginning
      of the

      input video.'
    types:
    - <xref:datetime.timedelta>
  - name: end
    description: 'The end position, with reference to the input video, at which the
      overlay ends.

      The value should be in ISO 8601 format. For example, PT30S to end the overlay
      at 30 seconds

      into the input video. If not specified or the value is greater than the input
      video duration,

      the overlay will be applied until the end of the input video if the overlay
      media duration is

      greater than the input video duration, else the overlay will last as long as
      the overlay media

      duration.'
    types:
    - <xref:datetime.timedelta>
  - name: fade_in_duration
    description: 'The duration over which the overlay fades in onto the input video.

      The value should be in ISO 8601 duration format. If not specified the default
      behavior is to

      have no fade in (same as PT0S).'
    types:
    - <xref:datetime.timedelta>
  - name: fade_out_duration
    description: 'The duration over which the overlay fades out of the input video.

      The value should be in ISO 8601 duration format. If not specified the default
      behavior is to

      have no fade out (same as PT0S).'
    types:
    - <xref:datetime.timedelta>
  - name: audio_gain_level
    description: 'The gain level of audio in the overlay. The value should be in the

      range [0, 1.0]. The default is 1.0.'
    types:
    - <xref:float>
variables:
- description: The discriminator for derived types. Required.
  name: odata_type
  types:
  - <xref:str>
- description: 'The label of the job input which is to be used as an overlay. The
    Input must

    specify exactly one file. You can specify an image file in JPG, PNG, GIF or BMP
    format, or an

    audio file (such as a WAV, MP3, WMA or M4A file), or a video file. See

    [https://aka.ms/mesformats](https://aka.ms/mesformats) for the complete list of
    supported audio and video file formats.

    Required.'
  name: input_label
  types:
  - <xref:str>
- description: 'The start position, with reference to the input video, at which the
    overlay

    starts. The value should be in ISO 8601 format. For example, PT05S to start the
    overlay at 5

    seconds into the input video. If not specified the overlay starts from the beginning
    of the

    input video.'
  name: start
  types:
  - <xref:datetime.timedelta>
- description: 'The end position, with reference to the input video, at which the
    overlay ends. The

    value should be in ISO 8601 format. For example, PT30S to end the overlay at 30
    seconds into

    the input video. If not specified or the value is greater than the input video
    duration, the

    overlay will be applied until the end of the input video if the overlay media
    duration is

    greater than the input video duration, else the overlay will last as long as the
    overlay media

    duration.'
  name: end
  types:
  - <xref:datetime.timedelta>
- description: 'The duration over which the overlay fades in onto the input video.
    The

    value should be in ISO 8601 duration format. If not specified the default behavior
    is to have

    no fade in (same as PT0S).'
  name: fade_in_duration
  types:
  - <xref:datetime.timedelta>
- description: 'The duration over which the overlay fades out of the input video.
    The

    value should be in ISO 8601 duration format. If not specified the default behavior
    is to have

    no fade out (same as PT0S).'
  name: fade_out_duration
  types:
  - <xref:datetime.timedelta>
- description: 'The gain level of audio in the overlay. The value should be in the

    range [0, 1.0]. The default is 1.0.'
  name: audio_gain_level
  types:
  - <xref:float>
methods:
- uid: azure.mgmt.media.models.Overlay.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.media.models.Overlay.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.Overlay.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.media.models.Overlay.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.Overlay.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.media.models.Overlay.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
