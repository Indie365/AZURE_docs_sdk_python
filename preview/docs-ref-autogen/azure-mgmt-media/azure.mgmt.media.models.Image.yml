### YamlMime:PythonClass
uid: azure.mgmt.media.models.Image
name: Image
fullName: azure.mgmt.media.models.Image
module: azure.mgmt.media.models
inheritances:
- azure.mgmt.media.models._models_py3.Video
summary: 'Describes the basic properties for generating thumbnails from the input
  video.


  You probably want to use the sub-classes and not this class directly. Known sub-classes
  are:

  JpgImage, PngImage


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'Image(*, start: str, label: str | None = None, key_frame_interval: timedelta
    | None = None, stretch_mode: str | _models.StretchMode | None = None, sync_mode:
    str | _models.VideoSyncMode | None = None, step: str | None = None, range: str
    | None = None, **kwargs)'
  parameters:
  - name: label
    description: 'An optional label for the codec. The label can be used to control
      muxing

      behavior.'
    types:
    - <xref:str>
  - name: key_frame_interval
    description: 'The distance between two key frames. The value should be non-zero

      in the range [0.5, 20] seconds, specified in ISO 8601 format. The default is
      2 seconds(PT2S).

      Note that this setting is ignored if VideoSyncMode.Passthrough is set, where
      the

      KeyFrameInterval value will follow the input source setting.'
    types:
    - <xref:datetime.timedelta>
  - name: stretch_mode
    description: 'The resizing mode - how the input video will be resized to fit the

      desired output resolution(s). Default is AutoSize. Known values are: "None",
      "AutoSize", and

      "AutoFit".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.media.models.StretchMode>
  - name: sync_mode
    description: 'The Video Sync Mode. Known values are: "Auto", "Passthrough", "Cfr",
      and

      "Vfr".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.media.models.VideoSyncMode>
  - name: start
    description: 'The position in the input video from where to start generating thumbnails.
      The

      value can be in ISO 8601 format (For example, PT05S to start at 5 seconds),
      or a frame count

      (For example, 10 to start at the 10th frame), or a relative value to stream
      duration (For

      example, 10% to start at 10% of stream duration). Also supports a macro {Best},
      which tells the

      encoder to select the best thumbnail from the first few seconds of the video
      and will only

      produce one thumbnail, no matter what other settings are for Step and Range.
      The default value

      is macro {Best}. Required.'
    types:
    - <xref:str>
  - name: step
    description: 'The intervals at which thumbnails are generated. The value can be
      in ISO 8601

      format (For example, PT05S for one image every 5 seconds), or a frame count
      (For example, 30

      for one image every 30 frames), or a relative value to stream duration (For
      example, 10% for

      one image every 10% of stream duration). Note: Step value will affect the first
      generated

      thumbnail, which may not be exactly the one specified at transform preset start
      time. This is

      due to the encoder, which tries to select the best thumbnail between start time
      and Step

      position from start time as the first output. As the default value is 10%, it
      means if stream

      has long duration, the first generated thumbnail might be far away from the
      one specified at

      start time. Try to select reasonable value for Step if the first thumbnail is
      expected close to

      start time, or set Range value at 1 if only one thumbnail is needed at start
      time.'
    types:
    - <xref:str>
  - name: range
    description: 'The position relative to transform preset start time in the input
      video at

      which to stop generating thumbnails. The value can be in ISO 8601 format (For
      example, PT5M30S

      to stop at 5 minutes and 30 seconds from start time), or a frame count (For
      example, 300 to

      stop at the 300th frame from the frame at start time. If this value is 1, it
      means only

      producing one thumbnail at start time), or a relative value to the stream duration
      (For

      example, 50% to stop at half of stream duration from start time). The default
      value is 100%,

      which means to stop at the end of the stream.'
    types:
    - <xref:str>
variables:
- description: The discriminator for derived types. Required.
  name: odata_type
  types:
  - <xref:str>
- description: An optional label for the codec. The label can be used to control muxing
    behavior.
  name: label
  types:
  - <xref:str>
- description: 'The distance between two key frames. The value should be non-zero
    in

    the range [0.5, 20] seconds, specified in ISO 8601 format. The default is 2 seconds(PT2S).
    Note

    that this setting is ignored if VideoSyncMode.Passthrough is set, where the KeyFrameInterval

    value will follow the input source setting.'
  name: key_frame_interval
  types:
  - <xref:datetime.timedelta>
- description: 'The resizing mode - how the input video will be resized to fit the
    desired

    output resolution(s). Default is AutoSize. Known values are: "None", "AutoSize",
    and "AutoFit".'
  name: stretch_mode
  types:
  - <xref:str>
  - <xref:azure.mgmt.media.models.StretchMode>
- description: 'The Video Sync Mode. Known values are: "Auto", "Passthrough", "Cfr",
    and

    "Vfr".'
  name: sync_mode
  types:
  - <xref:str>
  - <xref:azure.mgmt.media.models.VideoSyncMode>
- description: 'The position in the input video from where to start generating thumbnails.
    The

    value can be in ISO 8601 format (For example, PT05S to start at 5 seconds), or
    a frame count

    (For example, 10 to start at the 10th frame), or a relative value to stream duration
    (For

    example, 10% to start at 10% of stream duration). Also supports a macro {Best},
    which tells the

    encoder to select the best thumbnail from the first few seconds of the video and
    will only

    produce one thumbnail, no matter what other settings are for Step and Range. The
    default value

    is macro {Best}. Required.'
  name: start
  types:
  - <xref:str>
- description: 'The intervals at which thumbnails are generated. The value can be
    in ISO 8601

    format (For example, PT05S for one image every 5 seconds), or a frame count (For
    example, 30

    for one image every 30 frames), or a relative value to stream duration (For example,
    10% for

    one image every 10% of stream duration). Note: Step value will affect the first
    generated

    thumbnail, which may not be exactly the one specified at transform preset start
    time. This is

    due to the encoder, which tries to select the best thumbnail between start time
    and Step

    position from start time as the first output. As the default value is 10%, it
    means if stream

    has long duration, the first generated thumbnail might be far away from the one
    specified at

    start time. Try to select reasonable value for Step if the first thumbnail is
    expected close to

    start time, or set Range value at 1 if only one thumbnail is needed at start time.'
  name: step
  types:
  - <xref:str>
- description: 'The position relative to transform preset start time in the input
    video at which

    to stop generating thumbnails. The value can be in ISO 8601 format (For example,
    PT5M30S to

    stop at 5 minutes and 30 seconds from start time), or a frame count (For example,
    300 to stop

    at the 300th frame from the frame at start time. If this value is 1, it means
    only producing

    one thumbnail at start time), or a relative value to the stream duration (For
    example, 50% to

    stop at half of stream duration from start time). The default value is 100%, which
    means to

    stop at the end of the stream.'
  name: range
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.media.models.Image.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.media.models.Image.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.Image.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.media.models.Image.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.Image.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.media.models.Image.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
