### YamlMime:PythonClass
uid: azure.mgmt.media.models.LiveEventEncoding
name: LiveEventEncoding
fullName: azure.mgmt.media.models.LiveEventEncoding
module: azure.mgmt.media.models
inheritances:
- azure.mgmt.media._serialization.Model
summary: Specifies the live event type and optional encoding settings for encoding
  live events.
constructor:
  syntax: 'LiveEventEncoding(*, encoding_type: str | _models.LiveEventEncodingType
    | None = None, preset_name: str | None = None, stretch_mode: str | _models.StretchMode
    | None = None, key_frame_interval: timedelta | None = None, **kwargs)'
  parameters:
  - name: encoding_type
    description: 'Live event type. When encodingType is set to PassthroughBasic or

      PassthroughStandard, the service simply passes through the incoming video and
      audio layer(s) to

      the output. When encodingType is set to Standard or Premium1080p, a live encoder
      transcodes the

      incoming stream into multiple bitrates or layers. See

      [https://go.microsoft.com/fwlink/?linkid=2095101](https://go.microsoft.com/fwlink/?linkid=2095101)
      for more information. This property cannot be

      modified after the live event is created. Known values are: "None", "Standard",
      "Premium1080p",

      "PassthroughBasic", and "PassthroughStandard".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.media.models.LiveEventEncodingType>
  - name: preset_name
    description: 'The optional encoding preset name, used when encodingType is not
      None.

      This value is specified at creation time and cannot be updated. If the encodingType
      is set to

      Standard, then the default preset name is ''Default720p''. Else if the encodingType
      is set to

      Premium1080p, the default preset is ''Default1080p''.'
    types:
    - <xref:str>
  - name: stretch_mode
    description: 'Specifies how the input video will be resized to fit the desired
      output

      resolution(s). Default is None. Known values are: "None", "AutoSize", and "AutoFit".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.media.models.StretchMode>
  - name: key_frame_interval
    description: 'Use an ISO 8601 time value between 0.5 to 20 seconds to specify

      the output fragment length for the video and audio tracks of an encoding live
      event. For

      example, use PT2S to indicate 2 seconds. For the video track it also defines
      the key frame

      interval, or the length of a GoP (group of pictures).   If this value is not
      set for an

      encoding live event, the fragment duration defaults to 2 seconds. The value
      cannot be set for

      pass-through live events.'
    types:
    - <xref:datetime.timedelta>
variables:
- description: 'Live event type. When encodingType is set to PassthroughBasic or

    PassthroughStandard, the service simply passes through the incoming video and
    audio layer(s) to

    the output. When encodingType is set to Standard or Premium1080p, a live encoder
    transcodes the

    incoming stream into multiple bitrates or layers. See

    [https://go.microsoft.com/fwlink/?linkid=2095101](https://go.microsoft.com/fwlink/?linkid=2095101)
    for more information. This property cannot be

    modified after the live event is created. Known values are: "None", "Standard",
    "Premium1080p",

    "PassthroughBasic", and "PassthroughStandard".'
  name: encoding_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.media.models.LiveEventEncodingType>
- description: 'The optional encoding preset name, used when encodingType is not None.
    This

    value is specified at creation time and cannot be updated. If the encodingType
    is set to

    Standard, then the default preset name is ''Default720p''. Else if the encodingType
    is set to

    Premium1080p, the default preset is ''Default1080p''.'
  name: preset_name
  types:
  - <xref:str>
- description: 'Specifies how the input video will be resized to fit the desired output

    resolution(s). Default is None. Known values are: "None", "AutoSize", and "AutoFit".'
  name: stretch_mode
  types:
  - <xref:str>
  - <xref:azure.mgmt.media.models.StretchMode>
- description: 'Use an ISO 8601 time value between 0.5 to 20 seconds to specify the

    output fragment length for the video and audio tracks of an encoding live event.
    For example,

    use PT2S to indicate 2 seconds. For the video track it also defines the key frame
    interval, or

    the length of a GoP (group of pictures).   If this value is not set for an encoding
    live event,

    the fragment duration defaults to 2 seconds. The value cannot be set for pass-through
    live

    events.'
  name: key_frame_interval
  types:
  - <xref:datetime.timedelta>
methods:
- uid: azure.mgmt.media.models.LiveEventEncoding.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.media.models.LiveEventEncoding.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.LiveEventEncoding.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.media.models.LiveEventEncoding.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.LiveEventEncoding.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.media.models.LiveEventEncoding.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
