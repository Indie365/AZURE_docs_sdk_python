### YamlMime:PythonClass
uid: azure.mgmt.media.models.TransportStreamFormat
name: TransportStreamFormat
fullName: azure.mgmt.media.models.TransportStreamFormat
module: azure.mgmt.media.models
inheritances:
- azure.mgmt.media.models._models_py3.MultiBitrateFormat
summary: 'Describes the properties for generating an MPEG-2 Transport Stream (ISO/IEC
  13818-1) output video file(s).


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'TransportStreamFormat(*, filename_pattern: str, output_files: List[_models.OutputFile]
    | None = None, **kwargs)'
  parameters:
  - name: filename_pattern
    description: 'The pattern of the file names for the generated output files. The

      following macros are supported in the file name: {Basename} - An expansion macro
      that will use

      the name of the input video file. If the base name(the file suffix is not included)
      of the

      input video file is less than 32 characters long, the base name of input video
      files will be

      used. If the length of base name of the input video file exceeds 32 characters,
      the base name

      is truncated to the first 32 characters in total length. {Extension} - The appropriate

      extension for this format. {Label} - The label assigned to the codec/layer.
      {Index} - A unique

      index for thumbnails. Only applicable to thumbnails. {Bitrate} - The audio/video
      bitrate. Not

      applicable to thumbnails. {Codec} - The type of the audio/video codec. {Resolution}
      - The video

      resolution. Any unsubstituted macros will be collapsed and removed from the
      filename. Required.'
    types:
    - <xref:str>
  - name: output_files
    description: 'The list of output files to produce.  Each entry in the list is
      a set of

      audio and video layer labels to be muxed together .'
    types:
    - <xref:azure.mgmt.media.aio.operations.AccountFiltersOperations.list>[<xref:azure.mgmt.media.models.OutputFile>]
variables:
- description: The discriminator for derived types. Required.
  name: odata_type
  types:
  - <xref:str>
- description: 'The pattern of the file names for the generated output files. The

    following macros are supported in the file name: {Basename} - An expansion macro
    that will use

    the name of the input video file. If the base name(the file suffix is not included)
    of the

    input video file is less than 32 characters long, the base name of input video
    files will be

    used. If the length of base name of the input video file exceeds 32 characters,
    the base name

    is truncated to the first 32 characters in total length. {Extension} - The appropriate

    extension for this format. {Label} - The label assigned to the codec/layer. {Index}
    - A unique

    index for thumbnails. Only applicable to thumbnails. {Bitrate} - The audio/video
    bitrate. Not

    applicable to thumbnails. {Codec} - The type of the audio/video codec. {Resolution}
    - The video

    resolution. Any unsubstituted macros will be collapsed and removed from the filename.
    Required.'
  name: filename_pattern
  types:
  - <xref:str>
- description: 'The list of output files to produce.  Each entry in the list is a
    set of

    audio and video layer labels to be muxed together .'
  name: output_files
  types:
  - <xref:list>[<xref:azure.mgmt.media.models.OutputFile>]
methods:
- uid: azure.mgmt.media.models.TransportStreamFormat.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.media.models.TransportStreamFormat.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.TransportStreamFormat.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.media.models.TransportStreamFormat.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.TransportStreamFormat.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.media.models.TransportStreamFormat.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
