### YamlMime:PythonClass
uid: azure.mgmt.media.models.LiveEventPreview
name: LiveEventPreview
fullName: azure.mgmt.media.models.LiveEventPreview
module: azure.mgmt.media.models
inheritances:
- azure.mgmt.media._serialization.Model
summary: Live event preview settings.
constructor:
  syntax: 'LiveEventPreview(*, endpoints: List[_models.LiveEventEndpoint] | None =
    None, access_control: _models.LiveEventPreviewAccessControl | None = None, preview_locator:
    str | None = None, streaming_policy_name: str | None = None, alternative_media_id:
    str | None = None, **kwargs)'
  parameters:
  - name: endpoints
    description: 'The endpoints for preview. Do not share the preview URL with the
      live event

      audience.'
    types:
    - <xref:azure.mgmt.media.aio.operations.AccountFiltersOperations.list>[<xref:azure.mgmt.media.models.LiveEventEndpoint>]
  - name: access_control
    description: The access control for live event preview.
    types:
    - <xref:azure.mgmt.media.models.LiveEventPreviewAccessControl>
  - name: preview_locator
    description: 'The identifier of the preview locator in Guid format. Specifying
      this

      at creation time allows the caller to know the preview locator url before the
      event is created.

      If omitted, the service will generate a random identifier. This value cannot
      be updated once

      the live event is created.'
    types:
    - <xref:str>
  - name: streaming_policy_name
    description: 'The name of streaming policy used for the live event preview.

      This value is specified at creation time and cannot be updated.'
    types:
    - <xref:str>
  - name: alternative_media_id
    description: 'An alternative media identifier associated with the streaming

      locator created for the preview. This value is specified at creation time and
      cannot be

      updated. The identifier can be used in the CustomLicenseAcquisitionUrlTemplate
      or the

      CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName

      field.'
    types:
    - <xref:str>
variables:
- description: 'The endpoints for preview. Do not share the preview URL with the live
    event

    audience.'
  name: endpoints
  types:
  - <xref:list>[<xref:azure.mgmt.media.models.LiveEventEndpoint>]
- description: The access control for live event preview.
  name: access_control
  types:
  - <xref:azure.mgmt.media.models.LiveEventPreviewAccessControl>
- description: 'The identifier of the preview locator in Guid format. Specifying this
    at

    creation time allows the caller to know the preview locator url before the event
    is created. If

    omitted, the service will generate a random identifier. This value cannot be updated
    once the

    live event is created.'
  name: preview_locator
  types:
  - <xref:str>
- description: 'The name of streaming policy used for the live event preview. This

    value is specified at creation time and cannot be updated.'
  name: streaming_policy_name
  types:
  - <xref:str>
- description: 'An alternative media identifier associated with the streaming

    locator created for the preview. This value is specified at creation time and
    cannot be

    updated. The identifier can be used in the CustomLicenseAcquisitionUrlTemplate
    or the

    CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName

    field.'
  name: alternative_media_id
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.media.models.LiveEventPreview.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.media.models.LiveEventPreview.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.LiveEventPreview.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.media.models.LiveEventPreview.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.LiveEventPreview.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.media.models.LiveEventPreview.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
