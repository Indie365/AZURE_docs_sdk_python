### YamlMime:PythonClass
uid: azure.mgmt.media.models.PresetConfigurations
name: PresetConfigurations
fullName: azure.mgmt.media.models.PresetConfigurations
module: azure.mgmt.media.models
inheritances:
- azure.mgmt.media._serialization.Model
summary: An object of optional configuration settings for encoder.
constructor:
  syntax: 'PresetConfigurations(*, complexity: str | _models.Complexity | None = None,
    interleave_output: str | _models.InterleaveOutput | None = None, key_frame_interval_in_seconds:
    float | None = None, max_bitrate_bps: int | None = None, max_height: int | None
    = None, max_layers: int | None = None, min_bitrate_bps: int | None = None, min_height:
    int | None = None, **kwargs)'
  parameters:
  - name: complexity
    description: 'Allows you to configure the encoder settings to control the balance

      between speed and quality. Example: set Complexity as Speed for faster encoding
      but less

      compression efficiency. Known values are: "Speed", "Balanced", and "Quality".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.media.models.Complexity>
  - name: interleave_output
    description: 'Sets the interleave mode of the output to control how audio and

      video are stored in the container format. Example: set InterleavedOutput as

      NonInterleavedOutput to produce audio-only and video-only outputs in separate
      MP4 files. Known

      values are: "NonInterleavedOutput" and "InterleavedOutput".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.media.models.InterleaveOutput>
  - name: key_frame_interval_in_seconds
    description: 'The key frame interval in seconds. Example: set

      KeyFrameIntervalInSeconds as 2 to reduce the playback buffering for some players.'
    types:
    - <xref:float>
  - name: max_bitrate_bps
    description: 'The maximum bitrate in bits per second (threshold for the top video

      layer). Example: set MaxBitrateBps as 6000000 to avoid producing very high bitrate
      outputs for

      contents with high complexity.'
    types:
    - <xref:int>
  - name: max_height
    description: 'The maximum height of output video layers. Example: set MaxHeight
      as 720

      to produce output layers up to 720P even if the input is 4K.'
    types:
    - <xref:int>
  - name: max_layers
    description: 'The maximum number of output video layers. Example: set MaxLayers
      as 4 to

      make sure at most 4 output layers are produced to control the overall cost of
      the encoding job.'
    types:
    - <xref:int>
  - name: min_bitrate_bps
    description: 'The minimum bitrate in bits per second (threshold for the bottom

      video layer). Example: set MinBitrateBps as 200000 to have a bottom layer that
      covers users

      with low network bandwidth.'
    types:
    - <xref:int>
  - name: min_height
    description: 'The minimum height of output video layers. Example: set MinHeight
      as 360

      to avoid output layers of smaller resolutions like 180P.'
    types:
    - <xref:int>
variables:
- description: 'Allows you to configure the encoder settings to control the balance
    between

    speed and quality. Example: set Complexity as Speed for faster encoding but less
    compression

    efficiency. Known values are: "Speed", "Balanced", and "Quality".'
  name: complexity
  types:
  - <xref:str>
  - <xref:azure.mgmt.media.models.Complexity>
- description: 'Sets the interleave mode of the output to control how audio and video

    are stored in the container format. Example: set InterleavedOutput as NonInterleavedOutput
    to

    produce audio-only and video-only outputs in separate MP4 files. Known values
    are:

    "NonInterleavedOutput" and "InterleavedOutput".'
  name: interleave_output
  types:
  - <xref:str>
  - <xref:azure.mgmt.media.models.InterleaveOutput>
- description: 'The key frame interval in seconds. Example: set

    KeyFrameIntervalInSeconds as 2 to reduce the playback buffering for some players.'
  name: key_frame_interval_in_seconds
  types:
  - <xref:float>
- description: 'The maximum bitrate in bits per second (threshold for the top video

    layer). Example: set MaxBitrateBps as 6000000 to avoid producing very high bitrate
    outputs for

    contents with high complexity.'
  name: max_bitrate_bps
  types:
  - <xref:int>
- description: 'The maximum height of output video layers. Example: set MaxHeight
    as 720 to

    produce output layers up to 720P even if the input is 4K.'
  name: max_height
  types:
  - <xref:int>
- description: 'The maximum number of output video layers. Example: set MaxLayers
    as 4 to

    make sure at most 4 output layers are produced to control the overall cost of
    the encoding job.'
  name: max_layers
  types:
  - <xref:int>
- description: 'The minimum bitrate in bits per second (threshold for the bottom video

    layer). Example: set MinBitrateBps as 200000 to have a bottom layer that covers
    users with low

    network bandwidth.'
  name: min_bitrate_bps
  types:
  - <xref:int>
- description: 'The minimum height of output video layers. Example: set MinHeight
    as 360 to

    avoid output layers of smaller resolutions like 180P.'
  name: min_height
  types:
  - <xref:int>
methods:
- uid: azure.mgmt.media.models.PresetConfigurations.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.media.models.PresetConfigurations.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.PresetConfigurations.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.media.models.PresetConfigurations.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.media.models.PresetConfigurations.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.media.models.PresetConfigurations.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
