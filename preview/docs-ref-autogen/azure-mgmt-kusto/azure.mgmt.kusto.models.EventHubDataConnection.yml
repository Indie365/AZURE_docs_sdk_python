### YamlMime:PythonClass
uid: azure.mgmt.kusto.models.EventHubDataConnection
name: EventHubDataConnection
fullName: azure.mgmt.kusto.models.EventHubDataConnection
module: azure.mgmt.kusto.models
inheritances:
- azure.mgmt.kusto.models._models_py3.DataConnection
summary: 'Class representing an event hub data connection.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'EventHubDataConnection(*, location: str | None = None, event_hub_resource_id:
    str | None = None, consumer_group: str | None = None, table_name: str | None =
    None, mapping_rule_name: str | None = None, data_format: str | _models.EventHubDataFormat
    | None = None, event_system_properties: List[str] | None = None, compression:
    str | _models.Compression = ''None'', managed_identity_resource_id: str | None
    = None, database_routing: str | _models.DatabaseRouting | None = None, retrieval_start_date:
    datetime | None = None, **kwargs)'
  parameters:
  - name: location
    description: Resource location.
    types:
    - <xref:str>
  - name: event_hub_resource_id
    description: 'The resource ID of the event hub to be used to create a data

      connection.'
    types:
    - <xref:str>
  - name: consumer_group
    description: The event hub consumer group.
    types:
    - <xref:str>
  - name: table_name
    description: 'The table where the data should be ingested. Optionally the table

      information can be added to each message.'
    types:
    - <xref:str>
  - name: mapping_rule_name
    description: 'The mapping rule to be used to ingest the data. Optionally the

      mapping information can be added to each message.'
    types:
    - <xref:str>
  - name: data_format
    description: 'The data format of the message. Optionally the data format can be
      added

      to each message. Known values are: "MULTIJSON", "JSON", "CSV", "TSV", "SCSV",
      "SOHSV", "PSV",

      "TXT", "RAW", "SINGLEJSON", "AVRO", "TSVE", "PARQUET", "ORC", "APACHEAVRO",
      and "W3CLOGFILE".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.kusto.models.EventHubDataFormat>
  - name: event_system_properties
    description: System properties of the event hub.
    types:
    - <xref:azure.mgmt.kusto.aio.operations.ClusterPrincipalAssignmentsOperations.list>[<xref:str>]
  - name: compression
    description: 'The event hub messages compression type. Known values are: "None"
      and

      "GZip".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.kusto.models.Compression>
  - name: managed_identity_resource_id
    description: 'The resource ID of a managed identity (system or user

      assigned) to be used to authenticate with event hub.'
    types:
    - <xref:str>
  - name: database_routing
    description: 'Indication for database routing information from the data

      connection, by default only database routing information is allowed. Known values
      are: "Single"

      and "Multi".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.kusto.models.DatabaseRouting>
  - name: retrieval_start_date
    description: 'When defined, the data connection retrieves existing Event hub

      events created since the Retrieval start date. It can only retrieve events retained
      by the

      Event hub, based on its retention period.'
    types:
    - <xref:datetime.datetime>
variables:
- description: 'Fully qualified resource ID for the resource. Ex -

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: 'The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
    or

    "Microsoft.Storage/storageAccounts".'
  name: type
  types:
  - <xref:str>
- description: Resource location.
  name: location
  types:
  - <xref:str>
- description: 'Kind of the endpoint for the data connection. Required. Known values
    are:

    "EventHub", "EventGrid", "IotHub", and "CosmosDb".'
  name: kind
  types:
  - <xref:str>
  - <xref:azure.mgmt.kusto.models.DataConnectionKind>
- description: 'The resource ID of the event hub to be used to create a data

    connection.'
  name: event_hub_resource_id
  types:
  - <xref:str>
- description: The event hub consumer group.
  name: consumer_group
  types:
  - <xref:str>
- description: 'The table where the data should be ingested. Optionally the table
    information

    can be added to each message.'
  name: table_name
  types:
  - <xref:str>
- description: 'The mapping rule to be used to ingest the data. Optionally the mapping

    information can be added to each message.'
  name: mapping_rule_name
  types:
  - <xref:str>
- description: 'The data format of the message. Optionally the data format can be
    added to

    each message. Known values are: "MULTIJSON", "JSON", "CSV", "TSV", "SCSV", "SOHSV",
    "PSV",

    "TXT", "RAW", "SINGLEJSON", "AVRO", "TSVE", "PARQUET", "ORC", "APACHEAVRO", and
    "W3CLOGFILE".'
  name: data_format
  types:
  - <xref:str>
  - <xref:azure.mgmt.kusto.models.EventHubDataFormat>
- description: System properties of the event hub.
  name: event_system_properties
  types:
  - <xref:list>[<xref:str>]
- description: 'The event hub messages compression type. Known values are: "None"
    and

    "GZip".'
  name: compression
  types:
  - <xref:str>
  - <xref:azure.mgmt.kusto.models.Compression>
- description: 'The provisioned state of the resource. Known values are: "Running",

    "Creating", "Deleting", "Succeeded", "Failed", "Moving", and "Canceled".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.kusto.models.ProvisioningState>
- description: 'The resource ID of a managed identity (system or user

    assigned) to be used to authenticate with event hub.'
  name: managed_identity_resource_id
  types:
  - <xref:str>
- description: The object ID of the managedIdentityResourceId.
  name: managed_identity_object_id
  types:
  - <xref:str>
- description: 'Indication for database routing information from the data connection,

    by default only database routing information is allowed. Known values are: "Single"
    and

    "Multi".'
  name: database_routing
  types:
  - <xref:str>
  - <xref:azure.mgmt.kusto.models.DatabaseRouting>
- description: 'When defined, the data connection retrieves existing Event hub

    events created since the Retrieval start date. It can only retrieve events retained
    by the

    Event hub, based on its retention period.'
  name: retrieval_start_date
  types:
  - <xref:datetime.datetime>
methods:
- uid: azure.mgmt.kusto.models.EventHubDataConnection.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.kusto.models.EventHubDataConnection.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.kusto.models.EventHubDataConnection.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.kusto.models.EventHubDataConnection.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.kusto.models.EventHubDataConnection.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.kusto.models.EventHubDataConnection.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
