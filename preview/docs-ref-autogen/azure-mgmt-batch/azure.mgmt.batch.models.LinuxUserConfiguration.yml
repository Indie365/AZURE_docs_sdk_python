### YamlMime:PythonClass
uid: azure.mgmt.batch.models.LinuxUserConfiguration
name: LinuxUserConfiguration
fullName: azure.mgmt.batch.models.LinuxUserConfiguration
module: azure.mgmt.batch.models
inheritances:
- msrest.serialization.Model
summary: Properties used to create a user account on a Linux node.
constructor:
  syntax: 'LinuxUserConfiguration(*, uid: int | None = None, gid: int | None = None,
    ssh_private_key: str | None = None, **kwargs)'
  parameters:
  - name: uid
    description: 'The uid and gid properties must be specified together or not at
      all. If not

      specified the underlying operating system picks the uid.'
    types:
    - <xref:int>
  - name: gid
    description: 'The uid and gid properties must be specified together or not at
      all. If not

      specified the underlying operating system picks the gid.'
    types:
    - <xref:int>
  - name: ssh_private_key
    description: 'The private key must not be password protected. The private key
      is

      used to automatically configure asymmetric-key based authentication for SSH
      between nodes in a

      Linux pool when the pool''s enableInterNodeCommunication property is true (it
      is ignored if

      enableInterNodeCommunication is false). It does this by placing the key pair
      into the user''s

      .ssh directory. If not specified, password-less SSH is not configured between
      nodes (no

      modification of the user''s .ssh directory is done).'
    types:
    - <xref:str>
variables:
- description: 'The uid and gid properties must be specified together or not at all.
    If not

    specified the underlying operating system picks the uid.'
  name: uid
  types:
  - <xref:int>
- description: 'The uid and gid properties must be specified together or not at all.
    If not

    specified the underlying operating system picks the gid.'
  name: gid
  types:
  - <xref:int>
- description: 'The private key must not be password protected. The private key is
    used

    to automatically configure asymmetric-key based authentication for SSH between
    nodes in a Linux

    pool when the pool''s enableInterNodeCommunication property is true (it is ignored
    if

    enableInterNodeCommunication is false). It does this by placing the key pair into
    the user''s

    .ssh directory. If not specified, password-less SSH is not configured between
    nodes (no

    modification of the user''s .ssh directory is done).'
  name: ssh_private_key
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.batch.models.LinuxUserConfiguration.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.batch.models.LinuxUserConfiguration.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.batch.models.LinuxUserConfiguration.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.batch.models.LinuxUserConfiguration.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.batch.models.LinuxUserConfiguration.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.batch.models.LinuxUserConfiguration.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.batch.models.LinuxUserConfiguration.validate
  name: validate
  summary: Validate this model recursively and return a list of ValidationError.
  signature: validate()
  return:
    description: A list of validation error
    types:
    - <xref:list>
