### YamlMime:PythonClass
uid: azure.mgmt.databox.v2022_12_01.models.CopyProgress
name: CopyProgress
fullName: azure.mgmt.databox.v2022_12_01.models.CopyProgress
module: azure.mgmt.databox.v2022_12_01.models
inheritances:
- azure.mgmt.databox._serialization.Model
summary: 'Copy progress.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'CopyProgress(**kwargs: Any)'
variables:
- description: 'Name of the storage account. This will be empty for data account

    types other than storage account.'
  name: storage_account_name
  types:
  - <xref:str>
- description: 'Transfer type of data. Known values are: "ImportToAzure" and

    "ExportFromAzure".'
  name: transfer_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.databox.v2022_12_01.models.TransferType>
- description: 'Data Account Type. Known values are: "StorageAccount" and

    "ManagedDisk".'
  name: data_account_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.databox.v2022_12_01.models.DataAccountType>
- description: Id of the account where the data needs to be uploaded.
  name: account_id
  types:
  - <xref:str>
- description: To indicate bytes transferred.
  name: bytes_processed
  types:
  - <xref:int>
- description: Total amount of data to be processed by the job.
  name: total_bytes_to_process
  types:
  - <xref:int>
- description: Number of files processed.
  name: files_processed
  types:
  - <xref:int>
- description: Total files to process.
  name: total_files_to_process
  types:
  - <xref:int>
- description: 'Number of files not adhering to azure naming conventions which

    were processed by automatic renaming.'
  name: invalid_files_processed
  types:
  - <xref:int>
- description: 'Total amount of data not adhering to azure naming

    conventions which were processed by automatic renaming.'
  name: invalid_file_bytes_uploaded
  types:
  - <xref:int>
- description: 'Number of folders not adhering to azure naming conventions which

    were processed by automatic renaming.'
  name: renamed_container_count
  types:
  - <xref:int>
- description: Number of files which could not be copied.
  name: files_errored_out
  types:
  - <xref:int>
- description: To indicate directories errored out in the job.
  name: directories_errored_out
  types:
  - <xref:int>
- description: To indicate directories renamed.
  name: invalid_directories_processed
  types:
  - <xref:int>
- description: 'To indicate if enumeration of data is in progress.

    Until this is true, the TotalBytesToProcess may not be valid.'
  name: is_enumeration_in_progress
  types:
  - <xref:bool>
methods:
- uid: azure.mgmt.databox.v2022_12_01.models.CopyProgress.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.databox.v2022_12_01.models.CopyProgress.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.databox.v2022_12_01.models.CopyProgress.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.databox.v2022_12_01.models.CopyProgress.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.databox.v2022_12_01.models.CopyProgress.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.databox.v2022_12_01.models.CopyProgress.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
