### YamlMime:PythonClass
uid: azure.mgmt.redisenterprise.models.DatabaseUpdate
name: DatabaseUpdate
fullName: azure.mgmt.redisenterprise.models.DatabaseUpdate
module: azure.mgmt.redisenterprise.models
inheritances:
- azure.mgmt.redisenterprise._serialization.Model
summary: 'A partial update to the RedisEnterprise database.


  Variables are only populated by the server, and will be ignored when sending a request.'
constructor:
  syntax: 'DatabaseUpdate(*, client_protocol: str | _models.Protocol | None = None,
    port: int | None = None, clustering_policy: str | _models.ClusteringPolicy | None
    = None, eviction_policy: str | _models.EvictionPolicy | None = None, persistence:
    _models.Persistence | None = None, modules: List[_models.Module] | None = None,
    geo_replication: _models.DatabasePropertiesGeoReplication | None = None, **kwargs:
    Any)'
  parameters:
  - name: client_protocol
    description: 'Specifies whether redis clients can connect using TLS-encrypted
      or

      plaintext redis protocols. Default is TLS-encrypted. Known values are: "Encrypted"
      and

      "Plaintext".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.redisenterprise.models.Protocol>
  - name: port
    description: 'TCP port of the database endpoint. Specified at create time. Defaults
      to an

      available port.'
    types:
    - <xref:int>
  - name: clustering_policy
    description: 'Clustering policy - default is OSSCluster. Specified at create

      time. Known values are: "EnterpriseCluster" and "OSSCluster".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.redisenterprise.models.ClusteringPolicy>
  - name: eviction_policy
    description: 'Redis eviction policy - default is VolatileLRU. Known values are:

      "AllKeysLFU", "AllKeysLRU", "AllKeysRandom", "VolatileLRU", "VolatileLFU", "VolatileTTL",

      "VolatileRandom", and "NoEviction".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.redisenterprise.models.EvictionPolicy>
  - name: persistence
    description: Persistence settings.
    types:
    - <xref:azure.mgmt.redisenterprise.models.Persistence>
  - name: modules
    description: 'Optional set of redis modules to enable in this database - modules
      can only

      be added at creation time.'
    types:
    - <xref:azure.mgmt.redisenterprise.aio.operations.Operations.list>[<xref:azure.mgmt.redisenterprise.models.Module>]
  - name: geo_replication
    description: 'Optional set of properties to configure geo replication for this

      database.'
    types:
    - <xref:azure.mgmt.redisenterprise.models.DatabasePropertiesGeoReplication>
variables:
- description: 'Specifies whether redis clients can connect using TLS-encrypted or

    plaintext redis protocols. Default is TLS-encrypted. Known values are: "Encrypted"
    and

    "Plaintext".'
  name: client_protocol
  types:
  - <xref:str>
  - <xref:azure.mgmt.redisenterprise.models.Protocol>
- description: 'TCP port of the database endpoint. Specified at create time. Defaults
    to an

    available port.'
  name: port
  types:
  - <xref:int>
- description: 'Current provisioning status of the database. Known values are:

    "Succeeded", "Failed", "Canceled", "Creating", "Updating", and "Deleting".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.redisenterprise.models.ProvisioningState>
- description: 'Current resource status of the database. Known values are: "Running",

    "Creating", "CreateFailed", "Updating", "UpdateFailed", "Deleting", "DeleteFailed",
    "Enabling",

    "EnableFailed", "Disabling", "DisableFailed", and "Disabled".'
  name: resource_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.redisenterprise.models.ResourceState>
- description: 'Clustering policy - default is OSSCluster. Specified at create time.

    Known values are: "EnterpriseCluster" and "OSSCluster".'
  name: clustering_policy
  types:
  - <xref:str>
  - <xref:azure.mgmt.redisenterprise.models.ClusteringPolicy>
- description: 'Redis eviction policy - default is VolatileLRU. Known values are:

    "AllKeysLFU", "AllKeysLRU", "AllKeysRandom", "VolatileLRU", "VolatileLFU", "VolatileTTL",

    "VolatileRandom", and "NoEviction".'
  name: eviction_policy
  types:
  - <xref:str>
  - <xref:azure.mgmt.redisenterprise.models.EvictionPolicy>
- description: Persistence settings.
  name: persistence
  types:
  - <xref:azure.mgmt.redisenterprise.models.Persistence>
- description: 'Optional set of redis modules to enable in this database - modules
    can only be

    added at creation time.'
  name: modules
  types:
  - <xref:list>[<xref:azure.mgmt.redisenterprise.models.Module>]
- description: 'Optional set of properties to configure geo replication for this

    database.'
  name: geo_replication
  types:
  - <xref:azure.mgmt.redisenterprise.models.DatabasePropertiesGeoReplication>
methods:
- uid: azure.mgmt.redisenterprise.models.DatabaseUpdate.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.redisenterprise.models.DatabaseUpdate.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.redisenterprise.models.DatabaseUpdate.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.redisenterprise.models.DatabaseUpdate.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.redisenterprise.models.DatabaseUpdate.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.redisenterprise.models.DatabaseUpdate.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
