### YamlMime:PythonClass
uid: azure.mgmt.managedservices.models.Authorization
name: Authorization
fullName: azure.mgmt.managedservices.models.Authorization
module: azure.mgmt.managedservices.models
inheritances:
- azure.mgmt.managedservices._serialization.Model
summary: 'The Azure Active Directory principal identifier and Azure built-in role
  that describes the access the principal will receive on the delegated resource in
  the managed tenant.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'Authorization(*, principal_id: str, role_definition_id: str, principal_id_display_name:
    str | None = None, delegated_role_definition_ids: List[str] | None = None, **kwargs)'
  parameters:
  - name: principal_id
    description: The identifier of the Azure Active Directory principal. Required.
    types:
    - <xref:str>
  - name: principal_id_display_name
    description: The display name of the Azure Active Directory principal.
    types:
    - <xref:str>
  - name: role_definition_id
    description: 'The identifier of the Azure built-in role that defines the

      permissions that the Azure Active Directory principal will have on the projected
      scope.

      Required.'
    types:
    - <xref:str>
  - name: delegated_role_definition_ids
    description: 'The delegatedRoleDefinitionIds field is required when

      the roleDefinitionId refers to the User Access Administrator Role. It is the
      list of role

      definition ids which define all the permissions that the user in the authorization
      can assign

      to other principals.'
    types:
    - <xref:azure.mgmt.managedservices.aio.operations.MarketplaceRegistrationDefinitionsOperations.list>[<xref:str>]
variables:
- description: The identifier of the Azure Active Directory principal. Required.
  name: principal_id
  types:
  - <xref:str>
- description: The display name of the Azure Active Directory principal.
  name: principal_id_display_name
  types:
  - <xref:str>
- description: 'The identifier of the Azure built-in role that defines the

    permissions that the Azure Active Directory principal will have on the projected
    scope.

    Required.'
  name: role_definition_id
  types:
  - <xref:str>
- description: 'The delegatedRoleDefinitionIds field is required when the

    roleDefinitionId refers to the User Access Administrator Role. It is the list
    of role

    definition ids which define all the permissions that the user in the authorization
    can assign

    to other principals.'
  name: delegated_role_definition_ids
  types:
  - <xref:list>[<xref:str>]
methods:
- uid: azure.mgmt.managedservices.models.Authorization.as_dict
  name: as_dict
  summary: "Return a dict that can be JSONify using json.dump.\n\nAdvanced usage might\
    \ optionally use a callback as parameter:\n\nKey is the attribute name used in\
    \ Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with the\n\
    msrest type and 'key' with the RestAPI encoded key.\nValue is the current value\
    \ in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: as_dict(keep_readonly=True, key_transformer=<function attribute_transformer>,
    **kwargs)
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.managedservices.models.Authorization.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: deserialize(data, content_type=None)
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.managedservices.models.Authorization.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending()
- uid: azure.mgmt.managedservices.models.Authorization.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: from_dict(data, key_extractors=None, content_type=None)
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.managedservices.models.Authorization.is_xml_model
  name: is_xml_model
  signature: is_xml_model()
- uid: azure.mgmt.managedservices.models.Authorization.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: serialize(keep_readonly=False, **kwargs)
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
