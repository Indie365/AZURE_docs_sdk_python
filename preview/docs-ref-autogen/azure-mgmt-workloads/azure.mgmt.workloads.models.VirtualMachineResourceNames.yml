### YamlMime:PythonClass
uid: azure.mgmt.workloads.models.VirtualMachineResourceNames
name: VirtualMachineResourceNames
fullName: azure.mgmt.workloads.models.VirtualMachineResourceNames
module: azure.mgmt.workloads.models
inheritances:
- azure.mgmt.workloads._serialization.Model
summary: The resource names object for virtual machine and related resources.
constructor:
  syntax: 'VirtualMachineResourceNames(*, vm_name: str | None = None, host_name: str
    | None = None, network_interfaces: List[_models.NetworkInterfaceResourceNames]
    | None = None, os_disk_name: str | None = None, data_disk_names: Dict[str, List[str]]
    | None = None, **kwargs: Any)'
  parameters:
  - name: vm_name
    description: 'The full name for virtual machine. The length of this field can
      be upto 64

      characters. If name is not provided, service uses a default name based on the
      deployment type.

      For SingleServer, default name is {SID}vm. In case of HA-AvZone systems, default
      name will be

      {SID}{app/ascs/db}z{a/b}vm with an incrementor at the end in case of more than
      1 vm per layer.

      For distributed and HA-AvSet systems, default name will be {SID}{app/ascs/db}vm
      with an

      incrementor at the end in case of more than 1 vm per layer.'
    types:
    - <xref:str>
  - name: host_name
    description: 'The full name for virtual-machine''s host (computer name). Currently,
      ACSS

      only supports host names which are less than or equal to 13 characters long.
      If this value is

      not provided, vmName will be used as host name.'
    types:
    - <xref:str>
  - name: network_interfaces
    description: 'The list of network interface name objects for the selected

      virtual machine. Currently, only one network interface is supported per virtual
      machine.'
    types:
    - <xref:azure.mgmt.workloads.aio.operations.MonitorsOperations.list>[<xref:azure.mgmt.workloads.models.NetworkInterfaceResourceNames>]
  - name: os_disk_name
    description: 'The full name for OS disk attached to the VM. If this value is not

      provided, it will be named by ARM as per its default naming standards (prefixed
      with vm name).

      There is only one OS disk attached per Virtual Machine.'
    types:
    - <xref:str>
  - name: data_disk_names
    description: 'The full resource names for virtual machine data disks. This is
      a

      dictionary containing list of names of data disks per volume. Currently supported
      volumes for

      database layer are [''hana/data'', ''hana/log'', hana/shared'', ''usr/sap'',
      ''os'', ''backup'']. For

      application and cs layers, only ''default'' volume is supported.'
    types:
    - <xref:dict>[<xref:str>, <xref:azure.mgmt.workloads.aio.operations.MonitorsOperations.list>[<xref:str>]]
variables:
- description: 'The full name for virtual machine. The length of this field can be
    upto 64

    characters. If name is not provided, service uses a default name based on the
    deployment type.

    For SingleServer, default name is {SID}vm. In case of HA-AvZone systems, default
    name will be

    {SID}{app/ascs/db}z{a/b}vm with an incrementor at the end in case of more than
    1 vm per layer.

    For distributed and HA-AvSet systems, default name will be {SID}{app/ascs/db}vm
    with an

    incrementor at the end in case of more than 1 vm per layer.'
  name: vm_name
  types:
  - <xref:str>
- description: 'The full name for virtual-machine''s host (computer name). Currently,
    ACSS only

    supports host names which are less than or equal to 13 characters long. If this
    value is not

    provided, vmName will be used as host name.'
  name: host_name
  types:
  - <xref:str>
- description: 'The list of network interface name objects for the selected virtual

    machine. Currently, only one network interface is supported per virtual machine.'
  name: network_interfaces
  types:
  - <xref:list>[<xref:azure.mgmt.workloads.models.NetworkInterfaceResourceNames>]
- description: 'The full name for OS disk attached to the VM. If this value is not

    provided, it will be named by ARM as per its default naming standards (prefixed
    with vm name).

    There is only one OS disk attached per Virtual Machine.'
  name: os_disk_name
  types:
  - <xref:str>
- description: 'The full resource names for virtual machine data disks. This is a

    dictionary containing list of names of data disks per volume. Currently supported
    volumes for

    database layer are [''hana/data'', ''hana/log'', hana/shared'', ''usr/sap'', ''os'',
    ''backup'']. For

    application and cs layers, only ''default'' volume is supported.'
  name: data_disk_names
  types:
  - <xref:dict>[<xref:str>, <xref:list>[<xref:str>]]
methods:
- uid: azure.mgmt.workloads.models.VirtualMachineResourceNames.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.workloads.models.VirtualMachineResourceNames.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.workloads.models.VirtualMachineResourceNames.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.workloads.models.VirtualMachineResourceNames.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.workloads.models.VirtualMachineResourceNames.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.workloads.models.VirtualMachineResourceNames.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
